2020-03-23 12:33:49,346 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-03-23 12:33:49,496 INFO [org.geoserver] - Loading catalog...
2020-03-23 12:33:49,585 INFO [org.geoserver] - Loaded style 'population'
2020-03-23 12:33:49,586 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-03-23 12:33:49,588 INFO [org.geoserver] - Loaded style 'green'
2020-03-23 12:33:49,590 INFO [org.geoserver] - Loaded style 'line'
2020-03-23 12:33:49,592 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-03-23 12:33:49,593 INFO [org.geoserver] - Loaded style 'polygon'
2020-03-23 12:33:49,595 INFO [org.geoserver] - Loaded style 'dem'
2020-03-23 12:33:49,597 INFO [org.geoserver] - Loaded style 'restricted'
2020-03-23 12:33:49,599 INFO [org.geoserver] - Loaded style 'poi'
2020-03-23 12:33:49,600 INFO [org.geoserver] - Loaded style 'pophatch'
2020-03-23 12:33:49,602 INFO [org.geoserver] - Loaded style 'grass'
2020-03-23 12:33:49,605 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-03-23 12:33:49,606 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-03-23 12:33:49,608 INFO [org.geoserver] - Loaded style 'capitals'
2020-03-23 12:33:49,609 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-03-23 12:33:49,615 INFO [org.geoserver] - Loaded style 'raster'
2020-03-23 12:33:49,616 INFO [org.geoserver] - Loaded style 'rain'
2020-03-23 12:33:49,617 INFO [org.geoserver] - Loaded style 'burg'
2020-03-23 12:33:49,620 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-03-23 12:33:49,621 INFO [org.geoserver] - Loaded style 'point'
2020-03-23 12:33:49,628 INFO [org.geoserver] - Loaded style 'generic'
2020-03-23 12:33:49,630 INFO [org.geoserver] - Loaded default workspace cite
2020-03-23 12:33:49,658 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-03-23 12:33:49,666 INFO [org.geoserver] - Loaded workspace 'cite'
2020-03-23 12:33:49,671 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-03-23 12:33:49,674 INFO [org.geoserver] - Loaded workspace 'sde'
2020-03-23 12:33:49,676 INFO [org.geoserver] - Loaded workspace 'sf'
2020-03-23 12:33:49,678 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-03-23 12:33:49,681 INFO [org.geoserver] - Loaded workspace 'topp'
2020-03-23 12:33:50,326 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-03-23 12:33:51,800 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-03-23 12:33:51,823 INFO [org.geoserver] - Loaded layer 'poi'
2020-03-23 12:33:51,832 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-03-23 12:33:51,838 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-03-23 12:33:51,847 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-03-23 12:33:51,853 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-03-23 12:33:51,860 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-03-23 12:33:51,864 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-03-23 12:33:51,873 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-03-23 12:33:52,315 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-03-23 12:33:52,317 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-03-23 12:33:52,324 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-03-23 12:33:52,339 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-03-23 12:33:52,344 INFO [org.geoserver] - Loaded layer 'roads'
2020-03-23 12:33:52,350 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-03-23 12:33:52,358 INFO [org.geoserver] - Loaded layer 'restricted'
2020-03-23 12:33:52,366 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-03-23 12:33:52,370 INFO [org.geoserver] - Loaded layer 'archsites'
2020-03-23 12:33:52,377 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-03-23 12:33:52,383 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-03-23 12:33:52,393 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-03-23 12:33:52,399 INFO [org.geoserver] - Loaded layer 'streams'
2020-03-23 12:33:52,406 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-03-23 12:33:52,425 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-03-23 12:33:52,430 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-03-23 12:33:52,433 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-03-23 12:33:52,447 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-03-23 12:33:52,451 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-03-23 12:33:52,454 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-03-23 12:33:52,459 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-03-23 12:33:52,461 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-03-23 12:33:52,463 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-03-23 12:33:52,473 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-03-23 12:33:52,474 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-03-23 12:33:52,483 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-03-23 12:33:52,493 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-03-23 12:33:52,495 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-03-23 12:33:52,504 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-03-23 12:33:52,516 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-03-23 12:33:52,533 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-03-23 12:33:52,547 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-03-23 12:33:52,551 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-03-23 12:33:52,554 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-03-23 12:33:52,564 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-03-23 12:33:52,570 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-03-23 12:33:52,576 INFO [org.geoserver] - Loaded layer 'states'
2020-03-23 12:33:52,597 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-03-23 12:33:52,608 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-03-23 12:33:52,614 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-03-23 12:33:52,620 INFO [org.geoserver] - Read catalog in 3.122 s
2020-03-23 12:33:52,778 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl--3f8fdd86:17107629289:-8000', enabled
2020-03-23 12:33:52,789 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-03-23 12:33:52,807 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-03-23 12:33:52,833 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-03-23 12:33:52,871 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 12:33:52,959 WARN [config.GeoserverXMLResourceProvider] - Found no configuration file in config directory, will create one at 'gwc/geowebcache.xml' from template jar:file:/opt/geoserver/webapps/geoserver/WEB-INF/lib/gwc-core-1.16.2.jar!/geowebcache_empty.xml
2020-03-23 12:33:52,964 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 12:33:52,967 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 12:33:53,071 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-23 12:33:53,073 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-03-23 12:33:53,076 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-03-23 12:33:53,078 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-23 12:33:53,182 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-03-23 12:33:53,184 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-03-23 12:33:53,248 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-03-23 12:33:53,249 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-03-23 12:33:53,249 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-03-23 12:33:53,251 INFO [gwc.layer] - Loaded 0 tile layers in 1.429 ms
2020-03-23 12:33:53,264 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-03-23 12:33:53,274 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-23 12:33:53,274 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-03-23 12:33:53,275 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-23 12:33:53,353 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-03-23 12:33:53,565 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,059 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,065 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,066 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,066 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,067 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,092 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,098 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,099 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,100 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,124 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,151 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,152 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,152 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,152 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,152 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,182 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,183 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,184 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,184 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,184 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,185 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,185 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,185 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,186 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,186 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,186 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,186 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,187 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,187 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,187 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,187 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,188 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,188 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,188 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,189 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,189 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,189 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,212 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,212 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,231 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,231 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,244 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,259 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,259 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,271 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,271 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,296 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,296 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,314 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,316 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,317 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,328 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,329 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,330 INFO [filter.function] - Looking for functions but the catalog still has not been set into QueryLayerFunctionFactory
2020-03-23 12:33:54,534 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 12:33:54,545 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 12:33:54,549 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-23 12:33:54,563 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-23 12:33:54,567 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-03-23 12:33:54,569 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-03-23 12:33:54,587 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-03-23 12:33:54,685 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-03-23 12:33:54,904 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-03-23 12:33:54,925 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-03-23 12:33:54,937 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-03-23 12:33:55,082 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-03-23 12:33:55,082 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-03-23 12:33:55,917 INFO [cluster.impl] - Using brokerURI: vm://a048253470aa-bd030475c1de?create=false&waitForStart=5000
2020-03-23 12:33:58,045 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-03-23 12:34:04,162 INFO [cluster.impl] - Starting the embedded brokerURI
2020-03-23 12:34:04,513 WARN [impl.JMSXBeanBrokerFactory$1] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'broker' defined in class path resource [broker.xml]: Cannot create inner bean 'transportConnector#64a7c885' of type [org.apache.activemq.broker.TransportConnector] while setting bean property 'transportConnectors' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#64a7c885' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://127.0.0.1:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
2020-03-23 12:34:04,518 ERROR [cluster.impl] - Error creating bean with name 'broker' defined in class path resource [broker.xml]: Cannot create inner bean 'transportConnector#64a7c885' of type [org.apache.activemq.broker.TransportConnector] while setting bean property 'transportConnectors' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#64a7c885' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://127.0.0.1:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'broker' defined in class path resource [broker.xml]: Cannot create inner bean 'transportConnector#64a7c885' of type [org.apache.activemq.broker.TransportConnector] while setting bean property 'transportConnectors' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#64a7c885' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://127.0.0.1:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:327)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:124)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:401)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:159)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:88)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:76)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:72)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:68)
	at org.geoserver.cluster.impl.JMSXBeanBrokerFactory$1.<init>(JMSXBeanBrokerFactory.java:26)
	at org.geoserver.cluster.impl.JMSXBeanBrokerFactory.createApplicationContext(JMSXBeanBrokerFactory.java:26)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:67)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.startEmbeddedBroker(JMSActiveMQFactory.java:205)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.init(JMSActiveMQFactory.java:309)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:350)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:34)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#64a7c885' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://127.0.0.1:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:584)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	... 80 more
Caused by: org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://127.0.0.1:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.AbstractNestablePropertyAccessor.convertIfNecessary(AbstractNestablePropertyAccessor.java:595)
	at org.springframework.beans.AbstractNestablePropertyAccessor.convertForProperty(AbstractNestablePropertyAccessor.java:604)
	at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.convertForProperty(AbstractAutowireCapableBeanFactory.java:1697)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1653)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	... 82 more
Caused by: java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://127.0.0.1:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.propertyeditors.URIEditor.setAsText(URIEditor.java:122)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:466)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:439)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:192)
	at org.springframework.beans.AbstractNestablePropertyAccessor.convertIfNecessary(AbstractNestablePropertyAccessor.java:585)
	... 88 more
2020-03-23 12:34:04,904 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-03-23 12:34:04,908 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-03-23 12:34:05,569 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-03-23 12:34:05,574 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-03-23 12:34:05,686 INFO [geoserver.importer] - Enabling import store: memory
2020-03-23 12:34:05,686 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-23 12:34:05,687 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-23 12:34:35,452 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-03-23 12:34:35,455 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-03-23 12:34:35,460 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-03-23 12:34:35,463 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-03-23 12:34:35,463 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-03-23 12:34:35,468 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-03-23 12:34:35,468 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-03-23 12:34:35,474 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-03-23 12:34:35,476 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-03-23 12:34:35,476 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-03-23 12:34:35,477 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-03-23 12:34:47,679 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-03-23 12:34:47,768 INFO [org.geoserver] - Loading catalog...
2020-03-23 12:34:47,826 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-03-23 12:34:47,829 INFO [org.geoserver] - Loaded style 'green'
2020-03-23 12:34:47,830 INFO [org.geoserver] - Loaded style 'population'
2020-03-23 12:34:47,832 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-03-23 12:34:47,833 INFO [org.geoserver] - Loaded style 'polygon'
2020-03-23 12:34:47,836 INFO [org.geoserver] - Loaded style 'dem'
2020-03-23 12:34:47,838 INFO [org.geoserver] - Loaded style 'restricted'
2020-03-23 12:34:47,840 INFO [org.geoserver] - Loaded style 'poi'
2020-03-23 12:34:47,841 INFO [org.geoserver] - Loaded style 'pophatch'
2020-03-23 12:34:47,842 INFO [org.geoserver] - Loaded style 'grass'
2020-03-23 12:34:47,843 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-03-23 12:34:47,849 INFO [org.geoserver] - Loaded style 'capitals'
2020-03-23 12:34:47,851 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-03-23 12:34:47,852 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-03-23 12:34:47,853 INFO [org.geoserver] - Loaded style 'raster'
2020-03-23 12:34:47,856 INFO [org.geoserver] - Loaded style 'rain'
2020-03-23 12:34:47,859 INFO [org.geoserver] - Loaded style 'burg'
2020-03-23 12:34:47,860 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-03-23 12:34:47,861 INFO [org.geoserver] - Loaded style 'point'
2020-03-23 12:34:47,863 INFO [org.geoserver] - Loaded style 'generic'
2020-03-23 12:34:47,864 INFO [org.geoserver] - Loaded style 'line'
2020-03-23 12:34:47,865 INFO [org.geoserver] - Loaded default workspace cite
2020-03-23 12:34:47,889 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-03-23 12:34:47,896 INFO [org.geoserver] - Loaded workspace 'sde'
2020-03-23 12:34:47,899 INFO [org.geoserver] - Loaded workspace 'sf'
2020-03-23 12:34:47,901 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-03-23 12:34:47,904 INFO [org.geoserver] - Loaded workspace 'topp'
2020-03-23 12:34:47,909 INFO [org.geoserver] - Loaded workspace 'cite'
2020-03-23 12:34:47,915 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-03-23 12:34:48,585 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-03-23 12:34:49,835 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-03-23 12:34:49,854 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-03-23 12:34:49,859 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-03-23 12:34:49,865 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-03-23 12:34:49,870 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-03-23 12:34:49,873 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-03-23 12:34:49,881 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-03-23 12:34:49,887 INFO [org.geoserver] - Loaded layer 'poi'
2020-03-23 12:34:49,903 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-03-23 12:34:50,316 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-03-23 12:34:50,318 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-03-23 12:34:50,324 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-03-23 12:34:50,345 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-03-23 12:34:50,352 INFO [org.geoserver] - Loaded layer 'roads'
2020-03-23 12:34:50,365 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-03-23 12:34:50,372 INFO [org.geoserver] - Loaded layer 'restricted'
2020-03-23 12:34:50,381 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-03-23 12:34:50,386 INFO [org.geoserver] - Loaded layer 'archsites'
2020-03-23 12:34:50,395 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-03-23 12:34:50,399 INFO [org.geoserver] - Loaded layer 'streams'
2020-03-23 12:34:50,407 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-03-23 12:34:50,411 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-03-23 12:34:50,421 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-03-23 12:34:50,440 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-03-23 12:34:50,442 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-03-23 12:34:50,444 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-03-23 12:34:50,449 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-03-23 12:34:50,451 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-03-23 12:34:50,454 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-03-23 12:34:50,459 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-03-23 12:34:50,462 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-03-23 12:34:50,464 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-03-23 12:34:50,469 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-03-23 12:34:50,471 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-03-23 12:34:50,485 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-03-23 12:34:50,496 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-03-23 12:34:50,500 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-03-23 12:34:50,511 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-03-23 12:34:50,518 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-03-23 12:34:50,522 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-03-23 12:34:50,524 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-03-23 12:34:50,529 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-03-23 12:34:50,532 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-03-23 12:34:50,541 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-03-23 12:34:50,549 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-03-23 12:34:50,554 INFO [org.geoserver] - Loaded layer 'states'
2020-03-23 12:34:50,566 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-03-23 12:34:50,570 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-03-23 12:34:50,574 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-03-23 12:34:50,586 INFO [org.geoserver] - Read catalog in 2.815 s
2020-03-23 12:34:50,714 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-55725cdb:171076374da:-8000', enabled
2020-03-23 12:34:50,726 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-03-23 12:34:50,744 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-03-23 12:34:50,763 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-03-23 12:34:50,789 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 12:34:50,861 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 12:34:50,862 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 12:34:50,863 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 12:34:50,960 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-23 12:34:50,960 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-03-23 12:34:50,960 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-03-23 12:34:50,961 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-23 12:34:51,020 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-03-23 12:34:51,023 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-03-23 12:34:51,065 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-03-23 12:34:51,067 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-03-23 12:34:51,069 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-03-23 12:34:51,119 INFO [gwc.layer] - Loaded 22 tile layers in 48.55 ms
2020-03-23 12:34:51,131 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-03-23 12:34:51,140 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-23 12:34:51,141 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-03-23 12:34:51,141 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-23 12:34:51,256 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-03-23 12:34:51,381 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 12:34:51,395 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 12:34:51,427 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-23 12:34:51,444 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-23 12:34:51,446 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-03-23 12:34:51,446 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-03-23 12:34:51,455 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-03-23 12:34:51,487 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-03-23 12:34:51,700 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-03-23 12:34:51,721 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-03-23 12:34:51,733 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-03-23 12:34:51,842 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-03-23 12:34:51,842 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-03-23 12:34:52,758 INFO [cluster.impl] - Using brokerURI: vm://a048253470aa-dae5dfe5ed63?create=false&waitForStart=5000
2020-03-23 12:34:55,059 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-03-23 12:35:01,578 INFO [cluster.impl] - Starting the embedded brokerURI
2020-03-23 12:35:01,934 WARN [impl.JMSXBeanBrokerFactory$1] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'broker' defined in class path resource [broker.xml]: Cannot create inner bean 'transportConnector#7b054614' of type [org.apache.activemq.broker.TransportConnector] while setting bean property 'transportConnectors' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#7b054614' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.23.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
2020-03-23 12:35:01,939 ERROR [cluster.impl] - Error creating bean with name 'broker' defined in class path resource [broker.xml]: Cannot create inner bean 'transportConnector#7b054614' of type [org.apache.activemq.broker.TransportConnector] while setting bean property 'transportConnectors' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#7b054614' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.23.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'broker' defined in class path resource [broker.xml]: Cannot create inner bean 'transportConnector#7b054614' of type [org.apache.activemq.broker.TransportConnector] while setting bean property 'transportConnectors' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#7b054614' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.23.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:327)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:124)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:401)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:159)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:88)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:76)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:72)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:68)
	at org.geoserver.cluster.impl.JMSXBeanBrokerFactory$1.<init>(JMSXBeanBrokerFactory.java:26)
	at org.geoserver.cluster.impl.JMSXBeanBrokerFactory.createApplicationContext(JMSXBeanBrokerFactory.java:26)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:67)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.startEmbeddedBroker(JMSActiveMQFactory.java:205)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.init(JMSActiveMQFactory.java:309)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:350)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:34)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#7b054614' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.23.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:584)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	... 80 more
Caused by: org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.23.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.AbstractNestablePropertyAccessor.convertIfNecessary(AbstractNestablePropertyAccessor.java:595)
	at org.springframework.beans.AbstractNestablePropertyAccessor.convertForProperty(AbstractNestablePropertyAccessor.java:604)
	at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.convertForProperty(AbstractAutowireCapableBeanFactory.java:1697)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1653)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	... 82 more
Caused by: java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.23.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.propertyeditors.URIEditor.setAsText(URIEditor.java:122)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:466)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:439)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:192)
	at org.springframework.beans.AbstractNestablePropertyAccessor.convertIfNecessary(AbstractNestablePropertyAccessor.java:585)
	... 88 more
2020-03-23 12:35:02,525 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-03-23 12:35:02,536 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-03-23 12:35:02,708 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-03-23 12:35:02,714 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-03-23 12:35:02,764 INFO [geoserver.importer] - Enabling import store: memory
2020-03-23 12:35:02,769 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-23 12:35:02,771 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-23 12:35:36,627 INFO [geoserver.security] - Strong cryptography is available
2020-03-23 12:36:04,235 INFO [cluster.impl] - Using brokerURI: vm://a048253470aa-dae5dfe5ed63?create=false&waitForStart=5000
2020-03-23 12:36:04,240 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-03-23 12:36:09,300 ERROR [geoserver.cluster] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-dae5dfe5ed63' does not exist.
2020-03-23 12:36:09,301 ERROR [cluster.server] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-dae5dfe5ed63' does not exist.
2020-03-23 12:36:09,315 INFO [cluster.impl] - Using brokerURI: vm://a048253470aa-dae5dfe5ed63?create=false&waitForStart=5000
2020-03-23 12:36:09,316 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogAddEventHandlerSPI
2020-03-23 12:36:14,320 ERROR [geoserver.cluster] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-dae5dfe5ed63' does not exist.
2020-03-23 12:36:14,321 ERROR [cluster.server] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-dae5dfe5ed63' does not exist.
2020-03-23 12:36:14,321 INFO [geoserver.web] - Error storing workspace related objects.
org.geoserver.catalog.CatalogException: javax.jms.JMSException: Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-dae5dfe5ed63' does not exist.
	at org.geoserver.cluster.server.JMSCatalogListener.handleAddEvent(JMSCatalogListener.java:128)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1709)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1670)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1659)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:1306)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1266)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:566)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:571)
	at org.geoserver.web.data.workspace.WorkspaceNewPage.handleOnSubmit(WorkspaceNewPage.java:128)
	at org.geoserver.web.data.workspace.WorkspaceNewPage.access$000(WorkspaceNewPage.java:32)
	at org.geoserver.web.data.workspace.WorkspaceNewPage$1.onSubmit(WorkspaceNewPage.java:49)
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1315)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:976)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:797)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:708)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:258)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:216)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:241)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:234)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:895)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:159)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:901)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:873)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1623)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:122)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:158)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1602)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:540)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:146)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1700)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1345)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:480)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1667)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1247)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:220)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:152)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)
	at org.eclipse.jetty.server.Server.handle(Server.java:505)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:370)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:267)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:698)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:804)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: javax.jms.JMSException: Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-dae5dfe5ed63' does not exist.
	at org.geoserver.cluster.JMSPublisher.publish(JMSPublisher.java:71)
	at org.geoserver.cluster.server.JMSCatalogListener.handleAddEvent(JMSCatalogListener.java:123)
	... 134 more
Caused by: org.springframework.jms.UncategorizedJmsException: Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-dae5dfe5ed63' does not exist.
	at org.springframework.jms.support.JmsUtils.convertJmsAccessException(JmsUtils.java:311)
	at org.springframework.jms.support.JmsAccessor.convertJmsAccessException(JmsAccessor.java:185)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:507)
	at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:576)
	at org.geoserver.cluster.JMSPublisher.publish(JMSPublisher.java:65)
	... 135 more
Caused by: javax.jms.JMSException: Error while attempting to add new Connection to the pool
	at org.apache.activemq.jms.pool.PooledConnectionFactory.createJmsException(PooledConnectionFactory.java:266)
	at org.apache.activemq.jms.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:225)
	at org.apache.activemq.jms.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:204)
	at org.springframework.jms.support.JmsAccessor.createConnection(JmsAccessor.java:196)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:494)
	... 137 more
Caused by: javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-dae5dfe5ed63' does not exist.
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:36)
	at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:333)
	at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:346)
	at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:304)
	at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:244)
	at org.apache.activemq.jms.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:275)
	at org.apache.activemq.jms.pool.PooledConnectionFactory$1.makeObject(PooledConnectionFactory.java:95)
	at org.apache.activemq.jms.pool.PooledConnectionFactory$1.makeObject(PooledConnectionFactory.java:92)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.create(GenericKeyedObjectPool.java:1041)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.addObject(GenericKeyedObjectPool.java:1238)
	at org.apache.activemq.jms.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:221)
	... 140 more
Caused by: java.io.IOException: Broker named 'a048253470aa-dae5dfe5ed63' does not exist.
	at org.apache.activemq.transport.vm.VMTransportFactory.doCompositeConnect(VMTransportFactory.java:119)
	at org.apache.activemq.transport.vm.VMTransportFactory.doConnect(VMTransportFactory.java:56)
	at org.apache.activemq.transport.TransportFactory.connect(TransportFactory.java:65)
	at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:331)
	... 149 more
2020-03-23 12:36:14,329 INFO [cluster.impl] - Using brokerURI: vm://a048253470aa-dae5dfe5ed63?create=false&waitForStart=5000
2020-03-23 12:36:14,329 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-03-23 12:36:19,334 ERROR [geoserver.cluster] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-dae5dfe5ed63' does not exist.
2020-03-23 12:36:19,334 ERROR [cluster.server] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-dae5dfe5ed63' does not exist.
2020-03-23 12:36:19,341 INFO [cluster.impl] - Using brokerURI: vm://a048253470aa-dae5dfe5ed63?create=false&waitForStart=5000
2020-03-23 12:36:19,342 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogRemoveEventHandlerSPI
2020-03-23 12:36:24,344 ERROR [geoserver.cluster] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-dae5dfe5ed63' does not exist.
2020-03-23 12:36:24,345 ERROR [cluster.server] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-dae5dfe5ed63' does not exist.
2020-03-23 12:39:51,281 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-03-23 12:39:51,282 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-03-23 12:39:51,284 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-03-23 12:39:51,284 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-03-23 12:39:51,285 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-03-23 12:39:51,288 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-03-23 12:39:51,288 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-03-23 12:39:51,291 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-03-23 12:39:51,293 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-03-23 12:39:51,293 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-03-23 12:39:51,294 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-03-23 12:40:04,628 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-03-23 12:40:04,762 INFO [org.geoserver] - Loading catalog...
2020-03-23 12:40:04,828 INFO [org.geoserver] - Loaded style 'population'
2020-03-23 12:40:04,830 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-03-23 12:40:04,832 INFO [org.geoserver] - Loaded style 'line'
2020-03-23 12:40:04,833 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-03-23 12:40:04,836 INFO [org.geoserver] - Loaded style 'polygon'
2020-03-23 12:40:04,837 INFO [org.geoserver] - Loaded style 'dem'
2020-03-23 12:40:04,837 INFO [org.geoserver] - Loaded style 'restricted'
2020-03-23 12:40:04,838 INFO [org.geoserver] - Loaded style 'poi'
2020-03-23 12:40:04,841 INFO [org.geoserver] - Loaded style 'pophatch'
2020-03-23 12:40:04,842 INFO [org.geoserver] - Loaded style 'grass'
2020-03-23 12:40:04,843 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-03-23 12:40:04,844 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-03-23 12:40:04,846 INFO [org.geoserver] - Loaded style 'capitals'
2020-03-23 12:40:04,847 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-03-23 12:40:04,848 INFO [org.geoserver] - Loaded style 'raster'
2020-03-23 12:40:04,850 INFO [org.geoserver] - Loaded style 'rain'
2020-03-23 12:40:04,851 INFO [org.geoserver] - Loaded style 'burg'
2020-03-23 12:40:04,852 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-03-23 12:40:04,853 INFO [org.geoserver] - Loaded style 'point'
2020-03-23 12:40:04,854 INFO [org.geoserver] - Loaded style 'generic'
2020-03-23 12:40:04,855 INFO [org.geoserver] - Loaded style 'green'
2020-03-23 12:40:04,857 INFO [org.geoserver] - Loaded default workspace cite
2020-03-23 12:40:04,882 INFO [org.geoserver] - Loaded workspace 'cite'
2020-03-23 12:40:04,887 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-03-23 12:40:04,893 INFO [org.geoserver] - Loaded workspace 'sf'
2020-03-23 12:40:04,895 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-03-23 12:40:04,897 INFO [org.geoserver] - Loaded workspace 'topp'
2020-03-23 12:40:04,899 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-03-23 12:40:04,901 INFO [org.geoserver] - Loaded workspace 'sde'
2020-03-23 12:40:05,662 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-03-23 12:40:06,902 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-03-23 12:40:06,925 INFO [org.geoserver] - Loaded layer 'poi'
2020-03-23 12:40:06,931 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-03-23 12:40:06,934 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-03-23 12:40:06,942 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-03-23 12:40:06,947 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-03-23 12:40:06,953 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-03-23 12:40:06,960 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-03-23 12:40:06,998 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-03-23 12:40:07,411 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-03-23 12:40:07,414 INFO [org.geoserver] - Loaded layer 'roads'
2020-03-23 12:40:07,421 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-03-23 12:40:07,424 INFO [org.geoserver] - Loaded layer 'restricted'
2020-03-23 12:40:07,435 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-03-23 12:40:07,444 INFO [org.geoserver] - Loaded layer 'archsites'
2020-03-23 12:40:07,454 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-03-23 12:40:07,459 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-03-23 12:40:07,475 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-03-23 12:40:07,484 INFO [org.geoserver] - Loaded layer 'streams'
2020-03-23 12:40:07,492 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-03-23 12:40:07,532 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-03-23 12:40:07,540 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-03-23 12:40:07,545 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-03-23 12:40:07,555 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-03-23 12:40:07,559 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-03-23 12:40:07,564 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-03-23 12:40:07,579 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-03-23 12:40:07,585 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-03-23 12:40:07,589 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-03-23 12:40:07,596 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-03-23 12:40:07,601 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-03-23 12:40:07,603 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-03-23 12:40:07,608 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-03-23 12:40:07,611 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-03-23 12:40:07,621 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-03-23 12:40:07,628 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-03-23 12:40:07,632 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-03-23 12:40:07,644 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-03-23 12:40:07,650 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-03-23 12:40:07,654 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-03-23 12:40:07,658 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-03-23 12:40:07,663 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-03-23 12:40:07,668 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-03-23 12:40:07,676 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-03-23 12:40:07,685 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-03-23 12:40:07,689 INFO [org.geoserver] - Loaded layer 'states'
2020-03-23 12:40:07,708 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-03-23 12:40:07,720 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-03-23 12:40:07,724 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-03-23 12:40:07,730 INFO [org.geoserver] - Read catalog in 2.966 s
2020-03-23 12:40:07,895 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl--17cc3877:17107684bd5:-8000', enabled
2020-03-23 12:40:07,906 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-03-23 12:40:07,928 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-03-23 12:40:07,953 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-03-23 12:40:07,990 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 12:40:08,088 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 12:40:08,091 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 12:40:08,093 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 12:40:08,237 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-23 12:40:08,242 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-03-23 12:40:08,242 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-03-23 12:40:08,242 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-23 12:40:08,377 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-03-23 12:40:08,380 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-03-23 12:40:08,425 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-03-23 12:40:08,428 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-03-23 12:40:08,428 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-03-23 12:40:08,475 INFO [gwc.layer] - Loaded 22 tile layers in 45.99 ms
2020-03-23 12:40:08,493 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-03-23 12:40:08,504 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-23 12:40:08,504 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-03-23 12:40:08,504 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-23 12:40:08,590 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-03-23 12:40:08,706 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 12:40:08,725 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 12:40:08,730 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-23 12:40:08,744 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-23 12:40:08,747 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-03-23 12:40:08,748 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-03-23 12:40:08,767 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-03-23 12:40:08,822 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-03-23 12:40:09,064 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-03-23 12:40:09,096 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-03-23 12:40:09,103 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-03-23 12:40:09,275 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-03-23 12:40:09,276 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-03-23 12:40:10,261 INFO [cluster.impl] - Using brokerURI: vm://a048253470aa-5be9e4258b22?create=false&waitForStart=5000
2020-03-23 12:40:13,293 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-03-23 12:40:20,569 INFO [cluster.impl] - Starting the embedded brokerURI
2020-03-23 12:40:20,923 WARN [impl.JMSXBeanBrokerFactory$1] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'broker' defined in class path resource [broker.xml]: Cannot create inner bean 'transportConnector#b9f4b1f' of type [org.apache.activemq.broker.TransportConnector] while setting bean property 'transportConnectors' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#b9f4b1f' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.23.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true
2020-03-23 12:40:20,930 ERROR [cluster.impl] - Error creating bean with name 'broker' defined in class path resource [broker.xml]: Cannot create inner bean 'transportConnector#b9f4b1f' of type [org.apache.activemq.broker.TransportConnector] while setting bean property 'transportConnectors' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#b9f4b1f' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.23.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'broker' defined in class path resource [broker.xml]: Cannot create inner bean 'transportConnector#b9f4b1f' of type [org.apache.activemq.broker.TransportConnector] while setting bean property 'transportConnectors' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#b9f4b1f' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.23.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:327)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:124)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:401)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:159)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:88)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:76)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:72)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:68)
	at org.geoserver.cluster.impl.JMSXBeanBrokerFactory$1.<init>(JMSXBeanBrokerFactory.java:26)
	at org.geoserver.cluster.impl.JMSXBeanBrokerFactory.createApplicationContext(JMSXBeanBrokerFactory.java:26)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:67)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.startEmbeddedBroker(JMSActiveMQFactory.java:205)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.init(JMSActiveMQFactory.java:309)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:350)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:34)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#b9f4b1f' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.23.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:584)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	... 80 more
Caused by: org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.23.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true
	at org.springframework.beans.AbstractNestablePropertyAccessor.convertIfNecessary(AbstractNestablePropertyAccessor.java:595)
	at org.springframework.beans.AbstractNestablePropertyAccessor.convertForProperty(AbstractNestablePropertyAccessor.java:604)
	at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.convertForProperty(AbstractAutowireCapableBeanFactory.java:1697)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1653)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	... 82 more
Caused by: java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.23.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true
	at org.springframework.beans.propertyeditors.URIEditor.setAsText(URIEditor.java:122)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:466)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:439)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:192)
	at org.springframework.beans.AbstractNestablePropertyAccessor.convertIfNecessary(AbstractNestablePropertyAccessor.java:585)
	... 88 more
2020-03-23 12:40:21,577 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-03-23 12:40:21,584 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-03-23 12:40:21,731 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-03-23 12:40:21,731 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-03-23 12:40:21,741 INFO [geoserver.importer] - Enabling import store: memory
2020-03-23 12:40:21,742 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-23 12:40:21,742 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-23 12:41:02,546 INFO [geoserver.security] - Strong cryptography is available
2020-03-23 12:41:15,298 INFO [cluster.impl] - Using brokerURI: vm://a048253470aa-5be9e4258b22?create=false&waitForStart=5000
2020-03-23 12:41:15,303 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-03-23 12:41:20,355 ERROR [geoserver.cluster] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-5be9e4258b22' does not exist.
2020-03-23 12:41:20,356 ERROR [cluster.server] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-5be9e4258b22' does not exist.
2020-03-23 12:41:20,365 INFO [cluster.impl] - Using brokerURI: vm://a048253470aa-5be9e4258b22?create=false&waitForStart=5000
2020-03-23 12:41:20,366 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogAddEventHandlerSPI
2020-03-23 12:41:25,370 ERROR [geoserver.cluster] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-5be9e4258b22' does not exist.
2020-03-23 12:41:25,371 ERROR [cluster.server] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-5be9e4258b22' does not exist.
2020-03-23 12:41:25,372 INFO [geoserver.web] - Error storing workspace related objects.
org.geoserver.catalog.CatalogException: javax.jms.JMSException: Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-5be9e4258b22' does not exist.
	at org.geoserver.cluster.server.JMSCatalogListener.handleAddEvent(JMSCatalogListener.java:128)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1709)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1670)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1659)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:1306)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1266)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:566)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:571)
	at org.geoserver.web.data.workspace.WorkspaceNewPage.handleOnSubmit(WorkspaceNewPage.java:128)
	at org.geoserver.web.data.workspace.WorkspaceNewPage.access$000(WorkspaceNewPage.java:32)
	at org.geoserver.web.data.workspace.WorkspaceNewPage$1.onSubmit(WorkspaceNewPage.java:49)
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1315)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:976)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:797)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:708)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:258)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:216)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:241)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:234)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:895)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:159)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:901)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:873)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1623)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:122)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:158)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1602)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:540)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:146)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1700)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1345)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:480)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1667)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1247)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:220)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:152)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)
	at org.eclipse.jetty.server.Server.handle(Server.java:505)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:370)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:267)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:698)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:804)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: javax.jms.JMSException: Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-5be9e4258b22' does not exist.
	at org.geoserver.cluster.JMSPublisher.publish(JMSPublisher.java:71)
	at org.geoserver.cluster.server.JMSCatalogListener.handleAddEvent(JMSCatalogListener.java:123)
	... 134 more
Caused by: org.springframework.jms.UncategorizedJmsException: Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-5be9e4258b22' does not exist.
	at org.springframework.jms.support.JmsUtils.convertJmsAccessException(JmsUtils.java:311)
	at org.springframework.jms.support.JmsAccessor.convertJmsAccessException(JmsAccessor.java:185)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:507)
	at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:576)
	at org.geoserver.cluster.JMSPublisher.publish(JMSPublisher.java:65)
	... 135 more
Caused by: javax.jms.JMSException: Error while attempting to add new Connection to the pool
	at org.apache.activemq.jms.pool.PooledConnectionFactory.createJmsException(PooledConnectionFactory.java:266)
	at org.apache.activemq.jms.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:225)
	at org.apache.activemq.jms.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:204)
	at org.springframework.jms.support.JmsAccessor.createConnection(JmsAccessor.java:196)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:494)
	... 137 more
Caused by: javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-5be9e4258b22' does not exist.
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:36)
	at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:333)
	at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:346)
	at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:304)
	at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:244)
	at org.apache.activemq.jms.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:275)
	at org.apache.activemq.jms.pool.PooledConnectionFactory$1.makeObject(PooledConnectionFactory.java:95)
	at org.apache.activemq.jms.pool.PooledConnectionFactory$1.makeObject(PooledConnectionFactory.java:92)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.create(GenericKeyedObjectPool.java:1041)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.addObject(GenericKeyedObjectPool.java:1238)
	at org.apache.activemq.jms.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:221)
	... 140 more
Caused by: java.io.IOException: Broker named 'a048253470aa-5be9e4258b22' does not exist.
	at org.apache.activemq.transport.vm.VMTransportFactory.doCompositeConnect(VMTransportFactory.java:119)
	at org.apache.activemq.transport.vm.VMTransportFactory.doConnect(VMTransportFactory.java:56)
	at org.apache.activemq.transport.TransportFactory.connect(TransportFactory.java:65)
	at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:331)
	... 149 more
2020-03-23 12:41:25,381 INFO [cluster.impl] - Using brokerURI: vm://a048253470aa-5be9e4258b22?create=false&waitForStart=5000
2020-03-23 12:41:25,381 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-03-23 12:41:30,388 ERROR [geoserver.cluster] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-5be9e4258b22' does not exist.
2020-03-23 12:41:30,388 ERROR [cluster.server] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-5be9e4258b22' does not exist.
2020-03-23 12:41:30,394 INFO [cluster.impl] - Using brokerURI: vm://a048253470aa-5be9e4258b22?create=false&waitForStart=5000
2020-03-23 12:41:30,394 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogRemoveEventHandlerSPI
2020-03-23 12:41:35,397 ERROR [geoserver.cluster] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-5be9e4258b22' does not exist.
2020-03-23 12:41:35,397 ERROR [cluster.server] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'a048253470aa-5be9e4258b22' does not exist.
2020-03-23 12:43:27,643 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-03-23 12:43:27,644 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-03-23 12:43:27,645 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-03-23 12:43:27,646 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-03-23 12:43:27,646 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-03-23 12:43:27,649 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-03-23 12:43:27,649 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-03-23 12:43:27,650 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-03-23 12:43:27,652 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-03-23 12:43:27,652 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-03-23 12:43:27,653 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-03-23 13:20:04,918 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-03-23 13:20:05,011 INFO [org.geoserver] - Loading catalog...
2020-03-23 13:20:05,097 INFO [org.geoserver] - Loaded style 'population'
2020-03-23 13:20:05,098 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-03-23 13:20:05,099 INFO [org.geoserver] - Loaded style 'green'
2020-03-23 13:20:05,100 INFO [org.geoserver] - Loaded style 'line'
2020-03-23 13:20:05,101 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-03-23 13:20:05,102 INFO [org.geoserver] - Loaded style 'polygon'
2020-03-23 13:20:05,103 INFO [org.geoserver] - Loaded style 'dem'
2020-03-23 13:20:05,104 INFO [org.geoserver] - Loaded style 'restricted'
2020-03-23 13:20:05,105 INFO [org.geoserver] - Loaded style 'poi'
2020-03-23 13:20:05,106 INFO [org.geoserver] - Loaded style 'pophatch'
2020-03-23 13:20:05,108 INFO [org.geoserver] - Loaded style 'grass'
2020-03-23 13:20:05,109 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-03-23 13:20:05,111 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-03-23 13:20:05,112 INFO [org.geoserver] - Loaded style 'capitals'
2020-03-23 13:20:05,113 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-03-23 13:20:05,116 INFO [org.geoserver] - Loaded style 'raster'
2020-03-23 13:20:05,117 INFO [org.geoserver] - Loaded style 'rain'
2020-03-23 13:20:05,118 INFO [org.geoserver] - Loaded style 'burg'
2020-03-23 13:20:05,119 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-03-23 13:20:05,120 INFO [org.geoserver] - Loaded style 'point'
2020-03-23 13:20:05,122 INFO [org.geoserver] - Loaded style 'generic'
2020-03-23 13:20:05,125 INFO [org.geoserver] - Loaded default workspace cite
2020-03-23 13:20:05,168 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-03-23 13:20:05,177 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-03-23 13:20:05,180 INFO [org.geoserver] - Loaded workspace 'cite'
2020-03-23 13:20:05,182 INFO [org.geoserver] - Loaded workspace 'sf'
2020-03-23 13:20:05,184 INFO [org.geoserver] - Loaded workspace 'sde'
2020-03-23 13:20:05,186 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-03-23 13:20:05,189 INFO [org.geoserver] - Loaded workspace 'topp'
2020-03-23 13:20:05,939 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-03-23 13:20:07,194 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-03-23 13:20:07,214 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-03-23 13:20:07,219 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-03-23 13:20:07,227 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-03-23 13:20:07,234 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-03-23 13:20:07,240 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-03-23 13:20:07,247 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-03-23 13:20:07,253 INFO [org.geoserver] - Loaded layer 'poi'
2020-03-23 13:20:07,265 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-03-23 13:20:07,728 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-03-23 13:20:07,731 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-03-23 13:20:07,737 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-03-23 13:20:07,746 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-03-23 13:20:07,751 INFO [org.geoserver] - Loaded layer 'roads'
2020-03-23 13:20:07,761 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-03-23 13:20:07,766 INFO [org.geoserver] - Loaded layer 'restricted'
2020-03-23 13:20:07,775 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-03-23 13:20:07,780 INFO [org.geoserver] - Loaded layer 'archsites'
2020-03-23 13:20:07,788 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-03-23 13:20:07,793 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-03-23 13:20:07,801 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-03-23 13:20:07,805 INFO [org.geoserver] - Loaded layer 'streams'
2020-03-23 13:20:07,812 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-03-23 13:20:07,830 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-03-23 13:20:07,833 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-03-23 13:20:07,836 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-03-23 13:20:07,842 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-03-23 13:20:07,844 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-03-23 13:20:07,846 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-03-23 13:20:07,857 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-03-23 13:20:07,861 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-03-23 13:20:07,866 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-03-23 13:20:07,871 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-03-23 13:20:07,872 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-03-23 13:20:07,881 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-03-23 13:20:07,891 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-03-23 13:20:07,895 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-03-23 13:20:07,904 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-03-23 13:20:07,915 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-03-23 13:20:07,921 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-03-23 13:20:07,927 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-03-23 13:20:07,937 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-03-23 13:20:07,938 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-03-23 13:20:07,949 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-03-23 13:20:07,958 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-03-23 13:20:07,963 INFO [org.geoserver] - Loaded layer 'states'
2020-03-23 13:20:07,982 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-03-23 13:20:07,992 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-03-23 13:20:07,994 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-03-23 13:20:07,999 INFO [org.geoserver] - Read catalog in 2.987 s
2020-03-23 13:20:08,195 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl--4fafd52:171078cec02:-8000', enabled
2020-03-23 13:20:08,220 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-03-23 13:20:08,254 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-03-23 13:20:08,290 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-03-23 13:20:08,334 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 13:20:08,432 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 13:20:08,433 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 13:20:08,434 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 13:20:08,560 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-23 13:20:08,560 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-03-23 13:20:08,560 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-03-23 13:20:08,561 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-23 13:20:08,633 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-03-23 13:20:08,635 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-03-23 13:20:08,682 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-03-23 13:20:08,682 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-03-23 13:20:08,683 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-03-23 13:20:08,719 INFO [gwc.layer] - Loaded 22 tile layers in 35.84 ms
2020-03-23 13:20:08,735 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-03-23 13:20:08,747 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-23 13:20:08,750 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-03-23 13:20:08,751 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-23 13:20:08,829 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-03-23 13:20:08,954 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 13:20:08,965 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 13:20:08,968 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-23 13:20:08,984 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-23 13:20:08,987 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-03-23 13:20:08,988 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-03-23 13:20:09,000 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-03-23 13:20:09,037 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-03-23 13:20:09,278 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-03-23 13:20:09,302 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-03-23 13:20:09,307 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-03-23 13:20:09,471 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-03-23 13:20:09,472 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-03-23 13:20:10,276 INFO [cluster.impl] - Using brokerURI: vm://f24519a4c02a-47a94642aa53?create=false&waitForStart=5000
2020-03-23 13:20:12,469 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-03-23 13:20:19,230 INFO [cluster.impl] - Starting the embedded brokerURI
2020-03-23 13:20:19,575 WARN [impl.JMSXBeanBrokerFactory$1] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'broker' defined in class path resource [broker.xml]: Cannot create inner bean 'transportConnector#2d38e275' of type [org.apache.activemq.broker.TransportConnector] while setting bean property 'transportConnectors' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#2d38e275' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.25.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
2020-03-23 13:20:19,581 ERROR [cluster.impl] - Error creating bean with name 'broker' defined in class path resource [broker.xml]: Cannot create inner bean 'transportConnector#2d38e275' of type [org.apache.activemq.broker.TransportConnector] while setting bean property 'transportConnectors' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#2d38e275' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.25.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'broker' defined in class path resource [broker.xml]: Cannot create inner bean 'transportConnector#2d38e275' of type [org.apache.activemq.broker.TransportConnector] while setting bean property 'transportConnectors' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#2d38e275' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.25.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:327)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:124)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:401)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:159)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:88)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:76)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:72)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:68)
	at org.geoserver.cluster.impl.JMSXBeanBrokerFactory$1.<init>(JMSXBeanBrokerFactory.java:26)
	at org.geoserver.cluster.impl.JMSXBeanBrokerFactory.createApplicationContext(JMSXBeanBrokerFactory.java:26)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:67)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.startEmbeddedBroker(JMSActiveMQFactory.java:205)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.init(JMSActiveMQFactory.java:309)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:350)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:34)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#2d38e275' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.25.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:584)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	... 80 more
Caused by: org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.25.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.AbstractNestablePropertyAccessor.convertIfNecessary(AbstractNestablePropertyAccessor.java:595)
	at org.springframework.beans.AbstractNestablePropertyAccessor.convertForProperty(AbstractNestablePropertyAccessor.java:604)
	at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.convertForProperty(AbstractAutowireCapableBeanFactory.java:1697)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1653)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	... 82 more
Caused by: java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.25.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.propertyeditors.URIEditor.setAsText(URIEditor.java:122)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:466)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:439)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:192)
	at org.springframework.beans.AbstractNestablePropertyAccessor.convertIfNecessary(AbstractNestablePropertyAccessor.java:585)
	... 88 more
2020-03-23 13:20:20,041 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-03-23 13:20:20,049 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-03-23 13:20:20,224 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-03-23 13:20:20,226 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-03-23 13:20:20,235 INFO [geoserver.importer] - Enabling import store: memory
2020-03-23 13:20:20,236 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-23 13:20:20,236 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-23 13:21:29,089 INFO [geoserver.security] - Strong cryptography is available
2020-03-23 13:22:37,518 INFO [cluster.impl] - Using brokerURI: tcp://172.25.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true
2020-03-23 13:22:37,571 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-03-23 13:22:37,657 ERROR [geoserver.cluster] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.lang.IllegalArgumentException: Invalid connect parameters: {transport.daemon=true, maximumConnections=1000}
2020-03-23 13:22:37,658 ERROR [cluster.server] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.lang.IllegalArgumentException: Invalid connect parameters: {transport.daemon=true, maximumConnections=1000}
2020-03-23 13:22:37,664 INFO [cluster.impl] - Using brokerURI: tcp://172.25.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true
2020-03-23 13:22:37,664 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogAddEventHandlerSPI
2020-03-23 13:22:37,675 ERROR [geoserver.cluster] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.lang.IllegalArgumentException: Invalid connect parameters: {transport.daemon=true, maximumConnections=1000}
2020-03-23 13:22:37,678 ERROR [cluster.server] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.lang.IllegalArgumentException: Invalid connect parameters: {transport.daemon=true, maximumConnections=1000}
2020-03-23 13:22:37,679 INFO [geoserver.web] - Error storing workspace related objects.
org.geoserver.catalog.CatalogException: javax.jms.JMSException: Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.lang.IllegalArgumentException: Invalid connect parameters: {transport.daemon=true, maximumConnections=1000}
	at org.geoserver.cluster.server.JMSCatalogListener.handleAddEvent(JMSCatalogListener.java:128)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1709)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1670)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1659)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:1306)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1266)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:566)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:571)
	at org.geoserver.web.data.workspace.WorkspaceNewPage.handleOnSubmit(WorkspaceNewPage.java:128)
	at org.geoserver.web.data.workspace.WorkspaceNewPage.access$000(WorkspaceNewPage.java:32)
	at org.geoserver.web.data.workspace.WorkspaceNewPage$1.onSubmit(WorkspaceNewPage.java:49)
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1315)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:976)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:797)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:708)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:258)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:216)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:241)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:234)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:895)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:159)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:901)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:873)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1623)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:122)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:158)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1602)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:540)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:146)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1700)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1345)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:480)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1667)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1247)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:220)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:152)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)
	at org.eclipse.jetty.server.Server.handle(Server.java:505)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:370)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:267)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:698)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:804)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: javax.jms.JMSException: Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.lang.IllegalArgumentException: Invalid connect parameters: {transport.daemon=true, maximumConnections=1000}
	at org.geoserver.cluster.JMSPublisher.publish(JMSPublisher.java:71)
	at org.geoserver.cluster.server.JMSCatalogListener.handleAddEvent(JMSCatalogListener.java:123)
	... 134 more
Caused by: org.springframework.jms.UncategorizedJmsException: Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.lang.IllegalArgumentException: Invalid connect parameters: {transport.daemon=true, maximumConnections=1000}
	at org.springframework.jms.support.JmsUtils.convertJmsAccessException(JmsUtils.java:311)
	at org.springframework.jms.support.JmsAccessor.convertJmsAccessException(JmsAccessor.java:185)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:507)
	at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:576)
	at org.geoserver.cluster.JMSPublisher.publish(JMSPublisher.java:65)
	... 135 more
Caused by: javax.jms.JMSException: Error while attempting to add new Connection to the pool
	at org.apache.activemq.jms.pool.PooledConnectionFactory.createJmsException(PooledConnectionFactory.java:266)
	at org.apache.activemq.jms.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:225)
	at org.apache.activemq.jms.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:204)
	at org.springframework.jms.support.JmsAccessor.createConnection(JmsAccessor.java:196)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:494)
	... 137 more
Caused by: javax.jms.JMSException: Could not create Transport. Reason: java.lang.IllegalArgumentException: Invalid connect parameters: {transport.daemon=true, maximumConnections=1000}
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:36)
	at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:333)
	at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:346)
	at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:304)
	at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:244)
	at org.apache.activemq.jms.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:275)
	at org.apache.activemq.jms.pool.PooledConnectionFactory$1.makeObject(PooledConnectionFactory.java:95)
	at org.apache.activemq.jms.pool.PooledConnectionFactory$1.makeObject(PooledConnectionFactory.java:92)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.create(GenericKeyedObjectPool.java:1041)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.addObject(GenericKeyedObjectPool.java:1238)
	at org.apache.activemq.jms.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:221)
	... 140 more
Caused by: java.lang.IllegalArgumentException: Invalid connect parameters: {transport.daemon=true, maximumConnections=1000}
	at org.apache.activemq.transport.TransportFactory.doConnect(TransportFactory.java:126)
	at org.apache.activemq.transport.TransportFactory.connect(TransportFactory.java:65)
	at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:331)
	... 149 more
2020-03-23 13:22:37,693 INFO [cluster.impl] - Using brokerURI: tcp://172.25.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true
2020-03-23 13:22:37,693 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-03-23 13:22:37,704 ERROR [geoserver.cluster] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.lang.IllegalArgumentException: Invalid connect parameters: {transport.daemon=true, maximumConnections=1000}
2020-03-23 13:22:37,707 ERROR [cluster.server] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.lang.IllegalArgumentException: Invalid connect parameters: {transport.daemon=true, maximumConnections=1000}
2020-03-23 13:22:37,715 INFO [cluster.impl] - Using brokerURI: tcp://172.25.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true
2020-03-23 13:22:37,715 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogRemoveEventHandlerSPI
2020-03-23 13:22:37,721 ERROR [geoserver.cluster] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.lang.IllegalArgumentException: Invalid connect parameters: {transport.daemon=true, maximumConnections=1000}
2020-03-23 13:22:37,722 ERROR [cluster.server] - Uncategorized exception occurred during JMS processing; nested exception is javax.jms.JMSException: Error while attempting to add new Connection to the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.lang.IllegalArgumentException: Invalid connect parameters: {transport.daemon=true, maximumConnections=1000}
2020-03-23 15:13:10,913 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:11,371 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[143.83482400000003 : 148.47914100000003, -43.648056 : -39.573891]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=143.83482400000003,-43.648056,148.47914100000003,-39.573891, VERSION=1.1.0, SERVICE=WMS, WIDTH=768, HEIGHT=673, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
2020-03-23 15:13:11,606 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:11,918 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[141.943359375 : 150.380859375, -45.3131103515625 : -37.9193115234375]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=141.943359375,-45.3131103515625,150.380859375,-37.9193115234375, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:14,330 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:14,416 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[144.8382568359375 : 149.0570068359375, -43.81622314453125 : -40.11932373046875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=144.8382568359375,-43.81622314453125,149.0570068359375,-40.11932373046875, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:15,482 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:15,547 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[144.33837890625 : 148.55712890625, -43.67340087890625 : -39.97650146484375]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=144.33837890625,-43.67340087890625,148.55712890625,-39.97650146484375, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:16,211 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:16,276 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[145.94924926757812 : 147.00393676757812, -41.92588806152344 : -41.00166320800781]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=145.94924926757812,-41.92588806152344,147.00393676757812,-41.00166320800781, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:17,146 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:17,200 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[144.4976806640625 : 148.7164306640625, -43.90960693359375 : -40.21270751953125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=144.4976806640625,-43.90960693359375,148.7164306640625,-40.21270751953125, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:18,884 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:18,910 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[138.66943359375 : 155.54443359375, -51.009521484375 : -36.221923828125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=138.66943359375,-51.009521484375,155.54443359375,-36.221923828125, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:20,241 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:20,287 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[138.58154296875 : 155.45654296875, -48.328857421875 : -33.541259765625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=138.58154296875,-48.328857421875,155.45654296875,-33.541259765625, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:20,842 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:20,897 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[142.547607421875 : 146.766357421875, -42.23968505859375 : -38.54278564453125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=142.547607421875,-42.23968505859375,146.766357421875,-38.54278564453125, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:21,725 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:21,763 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[143.1683349609375 : 147.3870849609375, -42.99774169921875 : -39.30084228515625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=143.1683349609375,-42.99774169921875,147.3870849609375,-39.30084228515625, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:22,108 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:22,149 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[144.0252685546875 : 146.1346435546875, -41.958160400390625 : -40.109710693359375]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=144.0252685546875,-41.958160400390625,146.1346435546875,-40.109710693359375, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:23,229 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:23,255 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[142.723388671875 : 146.942138671875, -43.04718017578125 : -39.35028076171875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=142.723388671875,-43.04718017578125,146.942138671875,-39.35028076171875, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:25,134 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:25,163 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[145.30517578125 : 149.52392578125, -43.34930419921875 : -39.65240478515625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=145.30517578125,-43.34930419921875,149.52392578125,-39.65240478515625, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:26,104 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:26,141 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[146.5301513671875 : 148.6395263671875, -42.122955322265625 : -40.274505615234375]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=146.5301513671875,-42.122955322265625,148.6395263671875,-40.274505615234375, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:27,591 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:27,617 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[142.855224609375 : 151.292724609375, -45.7745361328125 : -38.3807373046875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=142.855224609375,-45.7745361328125,151.292724609375,-38.3807373046875, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:28,519 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:28,550 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[128.14453125 : 161.89453125, -60.22705078125 : -30.65185546875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=128.14453125,-60.22705078125,161.89453125,-30.65185546875, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:29,363 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:29,396 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[142.987060546875 : 151.424560546875, -47.5872802734375 : -40.1934814453125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=142.987060546875,-47.5872802734375,151.424560546875,-40.1934814453125, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:30,249 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:30,273 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[141.822509765625 : 150.260009765625, -46.8402099609375 : -39.4464111328125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=141.822509765625,-46.8402099609375,150.260009765625,-39.4464111328125, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:30,583 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:30,614 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[144.5745849609375 : 148.7933349609375, -44.87640380859375 : -41.17950439453125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=144.5745849609375,-44.87640380859375,148.7933349609375,-41.17950439453125, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:31,736 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:31,783 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[145.68695068359375 : 147.79632568359375, -44.018096923828125 : -42.169647216796875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=145.68695068359375,-44.018096923828125,147.79632568359375,-42.169647216796875, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:33,707 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:33,765 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[146.151123046875 : 150.369873046875, -44.61273193359375 : -40.91583251953125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=146.151123046875,-44.61273193359375,150.369873046875,-40.91583251953125, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:33,977 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:34,025 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[147.1014404296875 : 149.2108154296875, -43.531951904296875 : -41.683502197265625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=147.1014404296875,-43.531951904296875,149.2108154296875,-41.683502197265625, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:35,197 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:35,227 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[147.42897033691406 : 147.95631408691406, -41.869239807128906 : -41.407127380371094]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=147.42897033691406,-41.869239807128906,147.95631408691406,-41.407127380371094, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:36,296 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:36,316 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[147.52716064453125 : 148.58184814453125, -42.25410461425781 : -41.32987976074219]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=147.52716064453125,-42.25410461425781,148.58184814453125,-41.32987976074219, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:37,451 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:37,472 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[147.161865234375 : 149.271240234375, -42.845306396484375 : -40.996856689453125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=147.161865234375,-42.845306396484375,149.271240234375,-40.996856689453125, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:38,488 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:38,515 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[146.436767578125 : 150.655517578125, -44.03045654296875 : -40.33355712890625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=146.436767578125,-44.03045654296875,150.655517578125,-40.33355712890625, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:13:39,990 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:13:40,019 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[145.4205322265625 : 149.6392822265625, -42.40997314453125 : -38.71307373046875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=145.4205322265625,-42.40997314453125,149.6392822265625,-38.71307373046875, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:18:13,047 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:18:13,076 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[138.4716796875 : 155.3466796875, -47.625732421875 : -32.838134765625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=138.4716796875,-47.625732421875,155.3466796875,-32.838134765625, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:18:13,750 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 15:18:13,773 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[138.05419921875 : 154.92919921875, -49.207763671875 : -34.420166015625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=138.05419921875,-49.207763671875,154.92919921875,-34.420166015625, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 15:42:09,211 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-03-23 15:42:09,212 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-03-23 15:42:09,216 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-03-23 15:42:09,216 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-03-23 15:42:09,217 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-03-23 15:42:09,221 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-03-23 15:42:09,222 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-03-23 15:42:09,229 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-03-23 15:42:09,233 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-03-23 15:42:09,234 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-03-23 15:42:09,235 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-03-23 15:48:01,645 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-03-23 15:48:01,793 INFO [org.geoserver] - Loading catalog...
2020-03-23 15:48:01,935 INFO [org.geoserver] - Loaded style 'population'
2020-03-23 15:48:01,936 INFO [org.geoserver] - Loaded style 'green'
2020-03-23 15:48:01,937 INFO [org.geoserver] - Loaded style 'line'
2020-03-23 15:48:01,938 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-03-23 15:48:01,938 INFO [org.geoserver] - Loaded style 'polygon'
2020-03-23 15:48:01,942 INFO [org.geoserver] - Loaded style 'dem'
2020-03-23 15:48:01,943 INFO [org.geoserver] - Loaded style 'restricted'
2020-03-23 15:48:01,964 INFO [org.geoserver] - Loaded style 'poi'
2020-03-23 15:48:01,970 INFO [org.geoserver] - Loaded style 'pophatch'
2020-03-23 15:48:01,971 INFO [org.geoserver] - Loaded style 'grass'
2020-03-23 15:48:01,973 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-03-23 15:48:01,981 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-03-23 15:48:01,982 INFO [org.geoserver] - Loaded style 'capitals'
2020-03-23 15:48:01,991 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-03-23 15:48:01,993 INFO [org.geoserver] - Loaded style 'raster'
2020-03-23 15:48:01,998 INFO [org.geoserver] - Loaded style 'rain'
2020-03-23 15:48:02,007 INFO [org.geoserver] - Loaded style 'burg'
2020-03-23 15:48:02,010 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-03-23 15:48:02,011 INFO [org.geoserver] - Loaded style 'point'
2020-03-23 15:48:02,013 INFO [org.geoserver] - Loaded style 'generic'
2020-03-23 15:48:02,014 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-03-23 15:48:02,016 INFO [org.geoserver] - Loaded default workspace cite
2020-03-23 15:48:02,105 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-03-23 15:48:02,122 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-03-23 15:48:02,139 INFO [org.geoserver] - Loaded workspace 'sde'
2020-03-23 15:48:02,146 INFO [org.geoserver] - Loaded workspace 'sf'
2020-03-23 15:48:02,155 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-03-23 15:48:02,162 INFO [org.geoserver] - Loaded workspace 'topp'
2020-03-23 15:48:02,166 INFO [org.geoserver] - Loaded workspace 'cite'
2020-03-23 15:48:03,619 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-03-23 15:48:05,664 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-03-23 15:48:05,686 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-03-23 15:48:05,693 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-03-23 15:48:05,699 INFO [org.geoserver] - Loaded layer 'poi'
2020-03-23 15:48:05,706 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-03-23 15:48:05,713 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-03-23 15:48:05,723 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-03-23 15:48:05,734 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-03-23 15:48:05,749 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-03-23 15:48:06,277 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-03-23 15:48:06,282 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-03-23 15:48:06,289 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-03-23 15:48:06,299 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-03-23 15:48:06,301 INFO [org.geoserver] - Loaded layer 'roads'
2020-03-23 15:48:06,307 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-03-23 15:48:06,312 INFO [org.geoserver] - Loaded layer 'restricted'
2020-03-23 15:48:06,319 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-03-23 15:48:06,322 INFO [org.geoserver] - Loaded layer 'archsites'
2020-03-23 15:48:06,331 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-03-23 15:48:06,333 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-03-23 15:48:06,339 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-03-23 15:48:06,343 INFO [org.geoserver] - Loaded layer 'streams'
2020-03-23 15:48:06,353 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-03-23 15:48:06,372 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-03-23 15:48:06,374 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-03-23 15:48:06,379 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-03-23 15:48:06,392 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-03-23 15:48:06,397 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-03-23 15:48:06,407 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-03-23 15:48:06,415 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-03-23 15:48:06,420 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-03-23 15:48:06,423 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-03-23 15:48:06,441 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-03-23 15:48:06,447 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-03-23 15:48:06,471 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-03-23 15:48:06,486 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-03-23 15:48:06,493 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-03-23 15:48:06,505 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-03-23 15:48:06,509 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-03-23 15:48:06,512 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-03-23 15:48:06,514 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-03-23 15:48:06,517 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-03-23 15:48:06,518 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-03-23 15:48:06,525 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-03-23 15:48:06,529 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-03-23 15:48:06,531 INFO [org.geoserver] - Loaded layer 'states'
2020-03-23 15:48:06,545 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-03-23 15:48:06,549 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-03-23 15:48:06,554 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-03-23 15:48:06,557 INFO [org.geoserver] - Read catalog in 4.763 s
2020-03-23 15:48:06,710 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-52b10f4c:171081465b5:-8000', enabled
2020-03-23 15:48:06,723 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-03-23 15:48:06,741 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-03-23 15:48:06,763 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-03-23 15:48:06,802 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 15:48:06,917 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 15:48:06,918 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 15:48:06,918 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 15:48:07,042 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-23 15:48:07,044 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-03-23 15:48:07,047 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-03-23 15:48:07,048 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-23 15:48:07,127 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-03-23 15:48:07,134 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-03-23 15:48:07,177 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-03-23 15:48:07,177 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-03-23 15:48:07,177 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-03-23 15:48:07,216 INFO [gwc.layer] - Loaded 22 tile layers in 37.82 ms
2020-03-23 15:48:07,227 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-03-23 15:48:07,236 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-23 15:48:07,236 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-03-23 15:48:07,236 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-23 15:48:07,295 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-03-23 15:48:07,406 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 15:48:07,418 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 15:48:07,424 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-23 15:48:07,435 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-23 15:48:07,439 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-03-23 15:48:07,442 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-03-23 15:48:07,462 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-03-23 15:48:07,504 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-03-23 15:48:07,737 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-03-23 15:48:07,763 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-03-23 15:48:07,774 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-03-23 15:48:08,008 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-03-23 15:48:08,011 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-03-23 15:48:09,041 INFO [cluster.impl] - Using brokerURI: vm://f24519a4c02a-03a1c8ed6af9?create=false&waitForStart=5000
2020-03-23 15:48:11,529 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-03-23 15:48:18,086 INFO [cluster.impl] - Starting the embedded brokerURI
2020-03-23 15:48:18,567 WARN [impl.JMSXBeanBrokerFactory$1] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'broker' defined in class path resource [broker.xml]: Cannot create inner bean 'transportConnector#72b000e2' of type [org.apache.activemq.broker.TransportConnector] while setting bean property 'transportConnectors' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#72b000e2' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.25.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
2020-03-23 15:48:18,581 ERROR [cluster.impl] - Error creating bean with name 'broker' defined in class path resource [broker.xml]: Cannot create inner bean 'transportConnector#72b000e2' of type [org.apache.activemq.broker.TransportConnector] while setting bean property 'transportConnectors' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#72b000e2' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.25.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'broker' defined in class path resource [broker.xml]: Cannot create inner bean 'transportConnector#72b000e2' of type [org.apache.activemq.broker.TransportConnector] while setting bean property 'transportConnectors' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#72b000e2' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.25.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:327)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:124)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:401)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:159)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:88)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:76)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:72)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:68)
	at org.geoserver.cluster.impl.JMSXBeanBrokerFactory$1.<init>(JMSXBeanBrokerFactory.java:26)
	at org.geoserver.cluster.impl.JMSXBeanBrokerFactory.createApplicationContext(JMSXBeanBrokerFactory.java:26)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:67)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.startEmbeddedBroker(JMSActiveMQFactory.java:205)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.init(JMSActiveMQFactory.java:309)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:350)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:34)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#72b000e2' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.25.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:584)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	... 80 more
Caused by: org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.25.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.AbstractNestablePropertyAccessor.convertIfNecessary(AbstractNestablePropertyAccessor.java:595)
	at org.springframework.beans.AbstractNestablePropertyAccessor.convertForProperty(AbstractNestablePropertyAccessor.java:604)
	at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.convertForProperty(AbstractAutowireCapableBeanFactory.java:1697)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1653)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	... 82 more
Caused by: java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.25.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.propertyeditors.URIEditor.setAsText(URIEditor.java:122)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:466)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:439)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:192)
	at org.springframework.beans.AbstractNestablePropertyAccessor.convertIfNecessary(AbstractNestablePropertyAccessor.java:585)
	... 88 more
2020-03-23 15:48:19,331 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-03-23 15:48:19,345 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-03-23 15:48:19,518 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-03-23 15:48:19,519 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-03-23 15:48:19,532 INFO [geoserver.importer] - Enabling import store: memory
2020-03-23 15:48:19,534 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-23 15:48:19,535 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-23 16:39:31,968 INFO [geoserver.security] - Strong cryptography is available
2020-03-23 18:16:52,241 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 18:16:52,720 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 18:16:53,429 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[142.27294921875 : 150.71044921875, -45.5108642578125 : -38.1170654296875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=142.27294921875,-45.5108642578125,150.71044921875,-38.1170654296875, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 18:16:53,429 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[144.38232421875 : 148.60107421875, -43.66241455078125 : -39.96551513671875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=144.38232421875,-43.66241455078125,148.60107421875,-39.96551513671875, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 18:43:57,037 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-03-23 18:43:57,038 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-03-23 18:43:57,042 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-03-23 18:43:57,042 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-03-23 18:43:57,042 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-03-23 18:43:57,047 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-03-23 18:43:57,051 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-03-23 18:43:57,064 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-03-23 18:43:57,066 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-03-23 18:43:57,066 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-03-23 18:43:57,067 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-03-23 18:47:29,999 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-03-23 18:47:30,102 INFO [org.geoserver] - Loading catalog...
2020-03-23 18:47:30,182 INFO [org.geoserver] - Loaded style 'population'
2020-03-23 18:47:30,185 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-03-23 18:47:30,189 INFO [org.geoserver] - Loaded style 'green'
2020-03-23 18:47:30,191 INFO [org.geoserver] - Loaded style 'line'
2020-03-23 18:47:30,192 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-03-23 18:47:30,194 INFO [org.geoserver] - Loaded style 'polygon'
2020-03-23 18:47:30,195 INFO [org.geoserver] - Loaded style 'restricted'
2020-03-23 18:47:30,196 INFO [org.geoserver] - Loaded style 'dem'
2020-03-23 18:47:30,198 INFO [org.geoserver] - Loaded style 'poi'
2020-03-23 18:47:30,199 INFO [org.geoserver] - Loaded style 'pophatch'
2020-03-23 18:47:30,200 INFO [org.geoserver] - Loaded style 'grass'
2020-03-23 18:47:30,201 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-03-23 18:47:30,203 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-03-23 18:47:30,205 INFO [org.geoserver] - Loaded style 'capitals'
2020-03-23 18:47:30,206 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-03-23 18:47:30,209 INFO [org.geoserver] - Loaded style 'raster'
2020-03-23 18:47:30,211 INFO [org.geoserver] - Loaded style 'rain'
2020-03-23 18:47:30,213 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-03-23 18:47:30,214 INFO [org.geoserver] - Loaded style 'point'
2020-03-23 18:47:30,217 INFO [org.geoserver] - Loaded style 'generic'
2020-03-23 18:47:30,218 INFO [org.geoserver] - Loaded style 'burg'
2020-03-23 18:47:30,220 INFO [org.geoserver] - Loaded default workspace cite
2020-03-23 18:47:30,277 INFO [org.geoserver] - Loaded workspace 'cite'
2020-03-23 18:47:30,283 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-03-23 18:47:30,286 INFO [org.geoserver] - Loaded workspace 'sde'
2020-03-23 18:47:30,288 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-03-23 18:47:30,290 INFO [org.geoserver] - Loaded workspace 'topp'
2020-03-23 18:47:30,292 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-03-23 18:47:30,295 INFO [org.geoserver] - Loaded workspace 'sf'
2020-03-23 18:47:30,901 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-03-23 18:47:32,351 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-03-23 18:47:32,372 INFO [org.geoserver] - Loaded layer 'poi'
2020-03-23 18:47:32,380 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-03-23 18:47:32,385 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-03-23 18:47:32,391 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-03-23 18:47:32,395 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-03-23 18:47:32,405 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-03-23 18:47:32,412 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-03-23 18:47:32,420 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-03-23 18:47:32,879 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-03-23 18:47:32,881 INFO [org.geoserver] - Loaded layer 'roads'
2020-03-23 18:47:32,888 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-03-23 18:47:32,893 INFO [org.geoserver] - Loaded layer 'restricted'
2020-03-23 18:47:32,901 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-03-23 18:47:32,907 INFO [org.geoserver] - Loaded layer 'archsites'
2020-03-23 18:47:32,917 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-03-23 18:47:32,923 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-03-23 18:47:32,931 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-03-23 18:47:32,936 INFO [org.geoserver] - Loaded layer 'streams'
2020-03-23 18:47:32,947 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-03-23 18:47:32,987 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-03-23 18:47:32,989 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-03-23 18:47:33,002 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-03-23 18:47:33,021 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-03-23 18:47:33,023 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-03-23 18:47:33,025 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-03-23 18:47:33,030 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-03-23 18:47:33,034 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-03-23 18:47:33,041 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-03-23 18:47:33,047 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-03-23 18:47:33,049 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-03-23 18:47:33,051 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-03-23 18:47:33,056 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-03-23 18:47:33,058 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-03-23 18:47:33,072 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-03-23 18:47:33,081 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-03-23 18:47:33,085 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-03-23 18:47:33,097 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-03-23 18:47:33,106 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-03-23 18:47:33,112 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-03-23 18:47:33,115 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-03-23 18:47:33,119 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-03-23 18:47:33,120 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-03-23 18:47:33,125 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-03-23 18:47:33,132 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-03-23 18:47:33,136 INFO [org.geoserver] - Loaded layer 'states'
2020-03-23 18:47:33,153 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-03-23 18:47:33,159 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-03-23 18:47:33,162 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-03-23 18:47:33,168 INFO [org.geoserver] - Read catalog in 3.064 s
2020-03-23 18:47:33,293 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl--7f797023:17108b8aeac:-8000', enabled
2020-03-23 18:47:33,305 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-03-23 18:47:33,325 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-03-23 18:47:33,355 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-03-23 18:47:33,391 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 18:47:33,491 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 18:47:33,491 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 18:47:33,492 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 18:47:33,582 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-23 18:47:33,583 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-03-23 18:47:33,583 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-03-23 18:47:33,583 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-23 18:47:33,652 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-03-23 18:47:33,657 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-03-23 18:47:33,710 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-03-23 18:47:33,710 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-03-23 18:47:33,711 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-03-23 18:47:33,763 INFO [gwc.layer] - Loaded 22 tile layers in 52.37 ms
2020-03-23 18:47:33,780 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-03-23 18:47:33,792 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-23 18:47:33,794 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-03-23 18:47:33,796 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-23 18:47:33,942 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-03-23 18:47:34,087 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 18:47:34,121 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 18:47:34,126 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-23 18:47:34,144 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-23 18:47:34,146 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-03-23 18:47:34,146 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-03-23 18:47:34,157 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-03-23 18:47:34,216 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-03-23 18:47:34,563 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-03-23 18:47:34,586 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-03-23 18:47:34,591 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-03-23 18:47:34,708 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-03-23 18:47:34,708 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-03-23 18:47:35,538 INFO [cluster.impl] - Using brokerURI: vm://e63e2cde50d9-4bdb334d9262?create=false&waitForStart=5000
2020-03-23 18:47:37,700 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-03-23 18:47:43,645 INFO [cluster.impl] - Starting the embedded brokerURI
2020-03-23 18:47:44,057 WARN [impl.JMSXBeanBrokerFactory$1] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'broker' defined in class path resource [broker.xml]: Cannot create inner bean 'transportConnector#b9f4b1f' of type [org.apache.activemq.broker.TransportConnector] while setting bean property 'transportConnectors' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#b9f4b1f' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.26.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
2020-03-23 18:47:44,062 ERROR [cluster.impl] - Error creating bean with name 'broker' defined in class path resource [broker.xml]: Cannot create inner bean 'transportConnector#b9f4b1f' of type [org.apache.activemq.broker.TransportConnector] while setting bean property 'transportConnectors' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#b9f4b1f' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.26.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'broker' defined in class path resource [broker.xml]: Cannot create inner bean 'transportConnector#b9f4b1f' of type [org.apache.activemq.broker.TransportConnector] while setting bean property 'transportConnectors' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#b9f4b1f' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.26.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:327)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:124)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:401)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:159)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:88)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:76)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:72)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:68)
	at org.geoserver.cluster.impl.JMSXBeanBrokerFactory$1.<init>(JMSXBeanBrokerFactory.java:26)
	at org.geoserver.cluster.impl.JMSXBeanBrokerFactory.createApplicationContext(JMSXBeanBrokerFactory.java:26)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:67)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.startEmbeddedBroker(JMSActiveMQFactory.java:205)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.init(JMSActiveMQFactory.java:309)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:350)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:34)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transportConnector#b9f4b1f' defined in class path resource [broker.xml]: Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.26.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:584)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	... 80 more
Caused by: org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'java.lang.String' to required type 'java.net.URI' for property 'uri'; nested exception is java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.26.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.AbstractNestablePropertyAccessor.convertIfNecessary(AbstractNestablePropertyAccessor.java:595)
	at org.springframework.beans.AbstractNestablePropertyAccessor.convertForProperty(AbstractNestablePropertyAccessor.java:604)
	at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.convertForProperty(AbstractAutowireCapableBeanFactory.java:1697)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1653)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	... 82 more
Caused by: java.lang.IllegalArgumentException: Invalid URI syntax: java.net.URISyntaxException: Illegal character in scheme name at index 0: "tcp://172.26.0.3:0?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=true&transport.daemon=true&trace=true%22
	at org.springframework.beans.propertyeditors.URIEditor.setAsText(URIEditor.java:122)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:466)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:439)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:192)
	at org.springframework.beans.AbstractNestablePropertyAccessor.convertIfNecessary(AbstractNestablePropertyAccessor.java:585)
	... 88 more
2020-03-23 18:47:44,692 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-03-23 18:47:44,699 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-03-23 18:47:44,836 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-03-23 18:47:44,839 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-03-23 18:47:44,848 INFO [geoserver.importer] - Enabling import store: memory
2020-03-23 18:47:44,850 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-23 18:47:44,850 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-23 19:13:19,229 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-03-23 19:13:19,231 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-03-23 19:13:19,232 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-03-23 19:13:19,233 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-03-23 19:13:19,233 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-03-23 19:13:19,238 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-03-23 19:13:19,238 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-03-23 19:13:19,258 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-03-23 19:13:19,260 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-03-23 19:13:19,260 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-03-23 19:13:19,261 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-03-23 19:13:58,618 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-03-23 19:13:58,719 INFO [org.geoserver] - Loading catalog...
2020-03-23 19:13:58,784 INFO [org.geoserver] - Loaded style 'population'
2020-03-23 19:13:58,787 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-03-23 19:13:58,790 INFO [org.geoserver] - Loaded style 'green'
2020-03-23 19:13:58,793 INFO [org.geoserver] - Loaded style 'line'
2020-03-23 19:13:58,797 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-03-23 19:13:58,798 INFO [org.geoserver] - Loaded style 'polygon'
2020-03-23 19:13:58,799 INFO [org.geoserver] - Loaded style 'dem'
2020-03-23 19:13:58,799 INFO [org.geoserver] - Loaded style 'restricted'
2020-03-23 19:13:58,800 INFO [org.geoserver] - Loaded style 'poi'
2020-03-23 19:13:58,801 INFO [org.geoserver] - Loaded style 'pophatch'
2020-03-23 19:13:58,802 INFO [org.geoserver] - Loaded style 'grass'
2020-03-23 19:13:58,803 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-03-23 19:13:58,805 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-03-23 19:13:58,806 INFO [org.geoserver] - Loaded style 'capitals'
2020-03-23 19:13:58,807 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-03-23 19:13:58,810 INFO [org.geoserver] - Loaded style 'raster'
2020-03-23 19:13:58,811 INFO [org.geoserver] - Loaded style 'rain'
2020-03-23 19:13:58,812 INFO [org.geoserver] - Loaded style 'burg'
2020-03-23 19:13:58,813 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-03-23 19:13:58,814 INFO [org.geoserver] - Loaded style 'point'
2020-03-23 19:13:58,815 INFO [org.geoserver] - Loaded style 'generic'
2020-03-23 19:13:58,817 INFO [org.geoserver] - Loaded default workspace cite
2020-03-23 19:13:58,849 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-03-23 19:13:58,855 INFO [org.geoserver] - Loaded workspace 'cite'
2020-03-23 19:13:58,862 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-03-23 19:13:58,868 INFO [org.geoserver] - Loaded workspace 'sde'
2020-03-23 19:13:58,871 INFO [org.geoserver] - Loaded workspace 'sf'
2020-03-23 19:13:58,876 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-03-23 19:13:58,881 INFO [org.geoserver] - Loaded workspace 'topp'
2020-03-23 19:13:59,639 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-03-23 19:14:00,996 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-03-23 19:14:01,014 INFO [org.geoserver] - Loaded layer 'poi'
2020-03-23 19:14:01,023 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-03-23 19:14:01,031 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-03-23 19:14:01,043 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-03-23 19:14:01,046 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-03-23 19:14:01,050 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-03-23 19:14:01,055 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-03-23 19:14:01,067 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-03-23 19:14:01,529 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-03-23 19:14:01,534 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-03-23 19:14:01,544 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-03-23 19:14:01,570 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-03-23 19:14:01,574 INFO [org.geoserver] - Loaded layer 'roads'
2020-03-23 19:14:01,584 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-03-23 19:14:01,590 INFO [org.geoserver] - Loaded layer 'restricted'
2020-03-23 19:14:01,599 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-03-23 19:14:01,603 INFO [org.geoserver] - Loaded layer 'archsites'
2020-03-23 19:14:01,609 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-03-23 19:14:01,611 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-03-23 19:14:01,617 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-03-23 19:14:01,619 INFO [org.geoserver] - Loaded layer 'streams'
2020-03-23 19:14:01,628 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-03-23 19:14:01,657 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-03-23 19:14:01,662 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-03-23 19:14:01,665 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-03-23 19:14:01,669 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-03-23 19:14:01,673 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-03-23 19:14:01,675 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-03-23 19:14:01,684 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-03-23 19:14:01,688 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-03-23 19:14:01,692 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-03-23 19:14:01,699 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-03-23 19:14:01,702 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-03-23 19:14:01,723 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-03-23 19:14:01,736 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-03-23 19:14:01,740 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-03-23 19:14:01,757 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-03-23 19:14:01,767 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-03-23 19:14:01,773 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-03-23 19:14:01,777 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-03-23 19:14:01,783 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-03-23 19:14:01,787 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-03-23 19:14:01,797 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-03-23 19:14:01,806 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-03-23 19:14:01,811 INFO [org.geoserver] - Loaded layer 'states'
2020-03-23 19:14:01,850 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-03-23 19:14:01,854 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-03-23 19:14:01,859 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-03-23 19:14:01,867 INFO [org.geoserver] - Read catalog in 3.143 s
2020-03-23 19:14:02,026 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-15044e2c:17108d0eca9:-8000', enabled
2020-03-23 19:14:02,038 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-03-23 19:14:02,055 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-03-23 19:14:02,074 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-03-23 19:14:02,109 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 19:14:02,283 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 19:14:02,284 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 19:14:02,284 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 19:14:02,488 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-23 19:14:02,488 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-03-23 19:14:02,488 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-03-23 19:14:02,489 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-23 19:14:02,643 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-03-23 19:14:02,651 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-03-23 19:14:02,727 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-03-23 19:14:02,730 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-03-23 19:14:02,731 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-03-23 19:14:02,824 INFO [gwc.layer] - Loaded 22 tile layers in 91.21 ms
2020-03-23 19:14:02,841 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-03-23 19:14:02,856 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-23 19:14:02,858 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-03-23 19:14:02,860 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-23 19:14:02,942 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-03-23 19:14:03,062 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 19:14:03,073 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 19:14:03,077 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-23 19:14:03,089 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-23 19:14:03,093 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-03-23 19:14:03,093 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-03-23 19:14:03,105 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-03-23 19:14:03,146 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-03-23 19:14:03,462 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-03-23 19:14:03,484 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-03-23 19:14:03,491 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-03-23 19:14:03,624 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-03-23 19:14:03,625 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-03-23 19:14:04,556 INFO [cluster.impl] - Using brokerURI: vm://c4befe298e97-fce2d702831f?create=false&waitForStart=5000
2020-03-23 19:14:06,959 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-03-23 19:14:13,106 INFO [cluster.impl] - Starting the embedded brokerURI
2020-03-23 19:14:14,127 INFO [cluster.impl] - Embedded brokerURI is now started
2020-03-23 19:14:14,127 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[c4befe298e97-fce2d702831f]
2020-03-23 19:14:14,128 INFO [cluster.client] - Connecting...
2020-03-23 19:14:14,128 INFO [cluster.impl] - Using brokerURI: vm://c4befe298e97-fce2d702831f?create=false&waitForStart=5000
2020-03-23 19:14:14,185 INFO [cluster.client] - Registration...
2020-03-23 19:14:14,193 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-03-23 19:14:14,194 INFO [cluster.client] - Waiting for registration...(1/3)
2020-03-23 19:14:14,659 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.27.0.4:35660 failed: java.io.EOFException
2020-03-23 19:14:24,195 INFO [cluster.client] - Registration...
2020-03-23 19:14:24,195 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-03-23 19:14:24,645 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-03-23 19:14:24,652 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-03-23 19:14:24,823 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-03-23 19:14:24,826 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-03-23 19:14:24,841 INFO [geoserver.importer] - Enabling import store: memory
2020-03-23 19:14:24,844 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-23 19:14:24,844 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-23 19:14:54,873 INFO [geoserver.security] - Strong cryptography is available
2020-03-23 19:15:38,344 INFO [cluster.impl] - Using brokerURI: vm://c4befe298e97-fce2d702831f?create=false&waitForStart=5000
2020-03-23 19:15:38,354 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-03-23 19:15:38,517 INFO [cluster.impl] - Using brokerURI: vm://c4befe298e97-fce2d702831f?create=false&waitForStart=5000
2020-03-23 19:15:38,517 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogAddEventHandlerSPI
2020-03-23 19:15:38,538 INFO [cluster.impl] - Using brokerURI: vm://c4befe298e97-fce2d702831f?create=false&waitForStart=5000
2020-03-23 19:15:38,539 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-03-23 19:15:38,556 INFO [cluster.impl] - Using brokerURI: vm://c4befe298e97-fce2d702831f?create=false&waitForStart=5000
2020-03-23 19:15:38,557 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogAddEventHandlerSPI
2020-03-23 19:16:43,019 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.c4befe298e97-fce2d702831f.VirtualTopic.geoserver' - trying to recover. Cause: The Consumer is closed
2020-03-23 19:16:43,058 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-03-23 19:16:43,060 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-03-23 19:16:43,062 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-03-23 19:16:43,064 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-03-23 19:16:43,064 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-03-23 19:16:43,069 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-03-23 19:16:43,070 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-03-23 19:16:43,074 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-03-23 19:16:43,076 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-03-23 19:16:43,076 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-03-23 19:16:43,080 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-03-23 19:19:11,396 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-03-23 19:19:11,489 INFO [org.geoserver] - Loading catalog...
2020-03-23 19:19:11,583 INFO [org.geoserver] - Loaded style 'population'
2020-03-23 19:19:11,585 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-03-23 19:19:11,586 INFO [org.geoserver] - Loaded style 'green'
2020-03-23 19:19:11,587 INFO [org.geoserver] - Loaded style 'line'
2020-03-23 19:19:11,588 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-03-23 19:19:11,589 INFO [org.geoserver] - Loaded style 'polygon'
2020-03-23 19:19:11,590 INFO [org.geoserver] - Loaded style 'dem'
2020-03-23 19:19:11,591 INFO [org.geoserver] - Loaded style 'restricted'
2020-03-23 19:19:11,592 INFO [org.geoserver] - Loaded style 'poi'
2020-03-23 19:19:11,593 INFO [org.geoserver] - Loaded style 'pophatch'
2020-03-23 19:19:11,594 INFO [org.geoserver] - Loaded style 'grass'
2020-03-23 19:19:11,596 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-03-23 19:19:11,597 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-03-23 19:19:11,598 INFO [org.geoserver] - Loaded style 'capitals'
2020-03-23 19:19:11,599 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-03-23 19:19:11,602 INFO [org.geoserver] - Loaded style 'raster'
2020-03-23 19:19:11,603 INFO [org.geoserver] - Loaded style 'rain'
2020-03-23 19:19:11,604 INFO [org.geoserver] - Loaded style 'burg'
2020-03-23 19:19:11,605 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-03-23 19:19:11,606 INFO [org.geoserver] - Loaded style 'point'
2020-03-23 19:19:11,608 INFO [org.geoserver] - Loaded style 'generic'
2020-03-23 19:19:11,610 INFO [org.geoserver] - Loaded default workspace cite
2020-03-23 19:19:11,633 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-03-23 19:19:11,639 INFO [org.geoserver] - Loaded workspace 'cite'
2020-03-23 19:19:11,644 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-03-23 19:19:11,649 INFO [org.geoserver] - Loaded workspace 'sde'
2020-03-23 19:19:11,655 INFO [org.geoserver] - Loaded workspace 'sf'
2020-03-23 19:19:11,657 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-03-23 19:19:11,667 INFO [org.geoserver] - Loaded workspace 'topp'
2020-03-23 19:19:11,673 INFO [org.geoserver] - Loaded workspace 'gisarch'
2020-03-23 19:19:12,423 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-03-23 19:19:13,903 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-03-23 19:19:13,927 INFO [org.geoserver] - Loaded layer 'poi'
2020-03-23 19:19:13,935 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-03-23 19:19:13,938 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-03-23 19:19:13,943 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-03-23 19:19:13,946 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-03-23 19:19:13,957 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-03-23 19:19:13,964 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-03-23 19:19:13,974 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-03-23 19:19:14,461 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-03-23 19:19:14,464 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-03-23 19:19:14,474 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-03-23 19:19:14,518 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-03-23 19:19:14,524 INFO [org.geoserver] - Loaded layer 'roads'
2020-03-23 19:19:14,530 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-03-23 19:19:14,535 INFO [org.geoserver] - Loaded layer 'restricted'
2020-03-23 19:19:14,542 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-03-23 19:19:14,544 INFO [org.geoserver] - Loaded layer 'archsites'
2020-03-23 19:19:14,559 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-03-23 19:19:14,563 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-03-23 19:19:14,572 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-03-23 19:19:14,576 INFO [org.geoserver] - Loaded layer 'streams'
2020-03-23 19:19:14,584 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-03-23 19:19:14,602 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-03-23 19:19:14,604 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-03-23 19:19:14,607 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-03-23 19:19:14,611 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-03-23 19:19:14,613 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-03-23 19:19:14,615 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-03-23 19:19:14,621 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-03-23 19:19:14,623 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-03-23 19:19:14,625 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-03-23 19:19:14,631 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-03-23 19:19:14,633 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-03-23 19:19:14,646 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-03-23 19:19:14,654 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-03-23 19:19:14,657 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-03-23 19:19:14,668 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-03-23 19:19:14,677 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-03-23 19:19:14,687 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-03-23 19:19:14,691 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-03-23 19:19:14,703 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-03-23 19:19:14,705 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-03-23 19:19:14,715 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-03-23 19:19:14,725 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-03-23 19:19:14,732 INFO [org.geoserver] - Loaded layer 'states'
2020-03-23 19:19:14,749 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-03-23 19:19:14,755 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-03-23 19:19:14,760 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-03-23 19:19:14,766 INFO [org.geoserver] - Read catalog in 3.275 s
2020-03-23 19:19:14,924 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-56336488:17108d5b2eb:-8000', enabled
2020-03-23 19:19:14,935 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-03-23 19:19:14,954 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-03-23 19:19:14,978 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-03-23 19:19:15,017 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 19:19:15,116 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 19:19:15,117 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 19:19:15,117 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-23 19:19:15,203 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-23 19:19:15,203 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-03-23 19:19:15,203 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-03-23 19:19:15,204 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-23 19:19:15,259 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-03-23 19:19:15,262 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-03-23 19:19:15,303 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-03-23 19:19:15,303 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-03-23 19:19:15,303 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-03-23 19:19:15,366 INFO [gwc.layer] - Loaded 22 tile layers in 62.21 ms
2020-03-23 19:19:15,395 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-03-23 19:19:15,412 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-23 19:19:15,412 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-03-23 19:19:15,412 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-23 19:19:15,556 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-03-23 19:19:15,691 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 19:19:15,703 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-03-23 19:19:15,707 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-23 19:19:15,721 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-23 19:19:15,726 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-03-23 19:19:15,728 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-03-23 19:19:15,756 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-03-23 19:19:15,799 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-03-23 19:19:16,021 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-03-23 19:19:16,041 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-03-23 19:19:16,054 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-03-23 19:19:16,266 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-03-23 19:19:16,269 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-03-23 19:19:17,281 INFO [cluster.impl] - Using brokerURI: vm://b764acd6a126-1b590e27c885?create=false&waitForStart=5000
2020-03-23 19:19:20,036 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-03-23 19:19:26,342 INFO [cluster.impl] - Starting the embedded brokerURI
2020-03-23 19:19:27,453 ERROR [multicast.MulticastDiscoveryAgent] - Failed to advertise our service: default.ActiveMQ-4.alive.%localhost%tcp://b764acd6a126:33399
java.io.IOException: Operation not permitted
	at java.base/java.net.PlainDatagramSocketImpl.send0(Native Method)
	at java.base/java.net.AbstractPlainDatagramSocketImpl.send(AbstractPlainDatagramSocketImpl.java:136)
	at java.base/java.net.DatagramSocket.send(DatagramSocket.java:791)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.doAdvertizeSelf(MulticastDiscoveryAgent.java:446)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.start(MulticastDiscoveryAgent.java:338)
	at org.apache.activemq.broker.TransportConnector.start(TransportConnector.java:256)
	at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:2747)
	at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:2640)
	at org.apache.activemq.broker.BrokerService.doStartBroker(BrokerService.java:771)
	at org.apache.activemq.broker.BrokerService.startBroker(BrokerService.java:733)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:636)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.startEmbeddedBroker(JMSActiveMQFactory.java:227)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.init(JMSActiveMQFactory.java:309)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:350)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:34)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-03-23 19:19:27,458 ERROR [multicast.MulticastDiscoveryAgent] - The 'Operation not permitted' error has been know to be caused by improper firewall/network setup.  Please make sure that the OS is properly configured to allow multicast traffic over: 0.0.0.0/0.0.0.0
2020-03-23 19:19:27,481 INFO [cluster.impl] - Embedded brokerURI is now started
2020-03-23 19:19:27,482 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[b764acd6a126-1b590e27c885]
2020-03-23 19:19:27,486 INFO [cluster.client] - Connecting...
2020-03-23 19:19:27,486 INFO [cluster.impl] - Using brokerURI: vm://b764acd6a126-1b590e27c885?create=false&waitForStart=5000
2020-03-23 19:19:27,584 INFO [cluster.client] - Registration...
2020-03-23 19:19:27,587 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-03-23 19:19:27,590 INFO [cluster.client] - Waiting for registration...(1/3)
2020-03-23 19:19:28,004 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.28.0.3:39316 failed: java.io.EOFException
2020-03-23 19:19:37,590 INFO [cluster.client] - Registration...
2020-03-23 19:19:37,591 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-03-23 19:19:38,118 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-03-23 19:19:38,125 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-03-23 19:19:38,289 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-03-23 19:19:38,293 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-03-23 19:19:38,305 INFO [geoserver.importer] - Enabling import store: memory
2020-03-23 19:19:38,306 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-23 19:19:38,306 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-23 19:19:54,026 INFO [geoserver.security] - Strong cryptography is available
2020-03-23 19:20:43,465 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 19:20:44,516 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[143.32763671875 : 147.54638671875, -44.67864990234375 : -40.98175048828125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=143.32763671875,-44.67864990234375,147.54638671875,-40.98175048828125, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 19:20:45,096 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 19:20:45,164 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[141.21826171875 : 149.65576171875, -46.5216064453125 : -39.1278076171875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=141.21826171875,-46.5216064453125,149.65576171875,-39.1278076171875, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 19:22:10,202 INFO [cluster.impl] - Using brokerURI: vm://b764acd6a126-1b590e27c885?create=false&waitForStart=5000
2020-03-23 19:22:10,207 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandlerSPI
2020-03-23 19:22:10,260 INFO [cluster.impl] - Using brokerURI: vm://b764acd6a126-1b590e27c885?create=false&waitForStart=5000
2020-03-23 19:22:10,261 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-03-23 19:22:10,456 INFO [cluster.impl] - Using brokerURI: vm://b764acd6a126-1b590e27c885?create=false&waitForStart=5000
2020-03-23 19:22:10,456 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-03-23 19:22:10,468 INFO [cluster.impl] - Using brokerURI: vm://b764acd6a126-1b590e27c885?create=false&waitForStart=5000
2020-03-23 19:22:10,469 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogAddEventHandlerSPI
2020-03-23 21:17:11,169 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:17:11,234 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[137.26318359375 : 154.13818359375, -51.844482421875 : -37.056884765625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=137.26318359375,-51.844482421875,154.13818359375,-37.056884765625, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 21:17:12,362 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:17:12,403 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[144.1845703125 : 146.2939453125, -42.543182373046875 : -40.694732666015625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=144.1845703125,-42.543182373046875,146.2939453125,-40.694732666015625, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 21:17:14,219 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:17:14,250 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[138.66943359375 : 155.54443359375, -50.570068359375 : -35.782470703125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=138.66943359375,-50.570068359375,155.54443359375,-35.782470703125, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 21:17:14,736 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:17:14,780 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[142.152099609375 : 150.589599609375, -45.8953857421875 : -38.5015869140625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=142.152099609375,-45.8953857421875,150.589599609375,-38.5015869140625, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 21:17:17,229 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:17:17,287 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[143.887939453125 : 148.106689453125, -43.55255126953125 : -39.85565185546875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=143.887939453125,-43.55255126953125,148.106689453125,-39.85565185546875, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 21:17:19,146 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:17:19,197 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[142.547607421875 : 150.985107421875, -45.7965087890625 : -38.4027099609375]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=142.547607421875,-45.7965087890625,150.985107421875,-38.4027099609375, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 21:17:19,902 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:17:19,940 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[144.29443359375 : 148.51318359375, -43.60198974609375 : -39.90509033203125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=144.29443359375,-43.60198974609375,148.51318359375,-39.90509033203125, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 21:17:21,912 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:17:21,946 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[139.04296875 : 155.91796875, -50.174560546875 : -35.386962890625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=139.04296875,-50.174560546875,155.91796875,-35.386962890625, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 21:17:22,996 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:17:23,030 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[132.0556640625 : 165.8056640625, -58.95263671875 : -29.37744140625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=132.0556640625,-58.95263671875,165.8056640625,-29.37744140625, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 21:17:23,927 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:17:23,957 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[144.2999267578125 : 148.5186767578125, -43.61846923828125 : -39.92156982421875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=144.2999267578125,-43.61846923828125,148.5186767578125,-39.92156982421875, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 21:17:24,805 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:17:24,859 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[142.55859375 : 150.99609375, -45.8074951171875 : -38.4136962890625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=142.55859375,-45.8074951171875,150.99609375,-38.4136962890625, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 21:58:55,657 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:58:55,721 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[145.60455322265625 : 147.71392822265625, -42.581634521484375 : -40.733184814453125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=145.60455322265625,-42.581634521484375,147.71392822265625,-40.733184814453125, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 21:58:56,961 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:58:57,004 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[142.75634765625 : 151.19384765625, -46.3568115234375 : -38.9630126953125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=142.75634765625,-46.3568115234375,151.19384765625,-38.9630126953125, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-23 21:59:12,963 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,181 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-112.5 : -101.25, 33.75 : 45.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-112.5,33.75,-101.25,45, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,220 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,272 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-101.25 : -90.0, 33.75 : 45.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-101.25,33.75,-90,45, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,296 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,311 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,355 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-90.0 : -78.75, 45.0 : 56.25]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-90,45,-78.75,56.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,381 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,410 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-90.0 : -78.75, 33.75 : 45.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-90,33.75,-78.75,45, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,411 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-101.25 : -90.0, 45.0 : 56.25]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-101.25,45,-90,56.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,443 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,448 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,465 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-112.5 : -101.25, 45.0 : 56.25]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-112.5,45,-101.25,56.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,483 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-123.75 : -112.5, 45.0 : 56.25]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-123.75,45,-112.5,56.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,511 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,512 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,552 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-123.75 : -112.5, 33.75 : 45.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-123.75,33.75,-112.5,45, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,563 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-123.75 : -112.5, 22.5 : 33.75]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-123.75,22.5,-112.5,33.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,578 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,587 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,616 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-112.5 : -101.25, 22.5 : 33.75]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-112.5,22.5,-101.25,33.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,618 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-101.25 : -90.0, 22.5 : 33.75]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-101.25,22.5,-90,33.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,643 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,647 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,662 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-78.75 : -67.5, 22.5 : 33.75]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-78.75,22.5,-67.5,33.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,684 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,690 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-90.0 : -78.75, 22.5 : 33.75]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-90,22.5,-78.75,33.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,715 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,732 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-78.75 : -67.5, 45.0 : 56.25]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-78.75,45,-67.5,56.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,755 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-78.75 : -67.5, 33.75 : 45.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-78.75,33.75,-67.5,45, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,757 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,773 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-78.75 : -67.5, 56.25 : 67.5]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-78.75,56.25,-67.5,67.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,780 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,795 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-90.0 : -78.75, 56.25 : 67.5]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-90,56.25,-78.75,67.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,798 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,807 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-101.25 : -90.0, 56.25 : 67.5]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-101.25,56.25,-90,67.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,819 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,831 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-112.5 : -101.25, 56.25 : 67.5]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-112.5,56.25,-101.25,67.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,836 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,848 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-123.75 : -112.5, 56.25 : 67.5]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-123.75,56.25,-112.5,67.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,852 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,861 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-135.0 : -123.75, 56.25 : 67.5]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-135,56.25,-123.75,67.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,882 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,884 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,898 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-135.0 : -123.75, 45.0 : 56.25]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-135,45,-123.75,56.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,908 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,912 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-135.0 : -123.75, 33.75 : 45.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-135,33.75,-123.75,45, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,925 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,937 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-135.0 : -123.75, 22.5 : 33.75]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-135,22.5,-123.75,33.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,940 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-135.0 : -123.75, 11.25 : 22.5]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-135,11.25,-123.75,22.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,943 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,962 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:13,965 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-123.75 : -112.5, 11.25 : 22.5]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-123.75,11.25,-112.5,22.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,971 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-112.5 : -101.25, 11.25 : 22.5]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-112.5,11.25,-101.25,22.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:13,983 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:14,003 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:14,011 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-101.25 : -90.0, 11.25 : 22.5]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-101.25,11.25,-90,22.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:14,016 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:14,019 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-90.0 : -78.75, 11.25 : 22.5]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-90,11.25,-78.75,22.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:14,040 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:14,064 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-67.5 : -56.25, 11.25 : 22.5]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-67.5,11.25,-56.25,22.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:14,069 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:14,071 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-78.75 : -67.5, 11.25 : 22.5]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-78.75,11.25,-67.5,22.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:14,083 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-67.5 : -56.25, 22.5 : 33.75]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-67.5,22.5,-56.25,33.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:14,105 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:14,112 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:14,116 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:14,127 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-67.5 : -56.25, 45.0 : 56.25]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-67.5,45,-56.25,56.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:14,130 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-67.5 : -56.25, 33.75 : 45.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-67.5,33.75,-56.25,45, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:14,139 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-67.5 : -56.25, 56.25 : 67.5]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-67.5,56.25,-56.25,67.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:14,160 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:14,172 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:14,176 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-67.5 : -56.25, 67.5 : 78.75]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-67.5,67.5,-56.25,78.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:14,179 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:14,181 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-78.75 : -67.5, 67.5 : 78.75]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-78.75,67.5,-67.5,78.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:14,187 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-90.0 : -78.75, 67.5 : 78.75]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-90,67.5,-78.75,78.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:14,208 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:14,211 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:14,222 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:14,223 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-112.5 : -101.25, 67.5 : 78.75]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-112.5,67.5,-101.25,78.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:14,225 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-101.25 : -90.0, 67.5 : 78.75]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-101.25,67.5,-90,78.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:14,236 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-123.75 : -112.5, 67.5 : 78.75]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-123.75,67.5,-112.5,78.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:14,249 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-23 21:59:14,259 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-135.0 : -123.75, 67.5 : 78.75]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-135,67.5,-123.75,78.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-03-23 21:59:27,769 WARN [servlet.PageNotFound] - No mapping for GET /geoserver/data
2020-03-24 09:26:51,506 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.28.0.3:50342 failed: java.io.EOFException
2020-03-24 09:27:33,056 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.28.0.3:50354 failed: java.io.EOFException
2020-03-24 09:28:16,605 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.28.0.3:50414 failed: java.io.EOFException
2020-03-24 13:07:44,404 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.28.0.3:55870 failed: java.io.EOFException
2020-03-24 23:04:25,088 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.b764acd6a126-1b590e27c885.VirtualTopic.geoserver' - trying to recover. Cause: The Consumer is closed
2020-03-24 23:04:30,193 ERROR [client.JMSContainer] - Could not refresh JMS Connection for destination 'queue://Consumer.b764acd6a126-1b590e27c885.VirtualTopic.geoserver' - retrying using FixedBackOff{interval=5000, currentAttempts=0, maxAttempts=unlimited}. Cause: Error while attempting to retrieve a connection from the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'b764acd6a126-1b590e27c885' does not exist.
2020-03-24 23:09:13,456 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-03-24 23:09:13,703 INFO [org.geoserver] - Loading catalog...
2020-03-24 23:09:13,979 INFO [org.geoserver] - Loaded style 'population'
2020-03-24 23:09:13,987 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-03-24 23:09:13,990 INFO [org.geoserver] - Loaded style 'green'
2020-03-24 23:09:13,992 INFO [org.geoserver] - Loaded style 'line'
2020-03-24 23:09:13,994 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-03-24 23:09:13,997 INFO [org.geoserver] - Loaded style 'polygon'
2020-03-24 23:09:13,999 INFO [org.geoserver] - Loaded style 'dem'
2020-03-24 23:09:14,001 INFO [org.geoserver] - Loaded style 'restricted'
2020-03-24 23:09:14,003 INFO [org.geoserver] - Loaded style 'poi'
2020-03-24 23:09:14,005 INFO [org.geoserver] - Loaded style 'pophatch'
2020-03-24 23:09:14,006 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-03-24 23:09:14,012 INFO [org.geoserver] - Loaded style 'capitals'
2020-03-24 23:09:14,019 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-03-24 23:09:14,029 INFO [org.geoserver] - Loaded style 'raster'
2020-03-24 23:09:14,034 INFO [org.geoserver] - Loaded style 'rain'
2020-03-24 23:09:14,039 INFO [org.geoserver] - Loaded style 'burg'
2020-03-24 23:09:14,046 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-03-24 23:09:14,050 INFO [org.geoserver] - Loaded style 'point'
2020-03-24 23:09:14,051 INFO [org.geoserver] - Loaded style 'generic'
2020-03-24 23:09:14,052 INFO [org.geoserver] - Loaded style 'grass'
2020-03-24 23:09:14,053 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-03-24 23:09:14,060 INFO [org.geoserver] - Loaded default workspace cite
2020-03-24 23:09:14,167 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-03-24 23:09:14,175 INFO [org.geoserver] - Loaded workspace 'sde'
2020-03-24 23:09:14,182 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-03-24 23:09:14,187 INFO [org.geoserver] - Loaded workspace 'cite'
2020-03-24 23:09:14,194 INFO [org.geoserver] - Loaded workspace 'topp'
2020-03-24 23:09:14,199 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-03-24 23:09:14,215 INFO [org.geoserver] - Loaded workspace 'sf'
2020-03-24 23:09:14,220 INFO [org.geoserver] - Loaded workspace 'gisarch'
2020-03-24 23:09:15,539 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-03-24 23:09:18,196 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-03-24 23:09:18,218 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-03-24 23:09:18,233 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-03-24 23:09:18,241 INFO [org.geoserver] - Loaded layer 'poi'
2020-03-24 23:09:18,253 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-03-24 23:09:18,260 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-03-24 23:09:18,270 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-03-24 23:09:18,278 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-03-24 23:09:18,297 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-03-24 23:09:19,250 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-03-24 23:09:19,265 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-03-24 23:09:19,292 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-03-24 23:09:19,339 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-03-24 23:09:19,348 INFO [org.geoserver] - Loaded layer 'roads'
2020-03-24 23:09:19,376 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-03-24 23:09:19,389 INFO [org.geoserver] - Loaded layer 'restricted'
2020-03-24 23:09:19,440 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-03-24 23:09:19,464 INFO [org.geoserver] - Loaded layer 'archsites'
2020-03-24 23:09:19,487 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-03-24 23:09:19,497 INFO [org.geoserver] - Loaded layer 'streams'
2020-03-24 23:09:19,512 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-03-24 23:09:19,517 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-03-24 23:09:19,548 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-03-24 23:09:19,630 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-03-24 23:09:19,639 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-03-24 23:09:19,646 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-03-24 23:09:19,663 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-03-24 23:09:19,681 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-03-24 23:09:19,690 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-03-24 23:09:19,700 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-03-24 23:09:19,710 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-03-24 23:09:19,715 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-03-24 23:09:19,727 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-03-24 23:09:19,729 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-03-24 23:09:20,190 INFO [org.geoserver] - Loaded data store 'gisarchdb', enabled
2020-03-24 23:09:20,206 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-03-24 23:09:20,223 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-03-24 23:09:20,229 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-03-24 23:09:20,247 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-03-24 23:09:20,262 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-03-24 23:09:20,272 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-03-24 23:09:20,276 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-03-24 23:09:20,279 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-03-24 23:09:20,280 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-03-24 23:09:20,369 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-03-24 23:09:20,395 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-03-24 23:09:20,403 INFO [org.geoserver] - Loaded layer 'states'
2020-03-24 23:09:20,436 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-03-24 23:09:20,444 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-03-24 23:09:20,450 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-03-24 23:09:20,459 INFO [org.geoserver] - Read catalog in 6.753 s
2020-03-24 23:09:20,787 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-3e932fc5:1710eceb80d:-8000', enabled
2020-03-24 23:09:20,853 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-03-24 23:09:20,937 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-03-24 23:09:20,994 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-03-24 23:09:21,059 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-03-24 23:09:21,189 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-24 23:09:21,192 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-24 23:09:21,194 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-24 23:09:21,319 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-24 23:09:21,322 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-03-24 23:09:21,323 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-03-24 23:09:21,324 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-24 23:09:21,416 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-03-24 23:09:21,420 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-03-24 23:09:21,484 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-03-24 23:09:21,485 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-03-24 23:09:21,485 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-03-24 23:09:21,563 INFO [gwc.layer] - Loaded 22 tile layers in 77.57 ms
2020-03-24 23:09:21,595 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-03-24 23:09:21,616 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-24 23:09:21,617 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-03-24 23:09:21,617 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-24 23:09:21,829 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-03-24 23:09:22,077 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-03-24 23:09:22,090 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-03-24 23:09:22,099 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-24 23:09:22,147 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-24 23:09:22,168 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-03-24 23:09:22,168 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-03-24 23:09:22,218 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-03-24 23:09:22,356 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-03-24 23:09:23,065 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-03-24 23:09:23,164 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-03-24 23:09:23,175 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-03-24 23:09:23,538 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-03-24 23:09:23,538 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-03-24 23:09:25,878 INFO [cluster.impl] - Using brokerURI: vm://1ee5cd05f596-78c2819f7dc5?create=false&waitForStart=5000
2020-03-24 23:09:31,605 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-03-24 23:09:43,892 INFO [cluster.impl] - Starting the embedded brokerURI
2020-03-24 23:09:45,291 INFO [cluster.impl] - Embedded brokerURI is now started
2020-03-24 23:09:45,294 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[1ee5cd05f596-78c2819f7dc5]
2020-03-24 23:09:45,298 INFO [cluster.client] - Connecting...
2020-03-24 23:09:45,299 INFO [cluster.impl] - Using brokerURI: vm://1ee5cd05f596-78c2819f7dc5?create=false&waitForStart=5000
2020-03-24 23:09:45,398 INFO [cluster.client] - Registration...
2020-03-24 23:09:45,399 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-03-24 23:09:45,399 INFO [cluster.client] - Waiting for registration...(1/3)
2020-03-24 23:09:45,410 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.30.0.2:44878 failed: java.io.EOFException
2020-03-24 23:09:55,400 INFO [cluster.client] - Registration...
2020-03-24 23:09:55,401 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-03-24 23:09:55,945 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-03-24 23:09:55,956 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-03-24 23:09:56,191 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-03-24 23:09:56,192 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-03-24 23:09:56,207 INFO [geoserver.importer] - Enabling import store: memory
2020-03-24 23:09:56,207 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-24 23:09:56,207 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-24 23:10:05,614 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.1ee5cd05f596-78c2819f7dc5.VirtualTopic.geoserver' - trying to recover. Cause: The Consumer is closed
2020-03-24 23:10:10,634 ERROR [client.JMSContainer] - Could not refresh JMS Connection for destination 'queue://Consumer.1ee5cd05f596-78c2819f7dc5.VirtualTopic.geoserver' - retrying using FixedBackOff{interval=5000, currentAttempts=0, maxAttempts=unlimited}. Cause: Error while attempting to retrieve a connection from the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named '1ee5cd05f596-78c2819f7dc5' does not exist.
2020-03-24 23:18:40,025 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-03-24 23:18:40,259 INFO [org.geoserver] - Loading catalog...
2020-03-24 23:18:40,533 INFO [org.geoserver] - Loaded style 'population'
2020-03-24 23:18:40,544 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-03-24 23:18:40,545 INFO [org.geoserver] - Loaded style 'green'
2020-03-24 23:18:40,560 INFO [org.geoserver] - Loaded style 'line'
2020-03-24 23:18:40,561 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-03-24 23:18:40,568 INFO [org.geoserver] - Loaded style 'polygon'
2020-03-24 23:18:40,574 INFO [org.geoserver] - Loaded style 'dem'
2020-03-24 23:18:40,581 INFO [org.geoserver] - Loaded style 'restricted'
2020-03-24 23:18:40,582 INFO [org.geoserver] - Loaded style 'poi'
2020-03-24 23:18:40,582 INFO [org.geoserver] - Loaded style 'pophatch'
2020-03-24 23:18:40,618 INFO [org.geoserver] - Loaded style 'grass'
2020-03-24 23:18:40,621 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-03-24 23:18:40,627 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-03-24 23:18:40,635 INFO [org.geoserver] - Loaded style 'capitals'
2020-03-24 23:18:40,637 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-03-24 23:18:40,645 INFO [org.geoserver] - Loaded style 'raster'
2020-03-24 23:18:40,647 INFO [org.geoserver] - Loaded style 'rain'
2020-03-24 23:18:40,651 INFO [org.geoserver] - Loaded style 'burg'
2020-03-24 23:18:40,656 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-03-24 23:18:40,657 INFO [org.geoserver] - Loaded style 'point'
2020-03-24 23:18:40,670 INFO [org.geoserver] - Loaded style 'generic'
2020-03-24 23:18:40,672 INFO [org.geoserver] - Loaded default workspace cite
2020-03-24 23:18:40,807 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-03-24 23:18:40,823 INFO [org.geoserver] - Loaded workspace 'cite'
2020-03-24 23:18:40,844 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-03-24 23:18:40,856 INFO [org.geoserver] - Loaded workspace 'sde'
2020-03-24 23:18:40,866 INFO [org.geoserver] - Loaded workspace 'sf'
2020-03-24 23:18:40,876 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-03-24 23:18:40,888 INFO [org.geoserver] - Loaded workspace 'gisarch'
2020-03-24 23:18:40,898 INFO [org.geoserver] - Loaded workspace 'topp'
2020-03-24 23:18:42,521 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-03-24 23:18:45,082 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-03-24 23:18:45,121 INFO [org.geoserver] - Loaded layer 'poi'
2020-03-24 23:18:45,130 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-03-24 23:18:45,136 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-03-24 23:18:45,145 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-03-24 23:18:45,152 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-03-24 23:18:45,159 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-03-24 23:18:45,174 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-03-24 23:18:45,185 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-03-24 23:18:46,190 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-03-24 23:18:46,194 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-03-24 23:18:46,212 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-03-24 23:18:46,234 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-03-24 23:18:46,241 INFO [org.geoserver] - Loaded layer 'roads'
2020-03-24 23:18:46,268 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-03-24 23:18:46,273 INFO [org.geoserver] - Loaded layer 'restricted'
2020-03-24 23:18:46,287 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-03-24 23:18:46,305 INFO [org.geoserver] - Loaded layer 'archsites'
2020-03-24 23:18:46,323 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-03-24 23:18:46,329 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-03-24 23:18:46,335 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-03-24 23:18:46,336 INFO [org.geoserver] - Loaded layer 'streams'
2020-03-24 23:18:46,351 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-03-24 23:18:46,374 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-03-24 23:18:46,379 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-03-24 23:18:46,381 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-03-24 23:18:46,394 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-03-24 23:18:46,399 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-03-24 23:18:46,403 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-03-24 23:18:46,408 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-03-24 23:18:46,410 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-03-24 23:18:46,412 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-03-24 23:18:46,417 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-03-24 23:18:46,419 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-03-24 23:18:47,323 INFO [org.geoserver] - Loaded data store 'gisarchdb', enabled
2020-03-24 23:18:47,331 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-03-24 23:18:47,340 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-03-24 23:18:47,341 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-03-24 23:18:47,360 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-03-24 23:18:47,371 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-03-24 23:18:47,378 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-03-24 23:18:47,388 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-03-24 23:18:47,395 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-03-24 23:18:47,398 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-03-24 23:18:47,409 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-03-24 23:18:47,423 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-03-24 23:18:47,428 INFO [org.geoserver] - Loaded layer 'states'
2020-03-24 23:18:47,478 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-03-24 23:18:47,493 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-03-24 23:18:47,516 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-03-24 23:18:47,525 INFO [org.geoserver] - Read catalog in 7.265 s
2020-03-24 23:18:48,117 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl--4af03798:1710ed76034:-8000', enabled
2020-03-24 23:18:48,159 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-03-24 23:18:48,221 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-03-24 23:18:48,277 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-03-24 23:18:48,337 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-03-24 23:18:48,547 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-24 23:18:48,548 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-24 23:18:48,548 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-24 23:18:48,872 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-24 23:18:48,873 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-03-24 23:18:48,874 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-03-24 23:18:48,874 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-24 23:18:49,030 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-03-24 23:18:49,033 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-03-24 23:18:49,139 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-03-24 23:18:49,139 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-03-24 23:18:49,139 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-03-24 23:18:49,200 INFO [gwc.layer] - Loaded 22 tile layers in 59.04 ms
2020-03-24 23:18:49,224 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-03-24 23:18:49,241 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-24 23:18:49,241 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-03-24 23:18:49,241 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-24 23:18:49,352 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-03-24 23:18:49,489 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-03-24 23:18:49,502 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-03-24 23:18:49,508 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-24 23:18:49,525 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-24 23:18:49,528 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-03-24 23:18:49,528 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-03-24 23:18:49,553 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-03-24 23:18:49,681 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-03-24 23:18:50,171 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-03-24 23:18:50,230 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-03-24 23:18:50,355 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-03-24 23:18:50,670 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-03-24 23:18:50,673 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-03-24 23:18:52,403 INFO [cluster.impl] - Using brokerURI: vm://ea6191e83bf0-22fb3db30b90?create=false&waitForStart=5000
2020-03-24 23:18:56,783 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-03-24 23:19:05,182 INFO [cluster.impl] - Starting the embedded brokerURI
2020-03-24 23:19:06,446 INFO [cluster.impl] - Embedded brokerURI is now started
2020-03-24 23:19:06,448 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[ea6191e83bf0-22fb3db30b90]
2020-03-24 23:19:06,449 INFO [cluster.client] - Connecting...
2020-03-24 23:19:06,450 INFO [cluster.impl] - Using brokerURI: vm://ea6191e83bf0-22fb3db30b90?create=false&waitForStart=5000
2020-03-24 23:19:06,691 INFO [cluster.client] - Registration...
2020-03-24 23:19:06,714 WARN [TransportConnection.Transport] - Transport Connection to: tcp://192.168.16.4:38060 failed: java.io.EOFException
2020-03-24 23:19:06,727 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-03-24 23:19:06,727 INFO [cluster.client] - Waiting for registration...(1/3)
2020-03-24 23:19:16,727 INFO [cluster.client] - Registration...
2020-03-24 23:19:16,728 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-03-24 23:19:17,264 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-03-24 23:19:17,273 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-03-24 23:19:17,465 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-03-24 23:19:17,466 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-03-24 23:19:17,485 INFO [geoserver.importer] - Enabling import store: memory
2020-03-24 23:19:17,485 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-24 23:19:17,485 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-25 02:17:16,244 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.ea6191e83bf0-22fb3db30b90.VirtualTopic.geoserver' - trying to recover. Cause: The Consumer is closed
2020-03-25 02:17:21,259 ERROR [client.JMSContainer] - Could not refresh JMS Connection for destination 'queue://Consumer.ea6191e83bf0-22fb3db30b90.VirtualTopic.geoserver' - retrying using FixedBackOff{interval=5000, currentAttempts=0, maxAttempts=unlimited}. Cause: Error while attempting to retrieve a connection from the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'ea6191e83bf0-22fb3db30b90' does not exist.
2020-03-25 02:18:31,191 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-03-25 02:18:31,402 INFO [org.geoserver] - Loading catalog...
2020-03-25 02:18:31,594 INFO [org.geoserver] - Loaded style 'population'
2020-03-25 02:18:31,598 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-03-25 02:18:31,601 INFO [org.geoserver] - Loaded style 'green'
2020-03-25 02:18:31,608 INFO [org.geoserver] - Loaded style 'line'
2020-03-25 02:18:31,612 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-03-25 02:18:31,619 INFO [org.geoserver] - Loaded style 'polygon'
2020-03-25 02:18:31,622 INFO [org.geoserver] - Loaded style 'dem'
2020-03-25 02:18:31,623 INFO [org.geoserver] - Loaded style 'restricted'
2020-03-25 02:18:31,623 INFO [org.geoserver] - Loaded style 'poi'
2020-03-25 02:18:31,624 INFO [org.geoserver] - Loaded style 'pophatch'
2020-03-25 02:18:31,625 INFO [org.geoserver] - Loaded style 'grass'
2020-03-25 02:18:31,626 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-03-25 02:18:31,627 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-03-25 02:18:31,629 INFO [org.geoserver] - Loaded style 'capitals'
2020-03-25 02:18:31,630 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-03-25 02:18:31,633 INFO [org.geoserver] - Loaded style 'raster'
2020-03-25 02:18:31,635 INFO [org.geoserver] - Loaded style 'rain'
2020-03-25 02:18:31,639 INFO [org.geoserver] - Loaded style 'burg'
2020-03-25 02:18:31,643 INFO [org.geoserver] - Loaded style 'point'
2020-03-25 02:18:31,645 INFO [org.geoserver] - Loaded style 'generic'
2020-03-25 02:18:31,646 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-03-25 02:18:31,648 INFO [org.geoserver] - Loaded default workspace cite
2020-03-25 02:18:31,717 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-03-25 02:18:31,735 INFO [org.geoserver] - Loaded workspace 'sf'
2020-03-25 02:18:31,744 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-03-25 02:18:31,746 INFO [org.geoserver] - Loaded workspace 'gisarch'
2020-03-25 02:18:31,760 INFO [org.geoserver] - Loaded workspace 'sde'
2020-03-25 02:18:31,764 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-03-25 02:18:31,773 INFO [org.geoserver] - Loaded workspace 'cite'
2020-03-25 02:18:31,784 INFO [org.geoserver] - Loaded workspace 'topp'
2020-03-25 02:18:33,106 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-03-25 02:18:35,897 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-03-25 02:18:35,934 INFO [org.geoserver] - Loaded layer 'poi'
2020-03-25 02:18:35,942 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-03-25 02:18:35,947 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-03-25 02:18:35,955 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-03-25 02:18:35,958 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-03-25 02:18:35,963 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-03-25 02:18:35,967 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-03-25 02:18:36,007 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-03-25 02:18:37,081 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-03-25 02:18:37,086 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-03-25 02:18:37,101 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-03-25 02:18:37,134 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-03-25 02:18:37,136 INFO [org.geoserver] - Loaded layer 'roads'
2020-03-25 02:18:37,192 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-03-25 02:18:37,212 INFO [org.geoserver] - Loaded layer 'restricted'
2020-03-25 02:18:37,224 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-03-25 02:18:37,233 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-03-25 02:18:37,254 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-03-25 02:18:37,262 INFO [org.geoserver] - Loaded layer 'streams'
2020-03-25 02:18:37,274 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-03-25 02:18:37,282 INFO [org.geoserver] - Loaded layer 'archsites'
2020-03-25 02:18:37,294 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-03-25 02:18:37,346 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-03-25 02:18:37,351 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-03-25 02:18:37,360 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-03-25 02:18:37,381 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-03-25 02:18:37,386 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-03-25 02:18:37,392 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-03-25 02:18:37,399 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-03-25 02:18:37,402 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-03-25 02:18:37,404 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-03-25 02:18:37,424 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-03-25 02:18:37,427 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-03-25 02:18:38,104 INFO [org.geoserver] - Loaded data store 'gisarchdb', enabled
2020-03-25 02:18:38,121 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-03-25 02:18:38,135 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-03-25 02:18:38,141 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-03-25 02:18:38,174 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-03-25 02:18:38,188 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-03-25 02:18:38,197 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-03-25 02:18:38,206 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-03-25 02:18:38,234 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-03-25 02:18:38,237 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-03-25 02:18:38,262 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-03-25 02:18:38,272 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-03-25 02:18:38,277 INFO [org.geoserver] - Loaded layer 'states'
2020-03-25 02:18:38,302 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-03-25 02:18:38,305 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-03-25 02:18:38,308 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-03-25 02:18:38,316 INFO [org.geoserver] - Read catalog in 6.908 s
2020-03-25 02:18:38,552 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl--5f8d1cfa:1710f7c0656:-8000', enabled
2020-03-25 02:18:38,569 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-03-25 02:18:38,612 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-03-25 02:18:38,641 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-03-25 02:18:38,714 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 02:18:38,840 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 02:18:38,842 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 02:18:38,843 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 02:18:38,970 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-25 02:18:38,972 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-03-25 02:18:38,975 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-03-25 02:18:38,976 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-25 02:18:39,081 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-03-25 02:18:39,090 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-03-25 02:18:39,170 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-03-25 02:18:39,170 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-03-25 02:18:39,171 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-03-25 02:18:39,250 INFO [gwc.layer] - Loaded 22 tile layers in 79.20 ms
2020-03-25 02:18:39,268 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-03-25 02:18:39,287 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-25 02:18:39,288 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-03-25 02:18:39,288 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-25 02:18:39,379 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-03-25 02:18:39,550 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 02:18:39,577 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 02:18:39,600 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-25 02:18:39,628 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-25 02:18:39,632 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-03-25 02:18:39,633 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-03-25 02:18:39,682 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-03-25 02:18:39,760 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-03-25 02:18:40,058 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-03-25 02:18:40,082 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-03-25 02:18:40,087 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-03-25 02:18:40,236 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-03-25 02:18:40,238 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-03-25 02:18:41,706 INFO [cluster.impl] - Using brokerURI: vm://cdda0a2a1277-dae34d231896?create=false&waitForStart=5000
2020-03-25 02:18:45,321 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-03-25 02:18:53,558 INFO [cluster.impl] - Starting the embedded brokerURI
2020-03-25 02:18:54,902 INFO [cluster.impl] - Embedded brokerURI is now started
2020-03-25 02:18:54,903 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[cdda0a2a1277-dae34d231896]
2020-03-25 02:18:54,904 INFO [cluster.client] - Connecting...
2020-03-25 02:18:54,904 INFO [cluster.impl] - Using brokerURI: vm://cdda0a2a1277-dae34d231896?create=false&waitForStart=5000
2020-03-25 02:18:54,978 INFO [cluster.client] - Registration...
2020-03-25 02:18:54,992 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-03-25 02:18:54,993 INFO [cluster.client] - Waiting for registration...(1/3)
2020-03-25 02:18:55,478 WARN [TransportConnection.Transport] - Transport Connection to: tcp://192.168.48.4:40830 failed: java.io.EOFException
2020-03-25 02:19:04,993 INFO [cluster.client] - Registration...
2020-03-25 02:19:04,994 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-03-25 02:19:05,414 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-03-25 02:19:05,422 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-03-25 02:19:05,619 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-03-25 02:19:05,620 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-03-25 02:19:05,635 INFO [geoserver.importer] - Enabling import store: memory
2020-03-25 02:19:05,635 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-25 02:19:05,635 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-25 02:27:25,392 INFO [geoserver.security] - Strong cryptography is available
2020-03-25 02:28:08,642 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:28:09,232 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-124.73142200000001 : -66.969849, 24.955967 : 49.371735]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=-124.73142200000001,24.955967,-66.969849,49.371735, VERSION=1.1.0, SERVICE=WMS, WIDTH=768, HEIGHT=330, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
2020-03-25 02:28:10,104 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:28:11,290 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-129.638671875 : -62.138671875, 22.67578125 : 51.6796875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=-129.638671875,22.67578125,-62.138671875,51.6796875, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=330, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-25 02:28:15,521 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:28:15,691 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-119.5751953125 : -85.8251953125, 31.6845703125 : 46.1865234375]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=-119.5751953125,31.6845703125,-85.8251953125,46.1865234375, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=330, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-25 02:28:16,684 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:28:16,828 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-136.23046875 : -68.73046875, 23.73046875 : 52.734375]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=-136.23046875,23.73046875,-68.73046875,52.734375, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=330, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-25 02:28:17,601 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:28:17,759 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-119.35546875 : -85.60546875, 31.552734375 : 46.0546875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=-119.35546875,31.552734375,-85.60546875,46.0546875, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=330, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-25 02:28:18,653 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:28:18,681 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-106.69921875 : -98.26171875, 37.41943359375 : 41.044921875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=-106.69921875,37.41943359375,-98.26171875,41.044921875, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=330, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-25 02:28:19,527 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:28:19,611 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-110.91796875 : -94.04296875, 35.4638671875 : 42.71484375]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=-110.91796875,35.4638671875,-94.04296875,42.71484375, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=330, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-25 02:28:22,537 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:28:22,619 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-128.671875 : -61.171875, 26.54296875 : 55.546875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=-128.671875,26.54296875,-61.171875,55.546875, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=330, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-25 02:28:23,217 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:28:23,274 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-113.115234375 : -79.365234375, 34.2333984375 : 48.7353515625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=-113.115234375,34.2333984375,-79.365234375,48.7353515625, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=330, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-03-25 02:44:14,046 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:44:14,182 WARN [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
2020-03-25 02:44:14,294 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1.3888944635145342E7 : -7451112.364854658, 2867630.7173607955 : 6340929.2826392045]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 355
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-13888944.635145342,2867630.7173607955,-7451112.364854658,6340929.2826392045, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=658, HEIGHT=355, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 658
2020-03-25 02:44:17,704 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:44:17,815 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1.3889092563834378E7 : -7999160.912291838, 2867630.7173607955 : 6340929.2826392045]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 355
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-13889092.563834378,2867630.7173607955,-7999160.912291838,6340929.2826392045, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=602, HEIGHT=355, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 602
2020-03-25 02:44:32,464 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:44:32,586 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1.2770188847402204E7 : -9095281.662725825, 3370108.0751463687 : 5768089.924853631]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 400
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-12770188.847402204,3370108.0751463687,-9095281.662725825,5768089.924853631, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=613, HEIGHT=400, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 613
2020-03-25 02:44:44,964 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:44:45,016 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1.1582972377340458E7 : -9590755.819595523, 3935579.966089073 : 5235558.144062929]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 400
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-11582972.377340458,3935579.966089073,-9590755.819595523,5235558.144062929, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=613, HEIGHT=400, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 613
2020-03-25 02:44:50,692 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:44:50,759 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1.2687953828618236E7 : -8485774.368317746, 3935579.966089073 : 5235558.144062929]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 400
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-12687953.828618236,3935579.966089073,-8485774.368317746,5235558.144062929, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=1293, HEIGHT=400, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 1293
2020-03-25 02:44:52,844 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:44:52,944 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1.2265925151442345E7 : -9355685.872860614, 4158270.9800610077 : 5060827.786488907]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 401
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-12265925.151442345,4158270.9800610077,-9355685.872860614,5060827.786488907, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=1293, HEIGHT=401, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 1293
2020-03-25 02:44:53,798 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:44:53,899 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1.1892861390834998E7 : -1.0109658192779671E7, 4354644.685921182 : 4906293.007051987]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 400
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-11892861.390834998,4354644.685921182,-10109658.192779671,4906293.007051987, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=1293, HEIGHT=400, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 1293
2020-03-25 02:45:10,139 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:45:10,173 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1.1642111507509004E7 : -1.0246267448211756E7, 4413662.280921446 : 4845477.92184867]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 400
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-11642111.507509004,4413662.280921446,-10246267.448211756,4845477.92184867, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=1293, HEIGHT=400, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 1293
2020-03-25 02:45:13,623 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:45:13,658 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1.1086339112640658E7 : -9690495.05334341, 4561359.748448951 : 4993175.389376175]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 400
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-11086339.112640658,4561359.748448951,-9690495.05334341,4993175.389376175, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=1293, HEIGHT=400, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 1293
2020-03-25 02:45:18,871 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:45:18,909 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1.148362818165395E7 : -9468128.192038018, 4470783.591581022 : 5094294.8025990985]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 400
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-11483628.18165395,4470783.591581022,-9468128.192038018,5094294.8025990985, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=1293, HEIGHT=400, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 1293
2020-03-25 02:45:22,048 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:45:22,102 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1.2057285467464197E7 : -9147046.188882466, 4341234.477889284 : 5243791.284317183]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 401
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-12057285.467464197,4341234.477889284,-9147046.188882466,5243791.284317183, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=1293, HEIGHT=401, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 1293
2020-03-25 02:45:23,766 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:45:23,875 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1.2576522630840039E7 : -8855790.701215884, 4225369.818042526 : 5378394.16408525]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 401
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-12576522.630840039,4225369.818042526,-8855790.701215884,5378394.16408525, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=1294, HEIGHT=401, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 1294
2020-03-25 02:45:26,685 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:45:26,770 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1.3236578381136175E7 : -8486983.56892614, 4079188.3417083523 : 5548513.882995293]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 400
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-13236578.381136175,4079188.3417083523,-8486983.56892614,5548513.882995293, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=1293, HEIGHT=400, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 1293
2020-03-25 02:45:28,864 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:45:28,925 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1.3886847847339097E7 : -7723593.901410927, 3767726.3103301125 : 5889328.357121221]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 400
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-13886847.847339097,3767726.3103301125,-7723593.901410927,5889328.357121221, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=1162, HEIGHT=400, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 1162
2020-03-25 02:45:30,200 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:45:30,250 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1.3886643793474063E7 : -7453413.206525937, 3315533.0462461933 : 6340683.143680135]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 395
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-13886643.793474063,3315533.0462461933,-7453413.206525937,6340683.143680135, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=840, HEIGHT=395, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 840
2020-03-25 02:45:32,459 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-03-25 02:45:32,515 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1.3886643793474063E7 : -7453413.206525937, 2865776.0199556844 : 6342783.980044316]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 227
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-13886643.793474063,2865776.0199556844,-7453413.206525937,6342783.980044316, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=420, HEIGHT=227, TRANSPARENT=true, LAYERS=topp:states}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG:3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=population]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 420
2020-03-25 02:52:26,793 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.cdda0a2a1277-dae34d231896.VirtualTopic.geoserver' - trying to recover. Cause: The Session is closed
2020-03-25 02:52:31,837 ERROR [client.JMSContainer] - Could not refresh JMS Connection for destination 'queue://Consumer.cdda0a2a1277-dae34d231896.VirtualTopic.geoserver' - retrying using FixedBackOff{interval=5000, currentAttempts=0, maxAttempts=unlimited}. Cause: Error while attempting to retrieve a connection from the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'cdda0a2a1277-dae34d231896' does not exist.
2020-03-25 02:53:33,038 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-03-25 02:53:33,218 INFO [org.geoserver] - Loading catalog...
2020-03-25 02:53:33,377 INFO [org.geoserver] - Loaded style 'population'
2020-03-25 02:53:33,380 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-03-25 02:53:33,387 INFO [org.geoserver] - Loaded style 'green'
2020-03-25 02:53:33,392 INFO [org.geoserver] - Loaded style 'line'
2020-03-25 02:53:33,393 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-03-25 02:53:33,404 INFO [org.geoserver] - Loaded style 'polygon'
2020-03-25 02:53:33,406 INFO [org.geoserver] - Loaded style 'dem'
2020-03-25 02:53:33,412 INFO [org.geoserver] - Loaded style 'restricted'
2020-03-25 02:53:33,418 INFO [org.geoserver] - Loaded style 'poi'
2020-03-25 02:53:33,419 INFO [org.geoserver] - Loaded style 'pophatch'
2020-03-25 02:53:33,420 INFO [org.geoserver] - Loaded style 'grass'
2020-03-25 02:53:33,421 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-03-25 02:53:33,428 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-03-25 02:53:33,431 INFO [org.geoserver] - Loaded style 'capitals'
2020-03-25 02:53:33,433 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-03-25 02:53:33,441 INFO [org.geoserver] - Loaded style 'raster'
2020-03-25 02:53:33,450 INFO [org.geoserver] - Loaded style 'rain'
2020-03-25 02:53:33,456 INFO [org.geoserver] - Loaded style 'burg'
2020-03-25 02:53:33,464 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-03-25 02:53:33,468 INFO [org.geoserver] - Loaded style 'point'
2020-03-25 02:53:33,478 INFO [org.geoserver] - Loaded style 'generic'
2020-03-25 02:53:33,491 INFO [org.geoserver] - Loaded default workspace cite
2020-03-25 02:53:33,586 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-03-25 02:53:33,604 INFO [org.geoserver] - Loaded workspace 'sf'
2020-03-25 02:53:33,613 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-03-25 02:53:33,618 INFO [org.geoserver] - Loaded workspace 'gisarch'
2020-03-25 02:53:33,629 INFO [org.geoserver] - Loaded workspace 'topp'
2020-03-25 02:53:33,638 INFO [org.geoserver] - Loaded workspace 'cite'
2020-03-25 02:53:33,645 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-03-25 02:53:33,651 INFO [org.geoserver] - Loaded workspace 'sde'
2020-03-25 02:53:35,295 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-03-25 02:53:37,578 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-03-25 02:53:37,609 INFO [org.geoserver] - Loaded layer 'poi'
2020-03-25 02:53:37,622 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-03-25 02:53:37,625 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-03-25 02:53:37,633 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-03-25 02:53:37,639 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-03-25 02:53:37,648 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-03-25 02:53:37,664 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-03-25 02:53:37,680 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-03-25 02:53:38,779 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-03-25 02:53:38,791 INFO [org.geoserver] - Loaded layer 'roads'
2020-03-25 02:53:38,800 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-03-25 02:53:38,807 INFO [org.geoserver] - Loaded layer 'archsites'
2020-03-25 02:53:38,835 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-03-25 02:53:38,845 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-03-25 02:53:38,876 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-03-25 02:53:38,883 INFO [org.geoserver] - Loaded layer 'restricted'
2020-03-25 02:53:38,914 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-03-25 02:53:38,922 INFO [org.geoserver] - Loaded layer 'streams'
2020-03-25 02:53:38,941 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-03-25 02:53:39,000 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-03-25 02:53:39,006 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-03-25 02:53:39,027 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-03-25 02:53:39,051 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-03-25 02:53:39,053 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-03-25 02:53:39,055 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-03-25 02:53:39,061 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-03-25 02:53:39,065 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-03-25 02:53:39,071 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-03-25 02:53:39,094 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-03-25 02:53:39,104 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-03-25 02:53:39,111 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-03-25 02:53:39,119 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-03-25 02:53:39,122 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-03-25 02:53:39,885 INFO [org.geoserver] - Loaded data store 'gisarchdb', enabled
2020-03-25 02:53:39,920 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-03-25 02:53:39,935 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-03-25 02:53:39,952 INFO [org.geoserver] - Loaded layer 'states'
2020-03-25 02:53:39,979 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-03-25 02:53:40,022 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-03-25 02:53:40,047 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-03-25 02:53:40,063 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-03-25 02:53:40,066 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-03-25 02:53:40,073 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-03-25 02:53:40,084 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-03-25 02:53:40,090 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-03-25 02:53:40,092 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-03-25 02:53:40,167 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-03-25 02:53:40,193 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-03-25 02:53:40,201 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-03-25 02:53:40,222 INFO [org.geoserver] - Read catalog in 6.992 s
2020-03-25 02:53:40,520 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-6e5f5179:1710f9c1925:-8000', enabled
2020-03-25 02:53:40,542 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-03-25 02:53:40,593 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-03-25 02:53:40,639 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-03-25 02:53:40,715 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 02:53:40,855 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 02:53:40,856 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 02:53:40,856 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 02:53:40,969 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-25 02:53:40,970 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-03-25 02:53:40,970 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-03-25 02:53:40,971 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-25 02:53:41,082 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-03-25 02:53:41,089 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-03-25 02:53:41,151 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-03-25 02:53:41,152 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-03-25 02:53:41,154 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-03-25 02:53:41,214 INFO [gwc.layer] - Loaded 22 tile layers in 59.58 ms
2020-03-25 02:53:41,229 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-03-25 02:53:41,238 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-25 02:53:41,238 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-03-25 02:53:41,238 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-25 02:53:41,320 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-03-25 02:53:41,445 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 02:53:41,457 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 02:53:41,460 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-25 02:53:41,475 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-25 02:53:41,480 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-03-25 02:53:41,484 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-03-25 02:53:41,545 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-03-25 02:53:41,638 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-03-25 02:53:41,929 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-03-25 02:53:41,950 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-03-25 02:53:41,970 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-03-25 02:53:42,175 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-03-25 02:53:42,185 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-03-25 02:53:44,092 INFO [cluster.impl] - Using brokerURI: vm://9484a7413e38-a0a5183693d7?create=false&waitForStart=5000
2020-03-25 02:53:48,432 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-03-25 02:54:00,486 INFO [cluster.impl] - Starting the embedded brokerURI
2020-03-25 02:54:01,994 ERROR [multicast.MulticastDiscoveryAgent] - Failed to advertise our service: default.ActiveMQ-4.alive.%localhost%tcp://9484a7413e38:42699
java.io.IOException: Operation not permitted
	at java.base/java.net.PlainDatagramSocketImpl.send0(Native Method)
	at java.base/java.net.AbstractPlainDatagramSocketImpl.send(AbstractPlainDatagramSocketImpl.java:136)
	at java.base/java.net.DatagramSocket.send(DatagramSocket.java:791)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.doAdvertizeSelf(MulticastDiscoveryAgent.java:446)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.doTimeKeepingServices(MulticastDiscoveryAgent.java:430)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.run(MulticastDiscoveryAgent.java:392)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-03-25 02:54:02,006 ERROR [multicast.MulticastDiscoveryAgent] - The 'Operation not permitted' error has been know to be caused by improper firewall/network setup.  Please make sure that the OS is properly configured to allow multicast traffic over: 0.0.0.0/0.0.0.0
2020-03-25 02:54:02,028 INFO [cluster.impl] - Embedded brokerURI is now started
2020-03-25 02:54:02,029 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[9484a7413e38-a0a5183693d7]
2020-03-25 02:54:02,031 INFO [cluster.client] - Connecting...
2020-03-25 02:54:02,039 INFO [cluster.impl] - Using brokerURI: vm://9484a7413e38-a0a5183693d7?create=false&waitForStart=5000
2020-03-25 02:54:02,117 INFO [cluster.client] - Registration...
2020-03-25 02:54:02,118 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-03-25 02:54:02,118 INFO [cluster.client] - Waiting for registration...(1/3)
2020-03-25 02:54:02,583 WARN [TransportConnection.Transport] - Transport Connection to: tcp://192.168.64.6:48350 failed: java.io.EOFException
2020-03-25 02:54:12,118 INFO [cluster.client] - Registration...
2020-03-25 02:54:13,411 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-03-25 02:54:22,823 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-03-25 02:54:22,832 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-03-25 02:54:23,657 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-03-25 02:54:23,658 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-03-25 02:54:23,679 INFO [geoserver.importer] - Enabling import store: memory
2020-03-25 02:54:23,679 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-25 02:54:23,679 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-25 03:00:19,664 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.9484a7413e38-a0a5183693d7.VirtualTopic.geoserver' - trying to recover. Cause: The Consumer is closed
2020-03-25 03:00:24,673 ERROR [client.JMSContainer] - Could not refresh JMS Connection for destination 'queue://Consumer.9484a7413e38-a0a5183693d7.VirtualTopic.geoserver' - retrying using FixedBackOff{interval=5000, currentAttempts=0, maxAttempts=unlimited}. Cause: Error while attempting to retrieve a connection from the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named '9484a7413e38-a0a5183693d7' does not exist.
2020-03-25 03:03:33,020 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-03-25 03:03:33,100 INFO [org.geoserver] - Loading catalog...
2020-03-25 03:03:33,166 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-03-25 03:03:33,167 INFO [org.geoserver] - Loaded style 'population'
2020-03-25 03:03:33,168 INFO [org.geoserver] - Loaded style 'line'
2020-03-25 03:03:33,169 INFO [org.geoserver] - Loaded style 'polygon'
2020-03-25 03:03:33,170 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-03-25 03:03:33,171 INFO [org.geoserver] - Loaded style 'dem'
2020-03-25 03:03:33,172 INFO [org.geoserver] - Loaded style 'restricted'
2020-03-25 03:03:33,173 INFO [org.geoserver] - Loaded style 'pophatch'
2020-03-25 03:03:33,174 INFO [org.geoserver] - Loaded style 'poi'
2020-03-25 03:03:33,175 INFO [org.geoserver] - Loaded style 'grass'
2020-03-25 03:03:33,176 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-03-25 03:03:33,178 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-03-25 03:03:33,179 INFO [org.geoserver] - Loaded style 'capitals'
2020-03-25 03:03:33,180 INFO [org.geoserver] - Loaded style 'raster'
2020-03-25 03:03:33,181 INFO [org.geoserver] - Loaded style 'rain'
2020-03-25 03:03:33,183 INFO [org.geoserver] - Loaded style 'burg'
2020-03-25 03:03:33,184 INFO [org.geoserver] - Loaded style 'point'
2020-03-25 03:03:33,185 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-03-25 03:03:33,187 INFO [org.geoserver] - Loaded style 'generic'
2020-03-25 03:03:33,188 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-03-25 03:03:33,189 INFO [org.geoserver] - Loaded style 'green'
2020-03-25 03:03:33,191 INFO [org.geoserver] - Loaded default workspace cite
2020-03-25 03:03:33,215 INFO [org.geoserver] - Loaded workspace 'sde'
2020-03-25 03:03:33,225 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-03-25 03:03:33,231 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-03-25 03:03:33,234 INFO [org.geoserver] - Loaded workspace 'cite'
2020-03-25 03:03:33,237 INFO [org.geoserver] - Loaded workspace 'sf'
2020-03-25 03:03:33,240 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-03-25 03:03:33,243 INFO [org.geoserver] - Loaded workspace 'gisarch'
2020-03-25 03:03:33,247 INFO [org.geoserver] - Loaded workspace 'topp'
2020-03-25 03:03:34,460 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-03-25 03:03:37,335 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-03-25 03:03:37,371 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-03-25 03:03:37,391 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-03-25 03:03:37,394 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-03-25 03:03:37,403 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-03-25 03:03:37,409 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-03-25 03:03:37,417 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-03-25 03:03:37,424 INFO [org.geoserver] - Loaded layer 'poi'
2020-03-25 03:03:37,447 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-03-25 03:03:38,450 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-03-25 03:03:38,453 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-03-25 03:03:38,473 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-03-25 03:03:38,507 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-03-25 03:03:38,515 INFO [org.geoserver] - Loaded layer 'roads'
2020-03-25 03:03:38,537 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-03-25 03:03:38,547 INFO [org.geoserver] - Loaded layer 'archsites'
2020-03-25 03:03:38,568 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-03-25 03:03:38,575 INFO [org.geoserver] - Loaded layer 'streams'
2020-03-25 03:03:38,591 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-03-25 03:03:38,599 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-03-25 03:03:38,622 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-03-25 03:03:38,628 INFO [org.geoserver] - Loaded layer 'restricted'
2020-03-25 03:03:38,642 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-03-25 03:03:38,684 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-03-25 03:03:38,694 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-03-25 03:03:38,700 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-03-25 03:03:38,734 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-03-25 03:03:38,736 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-03-25 03:03:38,741 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-03-25 03:03:38,769 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-03-25 03:03:38,778 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-03-25 03:03:38,784 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-03-25 03:03:38,796 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-03-25 03:03:38,798 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-03-25 03:03:39,256 INFO [org.geoserver] - Loaded data store 'gisarchdb', enabled
2020-03-25 03:03:39,273 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-03-25 03:03:39,284 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-03-25 03:03:39,287 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-03-25 03:03:39,301 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-03-25 03:03:39,310 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-03-25 03:03:39,322 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-03-25 03:03:39,325 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-03-25 03:03:39,333 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-03-25 03:03:39,338 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-03-25 03:03:39,352 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-03-25 03:03:39,372 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-03-25 03:03:39,377 INFO [org.geoserver] - Loaded layer 'states'
2020-03-25 03:03:39,418 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-03-25 03:03:39,425 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-03-25 03:03:39,429 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-03-25 03:03:39,435 INFO [org.geoserver] - Read catalog in 6.332 s
2020-03-25 03:03:39,695 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-5c52d932:1710fa53dad:-8000', enabled
2020-03-25 03:03:39,729 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-03-25 03:03:39,767 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-03-25 03:03:39,817 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-03-25 03:03:39,891 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 03:03:40,054 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 03:03:40,055 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 03:03:40,055 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 03:03:40,256 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-25 03:03:40,258 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-03-25 03:03:40,260 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-03-25 03:03:40,262 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-25 03:03:40,338 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-03-25 03:03:40,342 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-03-25 03:03:40,418 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-03-25 03:03:40,421 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-03-25 03:03:40,423 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-03-25 03:03:40,513 INFO [gwc.layer] - Loaded 22 tile layers in 89.12 ms
2020-03-25 03:03:40,542 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-03-25 03:03:40,570 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-25 03:03:40,573 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-03-25 03:03:40,575 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-25 03:03:40,690 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-03-25 03:03:40,853 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 03:03:40,881 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 03:03:40,891 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-25 03:03:40,912 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-25 03:03:40,916 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-03-25 03:03:40,918 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-03-25 03:03:40,979 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-03-25 03:03:41,070 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-03-25 03:03:41,629 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-03-25 03:03:41,690 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-03-25 03:03:41,720 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-03-25 03:03:42,035 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-03-25 03:03:42,039 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-03-25 03:03:43,741 INFO [cluster.impl] - Using brokerURI: vm://0e9b6a78c35d-8b924a28ac80?create=false&waitForStart=5000
2020-03-25 03:03:48,271 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-03-25 03:03:58,889 INFO [cluster.impl] - Starting the embedded brokerURI
2020-03-25 03:04:00,234 ERROR [multicast.MulticastDiscoveryAgent] - Failed to advertise our service: default.ActiveMQ-4.alive.%localhost%tcp://0e9b6a78c35d:34053
java.io.IOException: Operation not permitted
	at java.base/java.net.PlainDatagramSocketImpl.send0(Native Method)
	at java.base/java.net.AbstractPlainDatagramSocketImpl.send(AbstractPlainDatagramSocketImpl.java:136)
	at java.base/java.net.DatagramSocket.send(DatagramSocket.java:791)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.doAdvertizeSelf(MulticastDiscoveryAgent.java:446)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.doTimeKeepingServices(MulticastDiscoveryAgent.java:430)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.run(MulticastDiscoveryAgent.java:392)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-03-25 03:04:00,240 ERROR [multicast.MulticastDiscoveryAgent] - The 'Operation not permitted' error has been know to be caused by improper firewall/network setup.  Please make sure that the OS is properly configured to allow multicast traffic over: 0.0.0.0/0.0.0.0
2020-03-25 03:04:00,258 INFO [cluster.impl] - Embedded brokerURI is now started
2020-03-25 03:04:00,259 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[0e9b6a78c35d-8b924a28ac80]
2020-03-25 03:04:00,260 INFO [cluster.client] - Connecting...
2020-03-25 03:04:00,260 INFO [cluster.impl] - Using brokerURI: vm://0e9b6a78c35d-8b924a28ac80?create=false&waitForStart=5000
2020-03-25 03:04:00,332 INFO [cluster.client] - Registration...
2020-03-25 03:04:00,341 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-03-25 03:04:00,341 INFO [cluster.client] - Waiting for registration...(1/3)
2020-03-25 03:04:00,842 WARN [TransportConnection.Transport] - Transport Connection to: tcp://192.168.96.3:48914 failed: java.io.EOFException
2020-03-25 03:04:10,342 INFO [cluster.client] - Registration...
2020-03-25 03:04:10,342 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-03-25 03:04:10,840 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-03-25 03:04:10,846 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-03-25 03:04:11,022 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-03-25 03:04:11,024 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-03-25 03:04:11,034 INFO [geoserver.importer] - Enabling import store: memory
2020-03-25 03:04:11,034 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-25 03:04:11,034 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-25 03:08:28,273 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.0e9b6a78c35d-8b924a28ac80.VirtualTopic.geoserver' - trying to recover. Cause: The Session is closed
2020-03-25 03:08:33,291 ERROR [client.JMSContainer] - Could not refresh JMS Connection for destination 'queue://Consumer.0e9b6a78c35d-8b924a28ac80.VirtualTopic.geoserver' - retrying using FixedBackOff{interval=5000, currentAttempts=0, maxAttempts=unlimited}. Cause: Error while attempting to retrieve a connection from the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named '0e9b6a78c35d-8b924a28ac80' does not exist.
2020-03-25 03:09:47,829 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-03-25 03:09:48,011 INFO [org.geoserver] - Loading catalog...
2020-03-25 03:09:48,134 INFO [org.geoserver] - Loaded style 'population'
2020-03-25 03:09:48,135 INFO [org.geoserver] - Loaded style 'green'
2020-03-25 03:09:48,136 INFO [org.geoserver] - Loaded style 'line'
2020-03-25 03:09:48,137 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-03-25 03:09:48,138 INFO [org.geoserver] - Loaded style 'polygon'
2020-03-25 03:09:48,139 INFO [org.geoserver] - Loaded style 'dem'
2020-03-25 03:09:48,139 INFO [org.geoserver] - Loaded style 'restricted'
2020-03-25 03:09:48,140 INFO [org.geoserver] - Loaded style 'poi'
2020-03-25 03:09:48,141 INFO [org.geoserver] - Loaded style 'pophatch'
2020-03-25 03:09:48,143 INFO [org.geoserver] - Loaded style 'grass'
2020-03-25 03:09:48,145 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-03-25 03:09:48,146 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-03-25 03:09:48,148 INFO [org.geoserver] - Loaded style 'capitals'
2020-03-25 03:09:48,148 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-03-25 03:09:48,149 INFO [org.geoserver] - Loaded style 'raster'
2020-03-25 03:09:48,153 INFO [org.geoserver] - Loaded style 'rain'
2020-03-25 03:09:48,154 INFO [org.geoserver] - Loaded style 'burg'
2020-03-25 03:09:48,155 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-03-25 03:09:48,156 INFO [org.geoserver] - Loaded style 'point'
2020-03-25 03:09:48,158 INFO [org.geoserver] - Loaded style 'generic'
2020-03-25 03:09:48,158 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-03-25 03:09:48,161 INFO [org.geoserver] - Loaded default workspace cite
2020-03-25 03:09:48,204 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-03-25 03:09:48,210 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-03-25 03:09:48,215 INFO [org.geoserver] - Loaded workspace 'cite'
2020-03-25 03:09:48,220 INFO [org.geoserver] - Loaded workspace 'sde'
2020-03-25 03:09:48,224 INFO [org.geoserver] - Loaded workspace 'gisarch'
2020-03-25 03:09:48,227 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-03-25 03:09:48,230 INFO [org.geoserver] - Loaded workspace 'topp'
2020-03-25 03:09:48,237 INFO [org.geoserver] - Loaded workspace 'sf'
2020-03-25 03:09:49,231 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-03-25 03:09:51,653 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-03-25 03:09:51,706 INFO [org.geoserver] - Loaded layer 'poi'
2020-03-25 03:09:51,729 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-03-25 03:09:51,735 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-03-25 03:09:51,748 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-03-25 03:09:51,763 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-03-25 03:09:51,781 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-03-25 03:09:51,794 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-03-25 03:09:51,821 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-03-25 03:09:52,639 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-03-25 03:09:52,641 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-03-25 03:09:52,647 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-03-25 03:09:52,657 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-03-25 03:09:52,663 INFO [org.geoserver] - Loaded layer 'restricted'
2020-03-25 03:09:52,677 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-03-25 03:09:52,684 INFO [org.geoserver] - Loaded layer 'roads'
2020-03-25 03:09:52,690 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-03-25 03:09:52,692 INFO [org.geoserver] - Loaded layer 'archsites'
2020-03-25 03:09:52,698 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-03-25 03:09:52,701 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-03-25 03:09:52,715 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-03-25 03:09:52,724 INFO [org.geoserver] - Loaded layer 'streams'
2020-03-25 03:09:52,735 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-03-25 03:09:52,764 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-03-25 03:09:52,767 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-03-25 03:09:52,771 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-03-25 03:09:52,786 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-03-25 03:09:52,794 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-03-25 03:09:52,799 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-03-25 03:09:52,808 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-03-25 03:09:52,812 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-03-25 03:09:52,815 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-03-25 03:09:52,821 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-03-25 03:09:52,831 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-03-25 03:09:53,174 INFO [org.geoserver] - Loaded data store 'gisarchdb', enabled
2020-03-25 03:09:53,193 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-03-25 03:09:53,203 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-03-25 03:09:53,207 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-03-25 03:09:53,247 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-03-25 03:09:53,263 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-03-25 03:09:53,271 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-03-25 03:09:53,280 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-03-25 03:09:53,289 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-03-25 03:09:53,291 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-03-25 03:09:53,312 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-03-25 03:09:53,327 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-03-25 03:09:53,330 INFO [org.geoserver] - Loaded layer 'states'
2020-03-25 03:09:53,375 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-03-25 03:09:53,394 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-03-25 03:09:53,396 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-03-25 03:09:53,402 INFO [org.geoserver] - Read catalog in 5.388 s
2020-03-25 03:09:53,616 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-1cc76022:1710faaf24f:-8000', enabled
2020-03-25 03:09:53,627 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-03-25 03:09:53,644 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-03-25 03:09:53,665 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-03-25 03:09:53,707 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 03:09:53,825 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 03:09:53,828 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 03:09:53,831 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 03:09:53,983 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-25 03:09:53,987 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-03-25 03:09:53,989 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-03-25 03:09:53,991 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-25 03:09:54,081 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-03-25 03:09:54,086 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-03-25 03:09:54,578 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-03-25 03:09:54,580 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-03-25 03:09:54,583 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-03-25 03:09:54,670 INFO [gwc.layer] - Loaded 22 tile layers in 86.51 ms
2020-03-25 03:09:54,687 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-03-25 03:09:54,700 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-25 03:09:54,702 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-03-25 03:09:54,703 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-25 03:09:54,808 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-03-25 03:09:55,013 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 03:09:55,030 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 03:09:55,039 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-25 03:09:55,052 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-25 03:09:55,054 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-03-25 03:09:55,055 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-03-25 03:09:55,068 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-03-25 03:09:55,150 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-03-25 03:09:55,695 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-03-25 03:09:55,746 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-03-25 03:09:55,811 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-03-25 03:09:56,040 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-03-25 03:09:56,043 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-03-25 03:09:57,622 INFO [cluster.impl] - Using brokerURI: vm://3fa60cd1c6f2-93743d63195b?create=false&waitForStart=5000
2020-03-25 03:10:02,327 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-03-25 03:10:10,337 INFO [cluster.impl] - Starting the embedded brokerURI
2020-03-25 03:10:11,513 ERROR [multicast.MulticastDiscoveryAgent] - Failed to advertise our service: default.ActiveMQ-4.alive.%localhost%tcp://3fa60cd1c6f2:44677
java.io.IOException: Operation not permitted
	at java.base/java.net.PlainDatagramSocketImpl.send0(Native Method)
	at java.base/java.net.AbstractPlainDatagramSocketImpl.send(AbstractPlainDatagramSocketImpl.java:136)
	at java.base/java.net.DatagramSocket.send(DatagramSocket.java:791)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.doAdvertizeSelf(MulticastDiscoveryAgent.java:446)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.doTimeKeepingServices(MulticastDiscoveryAgent.java:430)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.run(MulticastDiscoveryAgent.java:392)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-03-25 03:10:11,517 ERROR [multicast.MulticastDiscoveryAgent] - The 'Operation not permitted' error has been know to be caused by improper firewall/network setup.  Please make sure that the OS is properly configured to allow multicast traffic over: 0.0.0.0/0.0.0.0
2020-03-25 03:10:11,532 INFO [cluster.impl] - Embedded brokerURI is now started
2020-03-25 03:10:11,534 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[3fa60cd1c6f2-93743d63195b]
2020-03-25 03:10:11,535 INFO [cluster.client] - Connecting...
2020-03-25 03:10:11,536 INFO [cluster.impl] - Using brokerURI: vm://3fa60cd1c6f2-93743d63195b?create=false&waitForStart=5000
2020-03-25 03:10:11,582 INFO [cluster.client] - Registration...
2020-03-25 03:10:11,597 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-03-25 03:10:11,600 INFO [cluster.client] - Waiting for registration...(1/3)
2020-03-25 03:10:12,152 WARN [TransportConnection.Transport] - Transport Connection to: tcp://192.168.128.3:48040 failed: java.io.EOFException
2020-03-25 03:10:21,602 INFO [cluster.client] - Registration...
2020-03-25 03:10:21,603 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-03-25 03:10:22,007 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-03-25 03:10:22,014 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-03-25 03:10:22,210 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-03-25 03:10:22,215 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-03-25 03:10:22,236 INFO [geoserver.importer] - Enabling import store: memory
2020-03-25 03:10:22,236 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-25 03:10:22,236 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-25 03:13:40,650 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.3fa60cd1c6f2-93743d63195b.VirtualTopic.geoserver' - trying to recover. Cause: The Consumer is closed
2020-03-25 03:13:45,663 ERROR [client.JMSContainer] - Could not refresh JMS Connection for destination 'queue://Consumer.3fa60cd1c6f2-93743d63195b.VirtualTopic.geoserver' - retrying using FixedBackOff{interval=5000, currentAttempts=0, maxAttempts=unlimited}. Cause: Error while attempting to retrieve a connection from the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named '3fa60cd1c6f2-93743d63195b' does not exist.
2020-03-25 03:14:39,569 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-03-25 03:14:39,699 INFO [org.geoserver] - Loading catalog...
2020-03-25 03:14:39,809 INFO [org.geoserver] - Loaded style 'population'
2020-03-25 03:14:39,810 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-03-25 03:14:39,811 INFO [org.geoserver] - Loaded style 'green'
2020-03-25 03:14:39,812 INFO [org.geoserver] - Loaded style 'line'
2020-03-25 03:14:39,813 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-03-25 03:14:39,815 INFO [org.geoserver] - Loaded style 'polygon'
2020-03-25 03:14:39,816 INFO [org.geoserver] - Loaded style 'dem'
2020-03-25 03:14:39,817 INFO [org.geoserver] - Loaded style 'restricted'
2020-03-25 03:14:39,818 INFO [org.geoserver] - Loaded style 'poi'
2020-03-25 03:14:39,819 INFO [org.geoserver] - Loaded style 'pophatch'
2020-03-25 03:14:39,820 INFO [org.geoserver] - Loaded style 'grass'
2020-03-25 03:14:39,822 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-03-25 03:14:39,826 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-03-25 03:14:39,827 INFO [org.geoserver] - Loaded style 'capitals'
2020-03-25 03:14:39,828 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-03-25 03:14:39,834 INFO [org.geoserver] - Loaded style 'raster'
2020-03-25 03:14:39,837 INFO [org.geoserver] - Loaded style 'rain'
2020-03-25 03:14:39,840 INFO [org.geoserver] - Loaded style 'burg'
2020-03-25 03:14:39,843 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-03-25 03:14:39,845 INFO [org.geoserver] - Loaded style 'point'
2020-03-25 03:14:39,847 INFO [org.geoserver] - Loaded style 'generic'
2020-03-25 03:14:39,849 INFO [org.geoserver] - Loaded default workspace cite
2020-03-25 03:14:39,873 INFO [org.geoserver] - Loaded workspace 'cite'
2020-03-25 03:14:39,880 INFO [org.geoserver] - Loaded workspace 'sf'
2020-03-25 03:14:39,884 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-03-25 03:14:39,887 INFO [org.geoserver] - Loaded workspace 'gisarch'
2020-03-25 03:14:39,889 INFO [org.geoserver] - Loaded workspace 'topp'
2020-03-25 03:14:39,891 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-03-25 03:14:39,896 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-03-25 03:14:39,899 INFO [org.geoserver] - Loaded workspace 'sde'
2020-03-25 03:14:40,699 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-03-25 03:14:42,601 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-03-25 03:14:42,642 INFO [org.geoserver] - Loaded layer 'poi'
2020-03-25 03:14:42,667 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-03-25 03:14:42,679 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-03-25 03:14:42,698 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-03-25 03:14:42,708 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-03-25 03:14:42,722 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-03-25 03:14:42,732 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-03-25 03:14:42,765 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-03-25 03:14:43,843 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-03-25 03:14:43,847 INFO [org.geoserver] - Loaded layer 'roads'
2020-03-25 03:14:43,861 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-03-25 03:14:43,868 INFO [org.geoserver] - Loaded layer 'restricted'
2020-03-25 03:14:43,881 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-03-25 03:14:43,888 INFO [org.geoserver] - Loaded layer 'archsites'
2020-03-25 03:14:43,906 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-03-25 03:14:43,911 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-03-25 03:14:43,922 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-03-25 03:14:43,926 INFO [org.geoserver] - Loaded layer 'streams'
2020-03-25 03:14:43,935 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-03-25 03:14:43,984 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-03-25 03:14:43,989 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-03-25 03:14:44,012 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-03-25 03:14:44,071 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-03-25 03:14:44,083 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-03-25 03:14:44,096 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-03-25 03:14:44,110 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-03-25 03:14:44,115 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-03-25 03:14:44,131 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-03-25 03:14:44,144 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-03-25 03:14:44,156 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-03-25 03:14:44,162 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-03-25 03:14:44,179 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-03-25 03:14:44,186 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-03-25 03:14:44,691 INFO [org.geoserver] - Loaded data store 'gisarchdb', enabled
2020-03-25 03:14:44,707 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-03-25 03:14:44,724 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-03-25 03:14:44,729 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-03-25 03:14:44,754 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-03-25 03:14:44,773 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-03-25 03:14:44,781 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-03-25 03:14:44,785 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-03-25 03:14:44,789 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-03-25 03:14:44,794 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-03-25 03:14:44,808 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-03-25 03:14:44,820 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-03-25 03:14:44,828 INFO [org.geoserver] - Loaded layer 'states'
2020-03-25 03:14:44,884 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-03-25 03:14:44,907 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-03-25 03:14:44,919 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-03-25 03:14:44,933 INFO [org.geoserver] - Read catalog in 5.231 s
2020-03-25 03:14:45,232 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl--a662fa6:1710faf656e:-8000', enabled
2020-03-25 03:14:45,246 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-03-25 03:14:45,269 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-03-25 03:14:45,295 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-03-25 03:14:45,357 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 03:14:45,597 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 03:14:45,599 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 03:14:45,603 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 03:14:45,779 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-25 03:14:45,780 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-03-25 03:14:45,780 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-03-25 03:14:45,780 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-25 03:14:45,936 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-03-25 03:14:45,943 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-03-25 03:14:46,063 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-03-25 03:14:46,064 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-03-25 03:14:46,064 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-03-25 03:14:46,171 INFO [gwc.layer] - Loaded 22 tile layers in 106.4 ms
2020-03-25 03:14:46,206 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-03-25 03:14:46,220 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-25 03:14:46,221 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-03-25 03:14:46,225 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-25 03:14:46,381 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-03-25 03:14:46,616 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 03:14:46,635 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 03:14:46,644 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-25 03:14:46,656 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-25 03:14:46,658 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-03-25 03:14:46,658 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-03-25 03:14:46,682 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-03-25 03:14:46,729 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-03-25 03:14:47,083 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-03-25 03:14:47,158 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-03-25 03:14:47,334 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-03-25 03:14:47,461 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-03-25 03:14:47,464 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-03-25 03:14:49,078 INFO [cluster.impl] - Using brokerURI: vm://fa6911e155a1-dfd8c941fb14?create=false&waitForStart=5000
2020-03-25 03:14:52,873 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-03-25 03:15:02,662 INFO [cluster.impl] - Starting the embedded brokerURI
2020-03-25 03:15:03,937 ERROR [multicast.MulticastDiscoveryAgent] - Failed to advertise our service: default.ActiveMQ-4.alive.%localhost%tcp://fa6911e155a1:34069
java.io.IOException: Operation not permitted
	at java.base/java.net.PlainDatagramSocketImpl.send0(Native Method)
	at java.base/java.net.AbstractPlainDatagramSocketImpl.send(AbstractPlainDatagramSocketImpl.java:136)
	at java.base/java.net.DatagramSocket.send(DatagramSocket.java:791)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.doAdvertizeSelf(MulticastDiscoveryAgent.java:446)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.start(MulticastDiscoveryAgent.java:338)
	at org.apache.activemq.broker.TransportConnector.start(TransportConnector.java:256)
	at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:2747)
	at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:2640)
	at org.apache.activemq.broker.BrokerService.doStartBroker(BrokerService.java:771)
	at org.apache.activemq.broker.BrokerService.startBroker(BrokerService.java:733)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:636)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.startEmbeddedBroker(JMSActiveMQFactory.java:227)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.init(JMSActiveMQFactory.java:309)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:350)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:34)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-03-25 03:15:03,943 ERROR [multicast.MulticastDiscoveryAgent] - The 'Operation not permitted' error has been know to be caused by improper firewall/network setup.  Please make sure that the OS is properly configured to allow multicast traffic over: 0.0.0.0/0.0.0.0
2020-03-25 03:15:03,963 INFO [cluster.impl] - Embedded brokerURI is now started
2020-03-25 03:15:03,964 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[fa6911e155a1-dfd8c941fb14]
2020-03-25 03:15:03,966 INFO [cluster.client] - Connecting...
2020-03-25 03:15:03,966 INFO [cluster.impl] - Using brokerURI: vm://fa6911e155a1-dfd8c941fb14?create=false&waitForStart=5000
2020-03-25 03:15:04,084 INFO [cluster.client] - Registration...
2020-03-25 03:15:04,111 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-03-25 03:15:04,112 INFO [cluster.client] - Waiting for registration...(1/3)
2020-03-25 03:15:04,507 WARN [TransportConnection.Transport] - Transport Connection to: tcp://192.168.160.3:36960 failed: java.io.EOFException
2020-03-25 03:15:14,113 INFO [cluster.client] - Registration...
2020-03-25 03:15:14,113 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-03-25 03:15:14,515 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-03-25 03:15:14,522 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-03-25 03:15:14,665 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-03-25 03:15:14,666 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-03-25 03:15:14,675 INFO [geoserver.importer] - Enabling import store: memory
2020-03-25 03:15:14,676 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-25 03:15:14,676 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-25 03:23:30,467 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.fa6911e155a1-dfd8c941fb14.VirtualTopic.geoserver' - trying to recover. Cause: The Consumer is closed
2020-03-25 03:23:35,477 ERROR [client.JMSContainer] - Could not refresh JMS Connection for destination 'queue://Consumer.fa6911e155a1-dfd8c941fb14.VirtualTopic.geoserver' - retrying using FixedBackOff{interval=5000, currentAttempts=0, maxAttempts=unlimited}. Cause: Error while attempting to retrieve a connection from the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'fa6911e155a1-dfd8c941fb14' does not exist.
2020-03-25 03:24:22,064 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-03-25 03:24:22,225 INFO [org.geoserver] - Loading catalog...
2020-03-25 03:24:22,356 INFO [org.geoserver] - Loaded style 'population'
2020-03-25 03:24:22,359 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-03-25 03:24:22,361 INFO [org.geoserver] - Loaded style 'green'
2020-03-25 03:24:22,365 INFO [org.geoserver] - Loaded style 'line'
2020-03-25 03:24:22,366 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-03-25 03:24:22,370 INFO [org.geoserver] - Loaded style 'polygon'
2020-03-25 03:24:22,371 INFO [org.geoserver] - Loaded style 'dem'
2020-03-25 03:24:22,377 INFO [org.geoserver] - Loaded style 'restricted'
2020-03-25 03:24:22,379 INFO [org.geoserver] - Loaded style 'poi'
2020-03-25 03:24:22,380 INFO [org.geoserver] - Loaded style 'pophatch'
2020-03-25 03:24:22,381 INFO [org.geoserver] - Loaded style 'grass'
2020-03-25 03:24:22,384 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-03-25 03:24:22,385 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-03-25 03:24:22,387 INFO [org.geoserver] - Loaded style 'capitals'
2020-03-25 03:24:22,389 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-03-25 03:24:22,393 INFO [org.geoserver] - Loaded style 'raster'
2020-03-25 03:24:22,396 INFO [org.geoserver] - Loaded style 'rain'
2020-03-25 03:24:22,399 INFO [org.geoserver] - Loaded style 'burg'
2020-03-25 03:24:22,400 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-03-25 03:24:22,401 INFO [org.geoserver] - Loaded style 'point'
2020-03-25 03:24:22,403 INFO [org.geoserver] - Loaded style 'generic'
2020-03-25 03:24:22,404 INFO [org.geoserver] - Loaded default workspace cite
2020-03-25 03:24:22,487 INFO [org.geoserver] - Loaded workspace 'cite'
2020-03-25 03:24:22,508 INFO [org.geoserver] - Loaded workspace 'sf'
2020-03-25 03:24:22,513 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-03-25 03:24:22,516 INFO [org.geoserver] - Loaded workspace 'gisarch'
2020-03-25 03:24:22,521 INFO [org.geoserver] - Loaded workspace 'topp'
2020-03-25 03:24:22,524 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-03-25 03:24:22,532 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-03-25 03:24:22,539 INFO [org.geoserver] - Loaded workspace 'sde'
2020-03-25 03:24:23,521 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-03-25 03:24:26,080 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-03-25 03:24:26,117 INFO [org.geoserver] - Loaded layer 'poi'
2020-03-25 03:24:26,124 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-03-25 03:24:26,126 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-03-25 03:24:26,132 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-03-25 03:24:26,143 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-03-25 03:24:26,153 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-03-25 03:24:26,176 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-03-25 03:24:26,211 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-03-25 03:24:26,758 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-03-25 03:24:26,764 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-03-25 03:24:26,776 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-03-25 03:24:26,789 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-03-25 03:24:26,791 INFO [org.geoserver] - Loaded layer 'roads'
2020-03-25 03:24:26,818 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-03-25 03:24:26,824 INFO [org.geoserver] - Loaded layer 'restricted'
2020-03-25 03:24:26,834 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-03-25 03:24:26,838 INFO [org.geoserver] - Loaded layer 'archsites'
2020-03-25 03:24:26,847 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-03-25 03:24:26,852 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-03-25 03:24:26,860 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-03-25 03:24:26,865 INFO [org.geoserver] - Loaded layer 'streams'
2020-03-25 03:24:26,875 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-03-25 03:24:26,891 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-03-25 03:24:26,894 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-03-25 03:24:26,899 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-03-25 03:24:26,906 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-03-25 03:24:26,910 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-03-25 03:24:26,917 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-03-25 03:24:26,927 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-03-25 03:24:26,929 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-03-25 03:24:26,931 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-03-25 03:24:26,936 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-03-25 03:24:26,939 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-03-25 03:24:27,295 INFO [org.geoserver] - Loaded data store 'gisarchdb', enabled
2020-03-25 03:24:27,304 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-03-25 03:24:27,316 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-03-25 03:24:27,332 INFO [org.geoserver] - Loaded layer 'states'
2020-03-25 03:24:27,336 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-03-25 03:24:27,371 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-03-25 03:24:27,384 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-03-25 03:24:27,390 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-03-25 03:24:27,391 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-03-25 03:24:27,400 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-03-25 03:24:27,401 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-03-25 03:24:27,404 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-03-25 03:24:27,405 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-03-25 03:24:27,480 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-03-25 03:24:27,485 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-03-25 03:24:27,487 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-03-25 03:24:27,491 INFO [org.geoserver] - Read catalog in 5.264 s
2020-03-25 03:24:27,843 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-2125fe16:1710fb8493d:-8000', enabled
2020-03-25 03:24:27,864 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-03-25 03:24:27,901 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-03-25 03:24:27,943 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-03-25 03:24:28,003 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 03:24:28,185 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 03:24:28,188 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 03:24:28,190 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 03:24:28,369 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-25 03:24:28,369 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-03-25 03:24:28,369 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-03-25 03:24:28,374 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-25 03:24:28,451 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-03-25 03:24:28,456 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-03-25 03:24:28,517 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-03-25 03:24:28,520 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-03-25 03:24:28,522 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-03-25 03:24:28,617 INFO [gwc.layer] - Loaded 22 tile layers in 92.14 ms
2020-03-25 03:24:28,646 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-03-25 03:24:28,659 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-25 03:24:28,660 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-03-25 03:24:28,660 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-25 03:24:28,818 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-03-25 03:24:29,024 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 03:24:29,049 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 03:24:29,058 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-25 03:24:29,074 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-25 03:24:29,080 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-03-25 03:24:29,087 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-03-25 03:24:29,106 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-03-25 03:24:29,272 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-03-25 03:24:29,737 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-03-25 03:24:29,795 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-03-25 03:24:29,801 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-03-25 03:24:30,001 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-03-25 03:24:30,003 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-03-25 03:24:31,791 INFO [cluster.impl] - Using brokerURI: vm://7be79b591aea-648a94f81697?create=false&waitForStart=5000
2020-03-25 03:24:35,074 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-03-25 03:24:42,784 INFO [cluster.impl] - Starting the embedded brokerURI
2020-03-25 03:24:44,087 ERROR [multicast.MulticastDiscoveryAgent] - Failed to advertise our service: default.ActiveMQ-4.alive.%localhost%tcp://7be79b591aea:43487
java.io.IOException: Operation not permitted
	at java.base/java.net.PlainDatagramSocketImpl.send0(Native Method)
	at java.base/java.net.AbstractPlainDatagramSocketImpl.send(AbstractPlainDatagramSocketImpl.java:136)
	at java.base/java.net.DatagramSocket.send(DatagramSocket.java:791)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.doAdvertizeSelf(MulticastDiscoveryAgent.java:446)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.start(MulticastDiscoveryAgent.java:338)
	at org.apache.activemq.broker.TransportConnector.start(TransportConnector.java:256)
	at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:2747)
	at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:2640)
	at org.apache.activemq.broker.BrokerService.doStartBroker(BrokerService.java:771)
	at org.apache.activemq.broker.BrokerService.startBroker(BrokerService.java:733)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:636)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.startEmbeddedBroker(JMSActiveMQFactory.java:227)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.init(JMSActiveMQFactory.java:309)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:350)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:34)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-03-25 03:24:44,092 ERROR [multicast.MulticastDiscoveryAgent] - The 'Operation not permitted' error has been know to be caused by improper firewall/network setup.  Please make sure that the OS is properly configured to allow multicast traffic over: 0.0.0.0/0.0.0.0
2020-03-25 03:24:44,111 INFO [cluster.impl] - Embedded brokerURI is now started
2020-03-25 03:24:44,113 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[7be79b591aea-648a94f81697]
2020-03-25 03:24:44,114 INFO [cluster.client] - Connecting...
2020-03-25 03:24:44,115 INFO [cluster.impl] - Using brokerURI: vm://7be79b591aea-648a94f81697?create=false&waitForStart=5000
2020-03-25 03:24:44,186 INFO [cluster.client] - Registration...
2020-03-25 03:24:44,195 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-03-25 03:24:44,195 INFO [cluster.client] - Waiting for registration...(1/3)
2020-03-25 03:24:44,694 WARN [TransportConnection.Transport] - Transport Connection to: tcp://192.168.192.3:40860 failed: java.io.EOFException
2020-03-25 03:24:54,195 INFO [cluster.client] - Registration...
2020-03-25 03:24:54,196 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-03-25 03:24:54,553 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-03-25 03:24:54,560 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-03-25 03:24:54,702 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-03-25 03:24:54,706 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-03-25 03:24:54,718 INFO [geoserver.importer] - Enabling import store: memory
2020-03-25 03:24:54,718 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-25 03:24:54,718 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-25 03:25:49,008 INFO [geoserver.security] - Strong cryptography is available
2020-03-25 03:34:59,086 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.7be79b591aea-648a94f81697.VirtualTopic.geoserver' - trying to recover. Cause: The Consumer is closed
2020-03-25 03:35:04,097 ERROR [client.JMSContainer] - Could not refresh JMS Connection for destination 'queue://Consumer.7be79b591aea-648a94f81697.VirtualTopic.geoserver' - retrying using FixedBackOff{interval=5000, currentAttempts=0, maxAttempts=unlimited}. Cause: Error while attempting to retrieve a connection from the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named '7be79b591aea-648a94f81697' does not exist.
2020-03-25 17:20:55,194 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-03-25 17:20:55,309 INFO [org.geoserver] - Loading catalog...
2020-03-25 17:20:55,417 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-03-25 17:20:55,419 INFO [org.geoserver] - Loaded style 'population'
2020-03-25 17:20:55,420 INFO [org.geoserver] - Loaded style 'line'
2020-03-25 17:20:55,421 INFO [org.geoserver] - Loaded style 'green'
2020-03-25 17:20:55,430 INFO [org.geoserver] - Loaded style 'polygon'
2020-03-25 17:20:55,433 INFO [org.geoserver] - Loaded style 'restricted'
2020-03-25 17:20:55,434 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-03-25 17:20:55,435 INFO [org.geoserver] - Loaded style 'poi'
2020-03-25 17:20:55,436 INFO [org.geoserver] - Loaded style 'pophatch'
2020-03-25 17:20:55,437 INFO [org.geoserver] - Loaded style 'dem'
2020-03-25 17:20:55,438 INFO [org.geoserver] - Loaded style 'grass'
2020-03-25 17:20:55,439 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-03-25 17:20:55,441 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-03-25 17:20:55,442 INFO [org.geoserver] - Loaded style 'capitals'
2020-03-25 17:20:55,443 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-03-25 17:20:55,445 INFO [org.geoserver] - Loaded style 'raster'
2020-03-25 17:20:55,447 INFO [org.geoserver] - Loaded style 'point'
2020-03-25 17:20:55,447 INFO [org.geoserver] - Loaded style 'rain'
2020-03-25 17:20:55,448 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-03-25 17:20:55,449 INFO [org.geoserver] - Loaded style 'burg'
2020-03-25 17:20:55,451 INFO [org.geoserver] - Loaded style 'generic'
2020-03-25 17:20:55,453 INFO [org.geoserver] - Loaded default workspace cite
2020-03-25 17:20:55,482 INFO [org.geoserver] - Loaded workspace 'sde'
2020-03-25 17:20:55,487 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-03-25 17:20:55,495 INFO [org.geoserver] - Loaded workspace 'cite'
2020-03-25 17:20:55,499 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-03-25 17:20:55,502 INFO [org.geoserver] - Loaded workspace 'topp'
2020-03-25 17:20:55,506 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-03-25 17:20:55,512 INFO [org.geoserver] - Loaded workspace 'sf'
2020-03-25 17:20:55,517 INFO [org.geoserver] - Loaded workspace 'gisarch'
2020-03-25 17:20:56,823 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-03-25 17:20:58,796 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-03-25 17:20:58,816 INFO [org.geoserver] - Loaded layer 'poi'
2020-03-25 17:20:58,823 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-03-25 17:20:58,826 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-03-25 17:20:58,830 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-03-25 17:20:58,833 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-03-25 17:20:58,838 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-03-25 17:20:58,842 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-03-25 17:20:58,865 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-03-25 17:20:59,488 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-03-25 17:20:59,492 INFO [org.geoserver] - Loaded layer 'roads'
2020-03-25 17:20:59,501 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-03-25 17:20:59,508 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-03-25 17:20:59,526 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-03-25 17:20:59,532 INFO [org.geoserver] - Loaded layer 'restricted'
2020-03-25 17:20:59,545 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-03-25 17:20:59,551 INFO [org.geoserver] - Loaded layer 'streams'
2020-03-25 17:20:59,564 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-03-25 17:20:59,568 INFO [org.geoserver] - Loaded layer 'archsites'
2020-03-25 17:20:59,578 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-03-25 17:20:59,629 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-03-25 17:20:59,631 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-03-25 17:20:59,638 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-03-25 17:20:59,648 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-03-25 17:20:59,651 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-03-25 17:20:59,655 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-03-25 17:20:59,669 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-03-25 17:20:59,672 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-03-25 17:20:59,677 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-03-25 17:20:59,693 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-03-25 17:20:59,696 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-03-25 17:20:59,699 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-03-25 17:20:59,705 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-03-25 17:20:59,707 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-03-25 17:21:00,298 INFO [org.geoserver] - Loaded data store 'gisarchdb', enabled
2020-03-25 17:21:00,321 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-03-25 17:21:00,332 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-03-25 17:21:00,335 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-03-25 17:21:00,347 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-03-25 17:21:00,352 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-03-25 17:21:00,357 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-03-25 17:21:00,359 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-03-25 17:21:00,362 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-03-25 17:21:00,364 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-03-25 17:21:00,369 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-03-25 17:21:00,380 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-03-25 17:21:00,384 INFO [org.geoserver] - Loaded layer 'states'
2020-03-25 17:21:00,416 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-03-25 17:21:00,427 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-03-25 17:21:00,431 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-03-25 17:21:00,448 INFO [org.geoserver] - Read catalog in 5.133 s
2020-03-25 17:21:00,635 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl--2e782093:17112b62ada:-8000', enabled
2020-03-25 17:21:00,648 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-03-25 17:21:00,673 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-03-25 17:21:00,698 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-03-25 17:21:00,771 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 17:21:00,922 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 17:21:00,923 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 17:21:00,923 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-03-25 17:21:01,030 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-25 17:21:01,032 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-03-25 17:21:01,033 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-03-25 17:21:01,036 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-25 17:21:01,151 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-03-25 17:21:01,154 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-03-25 17:21:01,235 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-03-25 17:21:01,236 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-03-25 17:21:01,237 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-03-25 17:21:01,313 INFO [gwc.layer] - Loaded 22 tile layers in 74.86 ms
2020-03-25 17:21:01,331 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-03-25 17:21:01,345 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-25 17:21:01,345 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-03-25 17:21:01,345 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-03-25 17:21:01,461 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-03-25 17:21:01,719 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 17:21:01,762 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-03-25 17:21:01,773 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-25 17:21:01,796 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-25 17:21:01,799 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-03-25 17:21:01,799 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-03-25 17:21:01,825 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-03-25 17:21:01,880 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-03-25 17:21:02,325 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-03-25 17:21:02,378 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-03-25 17:21:02,399 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-03-25 17:21:02,686 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-03-25 17:21:02,688 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-03-25 17:21:03,970 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:21:06,856 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-03-25 17:21:13,575 INFO [cluster.impl] - Starting the embedded brokerURI
2020-03-25 17:21:15,545 INFO [cluster.impl] - Embedded brokerURI is now started
2020-03-25 17:21:15,546 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[5c37b84e70bc-35f76d54b59d]
2020-03-25 17:21:15,552 INFO [cluster.client] - Connecting...
2020-03-25 17:21:15,560 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:21:15,755 INFO [cluster.client] - Registration...
2020-03-25 17:21:15,800 WARN [TransportConnection.Transport] - Transport Connection to: tcp://192.168.224.3:41206 failed: java.io.EOFException
2020-03-25 17:21:15,812 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-03-25 17:21:15,813 INFO [cluster.client] - Waiting for registration...(1/3)
2020-03-25 17:21:25,813 INFO [cluster.client] - Registration...
2020-03-25 17:21:25,921 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-03-25 17:21:27,498 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-03-25 17:21:27,518 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-03-25 17:21:27,879 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-03-25 17:21:27,882 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-03-25 17:21:27,926 INFO [geoserver.importer] - Enabling import store: memory
2020-03-25 17:21:27,926 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-25 17:21:27,926 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-03-25 17:22:22,328 INFO [geoserver.security] - Strong cryptography is available
2020-03-25 17:22:35,606 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:22:35,621 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandlerSPI
2020-03-25 17:22:35,754 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:22:35,758 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-03-25 17:22:35,799 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:22:35,800 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-03-25 17:22:35,816 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:22:35,817 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogRemoveEventHandlerSPI
2020-03-25 17:22:47,374 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:22:47,375 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-03-25 17:22:47,398 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:22:47,398 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-03-25 17:22:47,407 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:22:47,407 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogRemoveEventHandlerSPI
2020-03-25 17:22:47,411 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:22:47,411 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogRemoveEventHandlerSPI
2020-03-25 17:22:47,415 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:22:47,415 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-03-25 17:22:47,421 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:22:47,421 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogRemoveEventHandlerSPI
2020-03-25 17:23:32,618 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:23:32,624 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-03-25 17:23:32,640 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:23:32,641 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogAddEventHandlerSPI
2020-03-25 17:23:32,660 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:23:32,660 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-03-25 17:23:32,669 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:23:32,671 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogAddEventHandlerSPI
2020-03-25 17:24:22,293 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:24:22,293 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandlerSPI
2020-03-25 17:24:22,309 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:24:22,311 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-03-25 17:24:22,500 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:24:22,500 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-03-25 17:24:22,507 INFO [cluster.impl] - Using brokerURI: vm://5c37b84e70bc-35f76d54b59d?create=false&waitForStart=5000
2020-03-25 17:24:22,507 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogAddEventHandlerSPI
2020-03-25 17:24:56,958 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.5c37b84e70bc-35f76d54b59d.VirtualTopic.geoserver' - trying to recover. Cause: The Consumer is closed
2020-03-25 17:24:56,971 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-03-25 17:24:56,972 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-03-25 17:24:56,973 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-03-25 17:24:56,975 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-03-25 17:24:56,976 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-03-25 17:24:56,981 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-03-25 17:24:56,981 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-03-25 17:24:56,983 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-03-25 17:24:56,984 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-03-25 17:24:56,984 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-03-25 17:24:56,984 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-04-12 03:37:37,191 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-12 03:37:37,222 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-12 03:37:37,491 INFO [org.geoserver] - Loading catalog...
2020-04-12 03:37:37,590 INFO [org.geoserver] - Loading catalog...
2020-04-12 03:37:37,756 INFO [org.geoserver] - Loaded style 'population'
2020-04-12 03:37:37,757 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-04-12 03:37:37,764 INFO [org.geoserver] - Loaded style 'green'
2020-04-12 03:37:37,773 INFO [org.geoserver] - Loaded style 'line'
2020-04-12 03:37:37,778 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-04-12 03:37:37,783 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-12 03:37:37,790 INFO [org.geoserver] - Loaded style 'dem'
2020-04-12 03:37:37,798 INFO [org.geoserver] - Loaded style 'restricted'
2020-04-12 03:37:37,799 INFO [org.geoserver] - Loaded style 'poi'
2020-04-12 03:37:37,800 INFO [org.geoserver] - Loaded style 'pophatch'
2020-04-12 03:37:37,801 INFO [org.geoserver] - Loaded style 'grass'
2020-04-12 03:37:37,807 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-04-12 03:37:37,809 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-04-12 03:37:37,810 INFO [org.geoserver] - Loaded style 'capitals'
2020-04-12 03:37:37,811 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-04-12 03:37:37,827 INFO [org.geoserver] - Loaded style 'raster'
2020-04-12 03:37:37,834 INFO [org.geoserver] - Loaded style 'rain'
2020-04-12 03:37:37,841 INFO [org.geoserver] - Loaded style 'burg'
2020-04-12 03:37:37,842 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-04-12 03:37:37,843 INFO [org.geoserver] - Loaded style 'point'
2020-04-12 03:37:37,846 INFO [org.geoserver] - Loaded style 'generic'
2020-04-12 03:37:37,854 INFO [org.geoserver] - Loaded default workspace cite
2020-04-12 03:37:37,873 INFO [org.geoserver] - Loaded style 'population'
2020-04-12 03:37:37,879 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-04-12 03:37:37,879 INFO [org.geoserver] - Loaded style 'green'
2020-04-12 03:37:37,886 INFO [org.geoserver] - Loaded style 'line'
2020-04-12 03:37:37,887 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-04-12 03:37:37,893 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-12 03:37:37,899 INFO [org.geoserver] - Loaded style 'dem'
2020-04-12 03:37:37,916 INFO [org.geoserver] - Loaded style 'restricted'
2020-04-12 03:37:37,920 INFO [org.geoserver] - Loaded style 'poi'
2020-04-12 03:37:37,923 INFO [org.geoserver] - Loaded style 'pophatch'
2020-04-12 03:37:37,935 INFO [org.geoserver] - Loaded style 'grass'
2020-04-12 03:37:37,938 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-04-12 03:37:37,940 INFO [org.geoserver] - Loaded style 'capitals'
2020-04-12 03:37:37,941 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-04-12 03:37:37,951 INFO [org.geoserver] - Loaded style 'raster'
2020-04-12 03:37:37,969 INFO [org.geoserver] - Loaded style 'rain'
2020-04-12 03:37:37,978 INFO [org.geoserver] - Loaded style 'burg'
2020-04-12 03:37:37,992 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-04-12 03:37:37,993 INFO [org.geoserver] - Loaded style 'point'
2020-04-12 03:37:38,004 INFO [org.geoserver] - Loaded style 'generic'
2020-04-12 03:37:38,010 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-04-12 03:37:38,012 INFO [org.geoserver] - Loaded default workspace cite
2020-04-12 03:37:38,164 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-04-12 03:37:38,177 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-04-12 03:37:38,193 INFO [org.geoserver] - Loaded workspace 'sf'
2020-04-12 03:37:38,222 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-04-12 03:37:38,224 INFO [org.geoserver] - Loaded workspace 'topp'
2020-04-12 03:37:38,233 INFO [org.geoserver] - Loaded workspace 'cite'
2020-04-12 03:37:38,245 INFO [org.geoserver] - Loaded workspace 'csdi'
2020-04-12 03:37:38,249 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-04-12 03:37:38,257 INFO [org.geoserver] - Loaded workspace 'sde'
2020-04-12 03:37:38,258 INFO [org.geoserver] - Loaded workspace 'sde'
2020-04-12 03:37:38,261 INFO [org.geoserver] - Loaded workspace 'sf'
2020-04-12 03:37:38,272 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-04-12 03:37:38,275 INFO [org.geoserver] - Loaded workspace 'topp'
2020-04-12 03:37:38,277 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-04-12 03:37:38,280 INFO [org.geoserver] - Loaded workspace 'cite'
2020-04-12 03:37:38,291 INFO [org.geoserver] - Loaded workspace 'csdi'
2020-04-12 03:37:39,177 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-12 03:37:39,430 INFO [org.geoserver] - Loading catalog...
2020-04-12 03:37:39,711 INFO [org.geoserver] - Loaded style 'population'
2020-04-12 03:37:39,713 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-04-12 03:37:39,724 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-04-12 03:37:39,732 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-12 03:37:39,734 INFO [org.geoserver] - Loaded style 'dem'
2020-04-12 03:37:39,741 INFO [org.geoserver] - Loaded style 'restricted'
2020-04-12 03:37:39,748 INFO [org.geoserver] - Loaded style 'poi'
2020-04-12 03:37:39,756 INFO [org.geoserver] - Loaded style 'pophatch'
2020-04-12 03:37:39,757 INFO [org.geoserver] - Loaded style 'grass'
2020-04-12 03:37:39,759 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-04-12 03:37:39,773 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-04-12 03:37:39,781 INFO [org.geoserver] - Loaded style 'capitals'
2020-04-12 03:37:39,789 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-04-12 03:37:39,795 INFO [org.geoserver] - Loaded style 'raster'
2020-04-12 03:37:39,798 INFO [org.geoserver] - Loaded style 'rain'
2020-04-12 03:37:39,806 INFO [org.geoserver] - Loaded style 'burg'
2020-04-12 03:37:39,813 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-04-12 03:37:39,816 INFO [org.geoserver] - Loaded style 'line'
2020-04-12 03:37:39,817 INFO [org.geoserver] - Loaded style 'generic'
2020-04-12 03:37:39,828 INFO [org.geoserver] - Loaded style 'green'
2020-04-12 03:37:39,835 INFO [org.geoserver] - Loaded style 'point'
2020-04-12 03:37:39,837 INFO [org.geoserver] - Loaded default workspace cite
2020-04-12 03:37:39,921 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-04-12 03:37:39,987 INFO [org.geoserver] - Loaded workspace 'cite'
2020-04-12 03:37:39,995 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-04-12 03:37:40,010 INFO [org.geoserver] - Loaded workspace 'sde'
2020-04-12 03:37:40,013 INFO [org.geoserver] - Loaded workspace 'sf'
2020-04-12 03:37:40,017 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-04-12 03:37:40,020 INFO [org.geoserver] - Loaded workspace 'topp'
2020-04-12 03:37:40,027 INFO [org.geoserver] - Loaded workspace 'csdi'
2020-04-12 03:37:40,752 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-04-12 03:37:40,805 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-04-12 03:37:42,275 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-04-12 03:37:44,577 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-04-12 03:37:44,650 INFO [org.geoserver] - Loaded layer 'poi'
2020-04-12 03:37:44,671 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-04-12 03:37:44,686 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-04-12 03:37:44,700 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-04-12 03:37:44,714 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-04-12 03:37:44,726 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-04-12 03:37:44,745 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-04-12 03:37:44,783 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-04-12 03:37:45,654 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-04-12 03:37:45,721 INFO [org.geoserver] - Loaded layer 'poi'
2020-04-12 03:37:45,741 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-04-12 03:37:45,750 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-04-12 03:37:45,762 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-04-12 03:37:45,775 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-04-12 03:37:45,789 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-04-12 03:37:45,796 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-04-12 03:37:45,931 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-04-12 03:37:46,273 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-04-12 03:37:46,322 INFO [org.geoserver] - Loaded layer 'poi'
2020-04-12 03:37:46,347 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-04-12 03:37:46,356 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-04-12 03:37:46,367 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-04-12 03:37:46,382 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-04-12 03:37:46,392 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-04-12 03:37:46,402 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-04-12 03:37:46,435 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-04-12 03:37:46,577 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-04-12 03:37:46,579 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-04-12 03:37:46,633 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-04-12 03:37:46,703 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-04-12 03:37:46,710 INFO [org.geoserver] - Loaded layer 'roads'
2020-04-12 03:37:46,734 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-04-12 03:37:46,740 INFO [org.geoserver] - Loaded layer 'restricted'
2020-04-12 03:37:46,763 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-04-12 03:37:46,768 INFO [org.geoserver] - Loaded layer 'archsites'
2020-04-12 03:37:46,776 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-04-12 03:37:46,788 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-04-12 03:37:46,811 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-04-12 03:37:46,823 INFO [org.geoserver] - Loaded layer 'streams'
2020-04-12 03:37:46,831 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-04-12 03:37:46,861 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-04-12 03:37:46,881 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-04-12 03:37:46,889 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-04-12 03:37:46,907 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-04-12 03:37:46,913 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-04-12 03:37:46,921 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-04-12 03:37:46,940 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-04-12 03:37:46,942 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-04-12 03:37:46,944 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-04-12 03:37:46,957 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-04-12 03:37:46,959 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-04-12 03:37:46,978 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-04-12 03:37:47,022 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-04-12 03:37:47,023 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-04-12 03:37:47,031 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-04-12 03:37:47,037 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-04-12 03:37:47,041 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-04-12 03:37:47,045 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-04-12 03:37:47,051 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-04-12 03:37:47,055 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-04-12 03:37:47,064 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-04-12 03:37:47,074 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-04-12 03:37:47,079 INFO [org.geoserver] - Loaded layer 'states'
2020-04-12 03:37:47,210 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-04-12 03:37:47,212 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-04-12 03:37:47,217 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-04-12 03:37:47,251 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-04-12 03:37:47,253 INFO [org.geoserver] - Loaded layer 'roads'
2020-04-12 03:37:47,261 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-04-12 03:37:47,265 INFO [org.geoserver] - Loaded layer 'archsites'
2020-04-12 03:37:47,271 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-04-12 03:37:47,274 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-04-12 03:37:47,280 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-04-12 03:37:47,282 INFO [org.geoserver] - Loaded layer 'restricted'
2020-04-12 03:37:47,296 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-04-12 03:37:47,299 INFO [org.geoserver] - Loaded layer 'streams'
2020-04-12 03:37:47,308 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-04-12 03:37:47,328 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-04-12 03:37:47,334 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-04-12 03:37:47,337 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-04-12 03:37:47,348 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-04-12 03:37:47,353 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-04-12 03:37:47,362 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-04-12 03:37:47,368 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-04-12 03:37:47,376 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-04-12 03:37:47,381 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-04-12 03:37:47,395 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-04-12 03:37:47,399 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-04-12 03:37:47,412 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-04-12 03:37:47,424 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-04-12 03:37:47,428 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-04-12 03:37:47,449 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-04-12 03:37:47,468 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-04-12 03:37:47,477 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-04-12 03:37:47,479 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-04-12 03:37:47,481 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-04-12 03:37:47,488 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-04-12 03:37:47,499 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-04-12 03:37:47,507 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-04-12 03:37:47,511 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-04-12 03:37:47,526 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-04-12 03:37:47,544 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-04-12 03:37:47,555 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-04-12 03:37:47,563 INFO [org.geoserver] - Loaded layer 'states'
2020-04-12 03:37:47,564 INFO [org.geoserver] - Loaded layer 'roads'
2020-04-12 03:37:47,604 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-04-12 03:37:47,623 INFO [org.geoserver] - Loaded layer 'restricted'
2020-04-12 03:37:47,653 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-04-12 03:37:47,665 INFO [org.geoserver] - Loaded layer 'archsites'
2020-04-12 03:37:47,693 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-04-12 03:37:47,695 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-04-12 03:37:47,717 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-04-12 03:37:47,720 INFO [org.geoserver] - Loaded layer 'streams'
2020-04-12 03:37:47,745 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-04-12 03:37:47,769 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-04-12 03:37:47,786 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-04-12 03:37:47,789 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-04-12 03:37:47,811 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-04-12 03:37:47,812 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-04-12 03:37:47,824 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-04-12 03:37:47,839 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-04-12 03:37:47,841 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-04-12 03:37:47,867 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-04-12 03:37:47,878 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-04-12 03:37:47,880 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-04-12 03:37:47,891 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-04-12 03:37:47,900 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-04-12 03:37:47,903 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-04-12 03:37:47,917 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-04-12 03:37:47,936 INFO [org.geoserver] - Loaded data store 'csdidb', enabled
2020-04-12 03:37:47,947 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-04-12 03:37:47,967 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-04-12 03:37:47,987 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-04-12 03:37:48,016 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-04-12 03:37:48,028 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-04-12 03:37:48,061 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-04-12 03:37:48,079 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-04-12 03:37:48,080 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-04-12 03:37:48,098 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-04-12 03:37:48,105 INFO [org.geoserver] - Loaded layer 'states'
2020-04-12 03:37:48,111 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-04-12 03:37:48,173 INFO [org.geoserver] - Read catalog in 10.55 s
2020-04-12 03:37:48,382 INFO [org.geoserver] - Loaded data store 'csdidb', enabled
2020-04-12 03:37:48,440 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-04-12 03:37:48,465 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-04-12 03:37:48,474 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-04-12 03:37:48,495 INFO [org.geoserver] - Read catalog in 10.99 s
2020-04-12 03:37:48,615 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl--1f0905d7:1716c76f945:-8000', enabled
2020-04-12 03:37:48,642 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-12 03:37:48,672 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-04-12 03:37:48,680 INFO [org.geoserver] - Loaded data store 'csdidb', enabled
2020-04-12 03:37:48,709 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-04-12 03:37:48,730 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-04-12 03:37:48,742 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-04-12 03:37:48,756 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-12 03:37:48,757 INFO [org.geoserver] - Read catalog in 9.322 s
2020-04-12 03:37:48,867 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-04-12 03:37:48,915 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl--9666c86:1716c76fa65:-8000', enabled
2020-04-12 03:37:48,975 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-12 03:37:49,040 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-04-12 03:37:49,067 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-12 03:37:49,109 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-12 03:37:49,109 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-12 03:37:49,110 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-12 03:37:49,114 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-04-12 03:37:49,166 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl--1941aa50:1716c76fb6d:-8000', enabled
2020-04-12 03:37:49,201 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-12 03:37:49,247 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-12 03:37:49,250 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-12 03:37:49,251 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-12 03:37:49,261 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-04-12 03:37:49,332 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-12 03:37:49,397 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-04-12 03:37:49,489 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-12 03:37:49,490 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-12 03:37:49,490 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-12 03:37:49,497 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-12 03:37:49,683 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-12 03:37:49,689 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-12 03:37:49,692 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-12 03:37:49,694 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-12 03:37:49,702 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-12 03:37:49,702 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-12 03:37:49,723 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-12 03:37:49,723 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-12 03:37:49,723 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-12 03:37:49,805 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-12 03:37:49,807 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-12 03:37:49,808 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-12 03:37:49,935 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-12 03:37:49,943 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-12 03:37:49,959 INFO [gwc.layer] - Loaded 22 tile layers in 148.5 ms
2020-04-12 03:37:49,997 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-04-12 03:37:50,010 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-12 03:37:50,011 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-12 03:37:50,011 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-12 03:37:50,042 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-12 03:37:50,042 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-04-12 03:37:50,042 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-12 03:37:50,088 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-12 03:37:50,089 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-12 03:37:50,090 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-12 03:37:50,090 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-12 03:37:50,094 INFO [gwc.layer] - Loaded 22 tile layers in 81.89 ms
2020-04-12 03:37:50,171 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-04-12 03:37:50,175 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-12 03:37:50,215 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-12 03:37:50,216 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-04-12 03:37:50,216 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-12 03:37:50,263 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-12 03:37:50,283 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-12 03:37:50,366 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-12 03:37:50,417 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-12 03:37:50,420 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-12 03:37:50,421 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-12 03:37:50,565 INFO [gwc.layer] - Loaded 22 tile layers in 144.2 ms
2020-04-12 03:37:50,587 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-04-12 03:37:50,633 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-04-12 03:37:50,644 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-04-12 03:37:50,649 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-12 03:37:50,669 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-12 03:37:50,675 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-04-12 03:37:50,691 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-04-12 03:37:50,703 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-12 03:37:50,708 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-12 03:37:50,710 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-12 03:37:50,717 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-12 03:37:50,719 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-12 03:37:50,719 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-12 03:37:50,737 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-12 03:37:50,737 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-04-12 03:37:50,737 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-12 03:37:50,768 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-04-12 03:37:50,775 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-04-12 03:37:50,913 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-12 03:37:50,959 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-12 03:37:50,964 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-12 03:37:51,294 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-04-12 03:37:51,317 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-04-12 03:37:51,324 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-12 03:37:51,377 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-12 03:37:51,395 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-12 03:37:51,400 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-12 03:37:51,437 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-04-12 03:37:51,542 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-12 03:37:51,622 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-12 03:37:51,716 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-12 03:37:51,698 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-12 03:37:51,859 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-12 03:37:51,798 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-12 03:37:51,951 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-12 03:37:51,978 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-12 03:37:52,074 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-12 03:37:52,191 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-12 03:37:52,225 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-12 03:37:52,226 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-12 03:37:52,309 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-12 03:37:52,330 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-12 03:37:52,407 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-12 03:37:52,413 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-12 03:37:54,558 INFO [cluster.impl] - Using brokerURI: vm://64bd0b4ff7e5-4651f8d2ead0?create=false&waitForStart=5000
2020-04-12 03:37:54,736 INFO [cluster.impl] - Using brokerURI: vm://9704b4214249-3cd236838590?create=false&waitForStart=5000
2020-04-12 03:37:54,843 INFO [cluster.impl] - Using brokerURI: vm://ac81bd6ca0e2-ae44ae8e593d?create=false&waitForStart=5000
2020-04-12 03:38:00,671 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-04-12 03:38:00,744 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-04-12 03:38:00,916 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-04-12 03:38:15,302 INFO [cluster.impl] - Starting the embedded brokerURI
2020-04-12 03:38:15,834 INFO [cluster.impl] - Starting the embedded brokerURI
2020-04-12 03:38:15,855 INFO [cluster.impl] - Starting the embedded brokerURI
2020-04-12 03:38:18,813 INFO [cluster.impl] - Embedded brokerURI is now started
2020-04-12 03:38:18,817 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[64bd0b4ff7e5-4651f8d2ead0]
2020-04-12 03:38:18,831 INFO [cluster.client] - Connecting...
2020-04-12 03:38:18,834 INFO [cluster.impl] - Using brokerURI: vm://64bd0b4ff7e5-4651f8d2ead0?create=false&waitForStart=5000
2020-04-12 03:38:18,873 INFO [cluster.impl] - Embedded brokerURI is now started
2020-04-12 03:38:18,873 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[ac81bd6ca0e2-ae44ae8e593d]
2020-04-12 03:38:18,881 INFO [cluster.client] - Connecting...
2020-04-12 03:38:18,884 INFO [cluster.impl] - Using brokerURI: vm://ac81bd6ca0e2-ae44ae8e593d?create=false&waitForStart=5000
2020-04-12 03:38:18,890 INFO [cluster.impl] - Embedded brokerURI is now started
2020-04-12 03:38:18,891 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[9704b4214249-3cd236838590]
2020-04-12 03:38:18,918 INFO [cluster.client] - Connecting...
2020-04-12 03:38:18,922 INFO [cluster.impl] - Using brokerURI: vm://9704b4214249-3cd236838590?create=false&waitForStart=5000
2020-04-12 03:38:19,110 INFO [cluster.client] - Registration...
2020-04-12 03:38:19,110 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-04-12 03:38:19,110 INFO [cluster.client] - Waiting for registration...(1/3)
2020-04-12 03:38:19,113 INFO [cluster.client] - Registration...
2020-04-12 03:38:19,113 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-04-12 03:38:19,115 INFO [cluster.client] - Waiting for registration...(1/3)
2020-04-12 03:38:19,150 INFO [cluster.client] - Registration...
2020-04-12 03:38:19,151 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-04-12 03:38:19,151 INFO [cluster.client] - Waiting for registration...(1/3)
2020-04-12 03:38:19,200 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.19.0.5:45048 failed: java.io.EOFException
2020-04-12 03:38:19,208 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.19.0.3:49000 failed: java.io.EOFException
2020-04-12 03:38:19,507 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.19.0.4:39850 failed: java.io.EOFException
2020-04-12 03:38:24,299 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.19.0.5:45092 failed: java.io.EOFException
2020-04-12 03:38:24,309 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.19.0.3:49054 failed: java.io.EOFException
2020-04-12 03:38:29,111 INFO [cluster.client] - Registration...
2020-04-12 03:38:29,111 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-04-12 03:38:29,115 INFO [cluster.client] - Registration...
2020-04-12 03:38:29,115 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-04-12 03:38:29,154 INFO [cluster.client] - Registration...
2020-04-12 03:38:29,154 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-04-12 03:38:30,610 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-12 03:38:30,639 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-12 03:38:30,673 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-12 03:38:30,687 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-12 03:38:30,752 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-12 03:38:30,796 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-12 03:38:31,237 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-12 03:38:31,240 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-12 03:38:31,303 INFO [geoserver.importer] - Enabling import store: memory
2020-04-12 03:38:31,311 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-12 03:38:31,312 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-12 03:38:31,326 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-12 03:38:31,328 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-12 03:38:31,365 INFO [geoserver.importer] - Enabling import store: memory
2020-04-12 03:38:31,366 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-12 03:38:31,367 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-12 03:38:31,375 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-12 03:38:31,376 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-12 03:38:31,401 INFO [geoserver.importer] - Enabling import store: memory
2020-04-12 03:38:31,412 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-12 03:38:31,414 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-12 03:38:48,243 INFO [geoserver.security] - Strong cryptography is available
2020-04-12 03:39:34,076 INFO [cluster.impl] - Using brokerURI: vm://ac81bd6ca0e2-ae44ae8e593d?create=false&waitForStart=5000
2020-04-12 03:39:34,084 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandlerSPI
2020-04-12 03:39:34,217 INFO [cluster.impl] - Using brokerURI: vm://ac81bd6ca0e2-ae44ae8e593d?create=false&waitForStart=5000
2020-04-12 03:39:34,221 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-04-12 03:39:34,344 INFO [cluster.impl] - Using brokerURI: vm://ac81bd6ca0e2-ae44ae8e593d?create=false&waitForStart=5000
2020-04-12 03:39:34,358 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandlerSPI
2020-04-12 03:39:34,415 INFO [cluster.impl] - Using brokerURI: vm://ac81bd6ca0e2-ae44ae8e593d?create=false&waitForStart=5000
2020-04-12 03:39:34,415 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-04-12 03:39:34,462 WARN [catalog.impl] - Catalog listener threw exception handling event.
java.lang.reflect.UndeclaredThrowableException
	at com.sun.proxy.$Proxy28.save(Unknown Source)
	at org.geoserver.catalog.impl.CatalogImpl.save(CatalogImpl.java:1378)
	at org.geoserver.security.SecureCatalogImpl.save(SecureCatalogImpl.java:1423)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.save(AbstractFilteredCatalog.java:714)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.save(AbstractCatalogDecorator.java:579)
	at org.geoserver.catalog.NamespaceWorkspaceConsistencyListener.handleModifyEvent(NamespaceWorkspaceConsistencyListener.java:47)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1713)
	at org.geoserver.catalog.impl.CatalogImpl.fireModified(CatalogImpl.java:1682)
	at org.geoserver.catalog.impl.AbstractCatalogFacade.beforeSaved(AbstractCatalogFacade.java:44)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.save(DefaultCatalogFacade.java:643)
	at org.geoserver.catalog.impl.IsolatedCatalogFacade.save(IsolatedCatalogFacade.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.geoserver.catalog.LockingCatalogFacade.invoke(LockingCatalogFacade.java:36)
	at com.sun.proxy.$Proxy28.save(Unknown Source)
	at org.geoserver.catalog.impl.CatalogImpl.save(CatalogImpl.java:1263)
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.modify(JMSCatalogModifyEventHandler.java:174)
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.synchronize(JMSCatalogModifyEventHandler.java:63)
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.synchronize(JMSCatalogModifyEventHandler.java:40)
	at org.geoserver.cluster.client.JMSQueueListener.onMessage(JMSQueueListener.java:155)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:736)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:696)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:674)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:318)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:257)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1190)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1180)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1077)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.geoserver.catalog.LockingCatalogFacade.invoke(LockingCatalogFacade.java:36)
	... 31 more
Caused by: org.geoserver.catalog.CatalogException: java.lang.IllegalStateException: Unable to move workspaces/csdi to workspaces/geotekne
	at org.geoserver.config.GeoServerConfigPersister.renameRes(GeoServerConfigPersister.java:632)
	at org.geoserver.config.GeoServerConfigPersister.renameWorkspace(GeoServerConfigPersister.java:321)
	at org.geoserver.config.GeoServerConfigPersister.handleModifyEvent(GeoServerConfigPersister.java:105)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1713)
	at org.geoserver.catalog.impl.CatalogImpl.fireModified(CatalogImpl.java:1682)
	at org.geoserver.catalog.impl.AbstractCatalogFacade.beforeSaved(AbstractCatalogFacade.java:44)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.save(DefaultCatalogFacade.java:739)
	at org.geoserver.catalog.impl.IsolatedCatalogFacade.save(IsolatedCatalogFacade.java:378)
	... 36 more
Caused by: java.lang.IllegalStateException: Unable to move workspaces/csdi to workspaces/geotekne
	at org.geoserver.platform.resource.FileSystemResourceStore.move(FileSystemResourceStore.java:142)
	at org.geoserver.platform.GeoServerResourceLoader.move(GeoServerResourceLoader.java:144)
	at org.geoserver.config.GeoServerConfigPersister.renameRes(GeoServerConfigPersister.java:630)
	... 43 more
Caused by: java.nio.file.NoSuchFileException: /var/local/geoserver/workspaces/csdi -> /var/local/geoserver/workspaces/geotekne
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixCopyFile.move(UnixCopyFile.java:415)
	at java.base/sun.nio.fs.UnixFileSystemProvider.move(UnixFileSystemProvider.java:267)
	at java.base/java.nio.file.Files.move(Files.java:1426)
	at org.geoserver.platform.resource.FileSystemResourceStore.move(FileSystemResourceStore.java:136)
	... 45 more
2020-04-12 03:39:34,481 INFO [cluster.impl] - Using brokerURI: vm://ac81bd6ca0e2-ae44ae8e593d?create=false&waitForStart=5000
2020-04-12 03:39:34,482 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandlerSPI
2020-04-12 03:39:34,537 INFO [cluster.impl] - Using brokerURI: vm://ac81bd6ca0e2-ae44ae8e593d?create=false&waitForStart=5000
2020-04-12 03:39:34,538 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-04-12 03:39:34,591 INFO [cluster.impl] - Using brokerURI: vm://ac81bd6ca0e2-ae44ae8e593d?create=false&waitForStart=5000
2020-04-12 03:39:34,592 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandlerSPI
2020-04-12 03:39:34,586 WARN [catalog.impl] - Catalog listener threw exception handling event.
java.lang.reflect.UndeclaredThrowableException
	at com.sun.proxy.$Proxy28.save(Unknown Source)
	at org.geoserver.catalog.impl.CatalogImpl.save(CatalogImpl.java:1378)
	at org.geoserver.security.SecureCatalogImpl.save(SecureCatalogImpl.java:1423)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.save(AbstractFilteredCatalog.java:714)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.save(AbstractCatalogDecorator.java:579)
	at org.geoserver.catalog.NamespaceWorkspaceConsistencyListener.handleModifyEvent(NamespaceWorkspaceConsistencyListener.java:47)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1713)
	at org.geoserver.catalog.impl.CatalogImpl.fireModified(CatalogImpl.java:1682)
	at org.geoserver.catalog.impl.AbstractCatalogFacade.beforeSaved(AbstractCatalogFacade.java:44)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.save(DefaultCatalogFacade.java:643)
	at org.geoserver.catalog.impl.IsolatedCatalogFacade.save(IsolatedCatalogFacade.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.geoserver.catalog.LockingCatalogFacade.invoke(LockingCatalogFacade.java:36)
	at com.sun.proxy.$Proxy28.save(Unknown Source)
	at org.geoserver.catalog.impl.CatalogImpl.save(CatalogImpl.java:1263)
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.modify(JMSCatalogModifyEventHandler.java:174)
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.synchronize(JMSCatalogModifyEventHandler.java:63)
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.synchronize(JMSCatalogModifyEventHandler.java:40)
	at org.geoserver.cluster.client.JMSQueueListener.onMessage(JMSQueueListener.java:155)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:736)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:696)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:674)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:318)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:257)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1190)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1180)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1077)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.geoserver.catalog.LockingCatalogFacade.invoke(LockingCatalogFacade.java:36)
	... 31 more
Caused by: org.geoserver.catalog.CatalogException: java.lang.IllegalStateException: Unable to move workspaces/csdi to workspaces/geotekne
	at org.geoserver.config.GeoServerConfigPersister.renameRes(GeoServerConfigPersister.java:632)
	at org.geoserver.config.GeoServerConfigPersister.renameWorkspace(GeoServerConfigPersister.java:321)
	at org.geoserver.config.GeoServerConfigPersister.handleModifyEvent(GeoServerConfigPersister.java:105)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1713)
	at org.geoserver.catalog.impl.CatalogImpl.fireModified(CatalogImpl.java:1682)
	at org.geoserver.catalog.impl.AbstractCatalogFacade.beforeSaved(AbstractCatalogFacade.java:44)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.save(DefaultCatalogFacade.java:739)
	at org.geoserver.catalog.impl.IsolatedCatalogFacade.save(IsolatedCatalogFacade.java:378)
	... 36 more
Caused by: java.lang.IllegalStateException: Unable to move workspaces/csdi to workspaces/geotekne
	at org.geoserver.platform.resource.FileSystemResourceStore.move(FileSystemResourceStore.java:142)
	at org.geoserver.platform.GeoServerResourceLoader.move(GeoServerResourceLoader.java:144)
	at org.geoserver.config.GeoServerConfigPersister.renameRes(GeoServerConfigPersister.java:630)
	... 43 more
Caused by: java.nio.file.NoSuchFileException: /var/local/geoserver/workspaces/csdi -> /var/local/geoserver/workspaces/geotekne
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixCopyFile.move(UnixCopyFile.java:415)
	at java.base/sun.nio.fs.UnixFileSystemProvider.move(UnixFileSystemProvider.java:267)
	at java.base/java.nio.file.Files.move(Files.java:1426)
	at org.geoserver.platform.resource.FileSystemResourceStore.move(FileSystemResourceStore.java:136)
	... 45 more
2020-04-12 03:39:34,633 INFO [cluster.impl] - Using brokerURI: vm://ac81bd6ca0e2-ae44ae8e593d?create=false&waitForStart=5000
2020-04-12 03:39:34,634 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-04-12 03:39:34,849 INFO [cluster.impl] - Using brokerURI: vm://ac81bd6ca0e2-ae44ae8e593d?create=false&waitForStart=5000
2020-04-12 03:39:34,854 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandlerSPI
2020-04-12 03:39:35,089 ERROR [geoserver.cluster] - class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler is unable to synchronize the incoming event: org.geoserver.catalog.event.impl.CatalogModifyEventImpl@397426ee
2020-04-12 03:39:35,095 WARN [client.JMSContainer] - Execution of JMS message listener failed, and no ErrorHandler has been set.
javax.jms.JMSException
	at org.geoserver.cluster.client.JMSQueueListener.onMessage(JMSQueueListener.java:161)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:736)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:696)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:674)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:318)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:257)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1190)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1180)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1077)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.reflect.UndeclaredThrowableException
	at com.sun.proxy.$Proxy28.save(Unknown Source)
	at org.geoserver.catalog.impl.CatalogImpl.save(CatalogImpl.java:1378)
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.modify(JMSCatalogModifyEventHandler.java:310)
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.synchronize(JMSCatalogModifyEventHandler.java:63)
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.synchronize(JMSCatalogModifyEventHandler.java:40)
	at org.geoserver.cluster.client.JMSQueueListener.onMessage(JMSQueueListener.java:155)
	... 9 more
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.geoserver.catalog.LockingCatalogFacade.invoke(LockingCatalogFacade.java:36)
	... 15 more
Caused by: org.geoserver.catalog.CatalogException: java.lang.IllegalStateException: Unable to move workspaces/csdi to workspaces/geotekne
	at org.geoserver.config.GeoServerConfigPersister.renameRes(GeoServerConfigPersister.java:632)
	at org.geoserver.config.GeoServerConfigPersister.renameWorkspace(GeoServerConfigPersister.java:321)
	at org.geoserver.config.GeoServerConfigPersister.handleModifyEvent(GeoServerConfigPersister.java:105)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1713)
	at org.geoserver.catalog.impl.CatalogImpl.fireModified(CatalogImpl.java:1682)
	at org.geoserver.catalog.impl.AbstractCatalogFacade.beforeSaved(AbstractCatalogFacade.java:44)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.save(DefaultCatalogFacade.java:739)
	at org.geoserver.catalog.impl.IsolatedCatalogFacade.save(IsolatedCatalogFacade.java:378)
	... 20 more
Caused by: java.lang.IllegalStateException: Unable to move workspaces/csdi to workspaces/geotekne
	at org.geoserver.platform.resource.FileSystemResourceStore.move(FileSystemResourceStore.java:142)
	at org.geoserver.platform.GeoServerResourceLoader.move(GeoServerResourceLoader.java:144)
	at org.geoserver.config.GeoServerConfigPersister.renameRes(GeoServerConfigPersister.java:630)
	... 27 more
Caused by: java.nio.file.NoSuchFileException: /var/local/geoserver/workspaces/csdi -> /var/local/geoserver/workspaces/geotekne
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixCopyFile.move(UnixCopyFile.java:415)
	at java.base/sun.nio.fs.UnixFileSystemProvider.move(UnixFileSystemProvider.java:267)
	at java.base/java.nio.file.Files.move(Files.java:1426)
	at org.geoserver.platform.resource.FileSystemResourceStore.move(FileSystemResourceStore.java:136)
	... 29 more
2020-04-12 03:39:35,112 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.9704b4214249-3cd236838590.VirtualTopic.geoserver' - trying to recover. Cause: null
2020-04-12 03:39:35,258 ERROR [geoserver.cluster] - class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler is unable to synchronize the incoming event: org.geoserver.catalog.event.impl.CatalogModifyEventImpl@6069575f
2020-04-12 03:39:35,265 WARN [client.JMSContainer] - Execution of JMS message listener failed, and no ErrorHandler has been set.
javax.jms.JMSException
	at org.geoserver.cluster.client.JMSQueueListener.onMessage(JMSQueueListener.java:161)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:736)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:696)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:674)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:318)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:257)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1190)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1180)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1077)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.reflect.UndeclaredThrowableException
	at com.sun.proxy.$Proxy28.save(Unknown Source)
	at org.geoserver.catalog.impl.CatalogImpl.save(CatalogImpl.java:1378)
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.modify(JMSCatalogModifyEventHandler.java:310)
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.synchronize(JMSCatalogModifyEventHandler.java:63)
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.synchronize(JMSCatalogModifyEventHandler.java:40)
	at org.geoserver.cluster.client.JMSQueueListener.onMessage(JMSQueueListener.java:155)
	... 9 more
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.geoserver.catalog.LockingCatalogFacade.invoke(LockingCatalogFacade.java:36)
	... 15 more
Caused by: org.geoserver.catalog.CatalogException: java.lang.IllegalStateException: Unable to move workspaces/csdi to workspaces/geotekne
	at org.geoserver.config.GeoServerConfigPersister.renameRes(GeoServerConfigPersister.java:632)
	at org.geoserver.config.GeoServerConfigPersister.renameWorkspace(GeoServerConfigPersister.java:321)
	at org.geoserver.config.GeoServerConfigPersister.handleModifyEvent(GeoServerConfigPersister.java:105)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1713)
	at org.geoserver.catalog.impl.CatalogImpl.fireModified(CatalogImpl.java:1682)
	at org.geoserver.catalog.impl.AbstractCatalogFacade.beforeSaved(AbstractCatalogFacade.java:44)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.save(DefaultCatalogFacade.java:739)
	at org.geoserver.catalog.impl.IsolatedCatalogFacade.save(IsolatedCatalogFacade.java:378)
	... 20 more
Caused by: java.lang.IllegalStateException: Unable to move workspaces/csdi to workspaces/geotekne
	at org.geoserver.platform.resource.FileSystemResourceStore.move(FileSystemResourceStore.java:142)
	at org.geoserver.platform.GeoServerResourceLoader.move(GeoServerResourceLoader.java:144)
	at org.geoserver.config.GeoServerConfigPersister.renameRes(GeoServerConfigPersister.java:630)
	... 27 more
Caused by: java.nio.file.NoSuchFileException: /var/local/geoserver/workspaces/csdi -> /var/local/geoserver/workspaces/geotekne
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixCopyFile.move(UnixCopyFile.java:415)
	at java.base/sun.nio.fs.UnixFileSystemProvider.move(UnixFileSystemProvider.java:267)
	at java.base/java.nio.file.Files.move(Files.java:1426)
	at org.geoserver.platform.resource.FileSystemResourceStore.move(FileSystemResourceStore.java:136)
	... 29 more
2020-04-12 03:39:35,275 INFO [cluster.impl] - Using brokerURI: vm://ac81bd6ca0e2-ae44ae8e593d?create=false&waitForStart=5000
2020-04-12 03:39:35,276 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-04-12 03:39:35,291 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.64bd0b4ff7e5-4651f8d2ead0.VirtualTopic.geoserver' - trying to recover. Cause: null
2020-04-12 03:39:35,355 ERROR [geoserver.cluster] - class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler is unable to synchronize the incoming event: org.geoserver.catalog.event.impl.CatalogModifyEventImpl@1f478a3c
2020-04-12 03:39:35,362 WARN [client.JMSContainer] - Execution of JMS message listener failed, and no ErrorHandler has been set.
javax.jms.JMSException: Unable to locate WorkspaceInfoImpl[geotekne] named: geotekne locally.
	at org.geoserver.cluster.client.JMSQueueListener.onMessage(JMSQueueListener.java:161)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:736)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:696)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:674)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:318)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:257)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1190)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1180)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1077)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.geoserver.catalog.CatalogException: Unable to locate WorkspaceInfoImpl[geotekne] named: geotekne locally.
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.modify(JMSCatalogModifyEventHandler.java:304)
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.synchronize(JMSCatalogModifyEventHandler.java:63)
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.synchronize(JMSCatalogModifyEventHandler.java:40)
	at org.geoserver.cluster.client.JMSQueueListener.onMessage(JMSQueueListener.java:155)
	... 9 more
2020-04-12 03:39:35,366 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.9704b4214249-3cd236838590.VirtualTopic.geoserver' - trying to recover. Cause: Unable to locate WorkspaceInfoImpl[geotekne] named: geotekne locally.
2020-04-12 03:39:35,511 ERROR [geoserver.cluster] - class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler is unable to synchronize the incoming event: org.geoserver.catalog.event.impl.CatalogModifyEventImpl@7ac93420
2020-04-12 03:39:35,511 WARN [client.JMSContainer] - Execution of JMS message listener failed, and no ErrorHandler has been set.
javax.jms.JMSException: Unable to locate WorkspaceInfoImpl[geotekne] named: geotekne locally.
	at org.geoserver.cluster.client.JMSQueueListener.onMessage(JMSQueueListener.java:161)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:736)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:696)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:674)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:318)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:257)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1190)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1180)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1077)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.geoserver.catalog.CatalogException: Unable to locate WorkspaceInfoImpl[geotekne] named: geotekne locally.
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.modify(JMSCatalogModifyEventHandler.java:304)
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.synchronize(JMSCatalogModifyEventHandler.java:63)
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.synchronize(JMSCatalogModifyEventHandler.java:40)
	at org.geoserver.cluster.client.JMSQueueListener.onMessage(JMSQueueListener.java:155)
	... 9 more
2020-04-12 03:39:35,515 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.64bd0b4ff7e5-4651f8d2ead0.VirtualTopic.geoserver' - trying to recover. Cause: Unable to locate WorkspaceInfoImpl[geotekne] named: geotekne locally.
2020-04-12 03:39:56,289 INFO [cluster.impl] - Using brokerURI: vm://ac81bd6ca0e2-ae44ae8e593d?create=false&waitForStart=5000
2020-04-12 03:39:56,290 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandlerSPI
2020-04-12 03:39:56,322 ERROR [geoserver.cluster] - class org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler is unable to synchronize the incoming event: org.geoserver.catalog.event.impl.CatalogModifyEventImpl@54d14d89
2020-04-12 03:39:56,322 WARN [client.JMSContainer] - Execution of JMS message listener failed, and no ErrorHandler has been set.
javax.jms.JMSException
	at org.geoserver.cluster.client.JMSQueueListener.onMessage(JMSQueueListener.java:161)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:736)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:696)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:674)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:318)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:257)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1190)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1180)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1077)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.reflect.UndeclaredThrowableException
	at com.sun.proxy.$Proxy28.save(Unknown Source)
	at org.geoserver.catalog.impl.CatalogImpl.save(CatalogImpl.java:242)
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.modify(JMSCatalogModifyEventHandler.java:212)
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.synchronize(JMSCatalogModifyEventHandler.java:63)
	at org.geoserver.cluster.impl.handlers.catalog.JMSCatalogModifyEventHandler.synchronize(JMSCatalogModifyEventHandler.java:40)
	at org.geoserver.cluster.client.JMSQueueListener.onMessage(JMSQueueListener.java:155)
	... 9 more
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.geoserver.catalog.LockingCatalogFacade.invoke(LockingCatalogFacade.java:36)
	... 15 more
Caused by: org.geoserver.catalog.CatalogException: java.lang.IllegalStateException: Unable to move workspaces/csdi/csdidb to workspaces/csdi/geotekedb
	at org.geoserver.config.GeoServerConfigPersister.renameRes(GeoServerConfigPersister.java:632)
	at org.geoserver.config.GeoServerConfigPersister.renameStore(GeoServerConfigPersister.java:365)
	at org.geoserver.config.GeoServerConfigPersister.handleModifyEvent(GeoServerConfigPersister.java:107)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1713)
	at org.geoserver.catalog.impl.CatalogImpl.fireModified(CatalogImpl.java:1682)
	at org.geoserver.catalog.impl.AbstractCatalogFacade.beforeSaved(AbstractCatalogFacade.java:44)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.save(DefaultCatalogFacade.java:201)
	at org.geoserver.catalog.impl.IsolatedCatalogFacade.save(IsolatedCatalogFacade.java:58)
	... 20 more
Caused by: java.lang.IllegalStateException: Unable to move workspaces/csdi/csdidb to workspaces/csdi/geotekedb
	at org.geoserver.platform.resource.FileSystemResourceStore.move(FileSystemResourceStore.java:142)
	at org.geoserver.platform.GeoServerResourceLoader.move(GeoServerResourceLoader.java:144)
	at org.geoserver.config.GeoServerConfigPersister.renameRes(GeoServerConfigPersister.java:630)
	... 27 more
Caused by: java.nio.file.NoSuchFileException: /var/local/geoserver/workspaces/csdi/csdidb -> /var/local/geoserver/workspaces/csdi/geotekedb
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixCopyFile.move(UnixCopyFile.java:415)
	at java.base/sun.nio.fs.UnixFileSystemProvider.move(UnixFileSystemProvider.java:267)
	at java.base/java.nio.file.Files.move(Files.java:1426)
	at org.geoserver.platform.resource.FileSystemResourceStore.move(FileSystemResourceStore.java:136)
	... 29 more
2020-04-12 03:39:56,332 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.64bd0b4ff7e5-4651f8d2ead0.VirtualTopic.geoserver' - trying to recover. Cause: null
2020-04-12 03:39:56,619 INFO [cluster.impl] - Using brokerURI: vm://ac81bd6ca0e2-ae44ae8e593d?create=false&waitForStart=5000
2020-04-12 03:39:56,620 INFO [geoserver.cluster] - Creating an instance of: class org.geoserver.cluster.impl.handlers.configuration.JMSGeoServerHandlerSPI
2020-04-12 03:40:22,568 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-12 03:40:22,996 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[143.83482400000003 : 148.47914100000003, -43.648056 : -39.573891]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=143.83482400000003,-43.648056,148.47914100000003,-39.573891, VERSION=1.1.0, SERVICE=WMS, WIDTH=768, HEIGHT=673, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
2020-04-12 03:40:23,332 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-12 03:40:23,906 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[141.943359375 : 150.380859375, -45.3131103515625 : -37.9193115234375]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=141.943359375,-45.3131103515625,150.380859375,-37.9193115234375, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-04-12 03:40:25,152 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-12 03:40:25,226 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[145.4095458984375 : 147.5189208984375, -42.672271728515625 : -40.823822021484375]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=145.4095458984375,-42.672271728515625,147.5189208984375,-40.823822021484375, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-04-12 03:40:26,169 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-12 03:40:26,212 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[146.2767791748047 : 146.8041229248047, -42.01343536376953 : -41.55132293701172]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=146.2767791748047,-42.01343536376953,146.8041229248047,-41.55132293701172, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-04-12 03:40:27,470 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-12 03:40:27,524 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[146.34613037109375 : 147.40081787109375, -42.55622863769531 : -41.63200378417969]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=146.34613037109375,-42.55622863769531,147.40081787109375,-41.63200378417969, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-04-12 03:40:31,496 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-12 03:40:31,570 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[145.56884765625 : 147.67822265625, -43.177642822265625 : -41.329193115234375]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=145.56884765625,-43.177642822265625,147.67822265625,-41.329193115234375, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-04-12 03:40:32,383 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-12 03:40:32,420 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[140.943603515625 : 149.381103515625, -46.8621826171875 : -39.4683837890625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:4326, BBOX=140.943603515625,-46.8621826171875,149.381103515625,-39.4683837890625, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-04-12 03:41:59,013 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.19.0.3:57274 failed: java.io.EOFException
2020-04-12 03:41:59,013 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.19.0.5:54032 failed: java.io.EOFException
2020-04-12 03:41:59,013 WARN [TransportConnection.Transport] - Transport Connection to: vm://64bd0b4ff7e5-4651f8d2ead0#2 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://64bd0b4ff7e5-4651f8d2ead0#2) stopped.
2020-04-12 03:41:59,025 WARN [TransportConnection.Transport] - Transport Connection to: vm://9704b4214249-3cd236838590#2 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://9704b4214249-3cd236838590#2) stopped.
2020-04-12 03:41:59,037 WARN [TransportConnection.Transport] - Transport Connection to: vm://ac81bd6ca0e2-ae44ae8e593d#2 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://ac81bd6ca0e2-ae44ae8e593d#2) stopped.
2020-04-12 03:41:59,042 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.19.0.4:46458 failed: java.io.EOFException
2020-04-12 03:41:59,042 WARN [TransportConnection.Transport] - Transport Connection to: vm://9704b4214249-3cd236838590#4 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://9704b4214249-3cd236838590#4) stopped.
2020-04-12 03:41:59,046 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.19.0.5:52434 failed: java.io.EOFException
2020-04-12 03:41:59,046 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.19.0.3:60904 failed: java.io.EOFException
2020-04-12 03:41:59,046 WARN [TransportConnection.Transport] - Transport Connection to: vm://64bd0b4ff7e5-4651f8d2ead0#6 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://64bd0b4ff7e5-4651f8d2ead0#6) stopped.
2020-04-12 03:41:59,096 WARN [TransportConnection.Transport] - Transport Connection to: vm://ac81bd6ca0e2-ae44ae8e593d#4 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://ac81bd6ca0e2-ae44ae8e593d#4) stopped.
2020-04-12 03:41:59,110 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.9704b4214249-3cd236838590.VirtualTopic.geoserver' - trying to recover. Cause: The Session is closed
2020-04-12 03:41:59,162 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-04-12 03:41:59,165 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-04-12 03:41:59,168 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-04-12 03:41:59,170 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-04-12 03:41:59,170 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-04-12 03:41:59,204 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-04-12 03:41:59,209 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-04-12 03:41:59,212 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-04-12 03:41:59,214 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-04-12 03:41:59,218 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-04-12 03:41:59,218 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-04-12 03:41:59,219 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-04-12 03:41:59,219 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-04-12 03:41:59,219 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-04-12 03:41:59,220 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-04-12 03:41:59,223 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-04-12 03:41:59,223 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-04-12 03:41:59,230 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-04-12 03:41:59,230 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-04-12 03:41:59,231 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-04-12 03:41:59,232 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-04-12 03:41:59,235 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-04-12 03:41:59,236 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-04-12 03:41:59,237 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-04-12 03:41:59,238 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-04-12 03:41:59,239 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-04-12 03:41:59,243 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-04-12 03:41:59,244 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-04-12 03:41:59,245 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-04-12 03:41:59,245 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-04-12 03:41:59,246 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-04-12 03:41:59,253 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-04-12 03:41:59,257 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-04-12 03:44:26,675 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-12 03:44:26,990 INFO [org.geoserver] - Loading catalog...
2020-04-12 03:44:27,062 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-12 03:44:27,152 INFO [org.geoserver] - Loaded style 'population'
2020-04-12 03:44:27,154 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-04-12 03:44:27,156 INFO [org.geoserver] - Loaded style 'green'
2020-04-12 03:44:27,160 INFO [org.geoserver] - Loaded style 'line'
2020-04-12 03:44:27,164 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-04-12 03:44:27,168 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-12 03:44:27,175 INFO [org.geoserver] - Loaded style 'dem'
2020-04-12 03:44:27,176 INFO [org.geoserver] - Loaded style 'restricted'
2020-04-12 03:44:27,177 INFO [org.geoserver] - Loaded style 'poi'
2020-04-12 03:44:27,178 INFO [org.geoserver] - Loaded style 'pophatch'
2020-04-12 03:44:27,181 INFO [org.geoserver] - Loaded style 'grass'
2020-04-12 03:44:27,188 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-04-12 03:44:27,190 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-04-12 03:44:27,192 INFO [org.geoserver] - Loaded style 'capitals'
2020-04-12 03:44:27,194 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-04-12 03:44:27,204 INFO [org.geoserver] - Loaded style 'raster'
2020-04-12 03:44:27,206 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-12 03:44:27,208 INFO [org.geoserver] - Loaded style 'rain'
2020-04-12 03:44:27,210 INFO [org.geoserver] - Loaded style 'burg'
2020-04-12 03:44:27,211 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-04-12 03:44:27,212 INFO [org.geoserver] - Loaded style 'point'
2020-04-12 03:44:27,224 INFO [org.geoserver] - Loaded style 'generic'
2020-04-12 03:44:27,231 INFO [org.geoserver] - Loaded default workspace cite
2020-04-12 03:44:27,298 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-04-12 03:44:27,327 INFO [org.geoserver] - Loaded workspace 'cite'
2020-04-12 03:44:27,307 WARN [org.geoserver] - Ignoring workspace directory workspaces/csdi
2020-04-12 03:44:27,389 INFO [org.geoserver] - Loaded workspace 'sf'
2020-04-12 03:44:27,394 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-04-12 03:44:27,412 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-04-12 03:44:27,418 INFO [org.geoserver] - Loaded workspace 'topp'
2020-04-12 03:44:27,424 INFO [org.geoserver] - Loaded workspace 'geotekne'
2020-04-12 03:44:27,438 INFO [org.geoserver] - Loaded workspace 'sde'
2020-04-12 03:44:27,531 INFO [org.geoserver] - Loading catalog...
2020-04-12 03:44:27,544 INFO [org.geoserver] - Loading catalog...
2020-04-12 03:44:27,848 INFO [org.geoserver] - Loaded style 'population'
2020-04-12 03:44:27,851 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-04-12 03:44:27,860 INFO [org.geoserver] - Loaded style 'green'
2020-04-12 03:44:27,865 INFO [org.geoserver] - Loaded style 'line'
2020-04-12 03:44:27,874 INFO [org.geoserver] - Loaded style 'population'
2020-04-12 03:44:27,876 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-04-12 03:44:27,878 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-04-12 03:44:27,879 INFO [org.geoserver] - Loaded style 'green'
2020-04-12 03:44:27,879 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-12 03:44:27,880 INFO [org.geoserver] - Loaded style 'line'
2020-04-12 03:44:27,881 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-04-12 03:44:27,882 INFO [org.geoserver] - Loaded style 'dem'
2020-04-12 03:44:27,882 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-12 03:44:27,883 INFO [org.geoserver] - Loaded style 'dem'
2020-04-12 03:44:27,886 INFO [org.geoserver] - Loaded style 'restricted'
2020-04-12 03:44:27,894 INFO [org.geoserver] - Loaded style 'poi'
2020-04-12 03:44:27,895 INFO [org.geoserver] - Loaded style 'pophatch'
2020-04-12 03:44:27,899 INFO [org.geoserver] - Loaded style 'grass'
2020-04-12 03:44:27,899 INFO [org.geoserver] - Loaded style 'restricted'
2020-04-12 03:44:27,900 INFO [org.geoserver] - Loaded style 'poi'
2020-04-12 03:44:27,904 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-04-12 03:44:27,908 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-04-12 03:44:27,909 INFO [org.geoserver] - Loaded style 'pophatch'
2020-04-12 03:44:27,912 INFO [org.geoserver] - Loaded style 'grass'
2020-04-12 03:44:27,913 INFO [org.geoserver] - Loaded style 'capitals'
2020-04-12 03:44:27,913 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-04-12 03:44:27,915 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-04-12 03:44:27,916 INFO [org.geoserver] - Loaded style 'capitals'
2020-04-12 03:44:27,917 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-04-12 03:44:27,928 INFO [org.geoserver] - Loaded style 'raster'
2020-04-12 03:44:27,930 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-04-12 03:44:27,933 INFO [org.geoserver] - Loaded style 'raster'
2020-04-12 03:44:27,940 INFO [org.geoserver] - Loaded style 'rain'
2020-04-12 03:44:27,945 INFO [org.geoserver] - Loaded style 'burg'
2020-04-12 03:44:27,946 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-04-12 03:44:27,947 INFO [org.geoserver] - Loaded style 'rain'
2020-04-12 03:44:27,947 INFO [org.geoserver] - Loaded style 'point'
2020-04-12 03:44:27,948 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-04-12 03:44:27,949 INFO [org.geoserver] - Loaded style 'point'
2020-04-12 03:44:27,959 INFO [org.geoserver] - Loaded style 'generic'
2020-04-12 03:44:27,967 INFO [org.geoserver] - Loaded style 'generic'
2020-04-12 03:44:27,968 INFO [org.geoserver] - Loaded style 'burg'
2020-04-12 03:44:27,977 INFO [org.geoserver] - Loaded default workspace cite
2020-04-12 03:44:27,980 INFO [org.geoserver] - Loaded default workspace cite
2020-04-12 03:44:28,018 WARN [org.geoserver] - Ignoring workspace directory workspaces/csdi
2020-04-12 03:44:28,050 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-04-12 03:44:28,063 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-04-12 03:44:28,029 WARN [org.geoserver] - Ignoring workspace directory workspaces/csdi
2020-04-12 03:44:28,084 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-04-12 03:44:28,082 INFO [org.geoserver] - Loaded workspace 'sf'
2020-04-12 03:44:28,098 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-04-12 03:44:28,103 INFO [org.geoserver] - Loaded workspace 'sde'
2020-04-12 03:44:28,106 INFO [org.geoserver] - Loaded workspace 'topp'
2020-04-12 03:44:28,109 INFO [org.geoserver] - Loaded workspace 'geotekne'
2020-04-12 03:44:28,115 INFO [org.geoserver] - Loaded workspace 'cite'
2020-04-12 03:44:28,115 INFO [org.geoserver] - Loaded workspace 'cite'
2020-04-12 03:44:28,122 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-04-12 03:44:28,128 INFO [org.geoserver] - Loaded workspace 'sde'
2020-04-12 03:44:28,132 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-04-12 03:44:28,137 INFO [org.geoserver] - Loaded workspace 'topp'
2020-04-12 03:44:28,157 INFO [org.geoserver] - Loaded workspace 'geotekne'
2020-04-12 03:44:28,172 INFO [org.geoserver] - Loaded workspace 'sf'
2020-04-12 03:44:29,591 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-04-12 03:44:29,920 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-04-12 03:44:30,086 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-04-12 03:44:33,230 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-04-12 03:44:33,323 INFO [org.geoserver] - Loaded layer 'poi'
2020-04-12 03:44:33,345 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-04-12 03:44:33,354 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-04-12 03:44:33,364 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-04-12 03:44:33,372 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-04-12 03:44:33,389 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-04-12 03:44:33,406 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-04-12 03:44:33,426 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-04-12 03:44:33,515 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-04-12 03:44:33,581 INFO [org.geoserver] - Loaded layer 'poi'
2020-04-12 03:44:33,604 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-04-12 03:44:33,617 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-04-12 03:44:33,635 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-04-12 03:44:33,645 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-04-12 03:44:33,660 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-04-12 03:44:33,678 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-04-12 03:44:33,718 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-04-12 03:44:33,953 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-04-12 03:44:33,998 INFO [org.geoserver] - Loaded layer 'poi'
2020-04-12 03:44:34,027 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-04-12 03:44:34,043 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-04-12 03:44:34,064 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-04-12 03:44:34,077 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-04-12 03:44:34,087 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-04-12 03:44:34,112 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-04-12 03:44:34,146 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-04-12 03:44:34,853 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-04-12 03:44:34,853 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-04-12 03:44:34,858 INFO [org.geoserver] - Loaded layer 'roads'
2020-04-12 03:44:34,863 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-04-12 03:44:34,868 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-04-12 03:44:34,895 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-04-12 03:44:34,897 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-04-12 03:44:34,898 INFO [org.geoserver] - Loaded layer 'roads'
2020-04-12 03:44:34,905 INFO [org.geoserver] - Loaded layer 'restricted'
2020-04-12 03:44:34,932 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-04-12 03:44:34,930 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-04-12 03:44:34,940 INFO [org.geoserver] - Loaded layer 'archsites'
2020-04-12 03:44:34,943 INFO [org.geoserver] - Loaded layer 'restricted'
2020-04-12 03:44:34,969 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-04-12 03:44:34,975 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-04-12 03:44:34,980 INFO [org.geoserver] - Loaded layer 'archsites'
2020-04-12 03:44:34,984 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-04-12 03:44:34,997 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-04-12 03:44:34,997 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-04-12 03:44:35,001 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-04-12 03:44:35,010 INFO [org.geoserver] - Loaded layer 'streams'
2020-04-12 03:44:35,016 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-04-12 03:44:35,020 INFO [org.geoserver] - Loaded layer 'streams'
2020-04-12 03:44:35,049 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-04-12 03:44:35,052 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-04-12 03:44:35,095 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-04-12 03:44:35,101 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-04-12 03:44:35,106 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-04-12 03:44:35,125 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-04-12 03:44:35,135 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-04-12 03:44:35,140 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-04-12 03:44:35,153 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-04-12 03:44:35,163 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-04-12 03:44:35,168 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-04-12 03:44:35,177 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-04-12 03:44:35,179 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-04-12 03:44:35,189 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-04-12 03:44:35,216 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-04-12 03:44:35,223 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-04-12 03:44:35,234 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-04-12 03:44:35,246 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-04-12 03:44:35,247 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-04-12 03:44:35,263 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-04-12 03:44:35,266 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-04-12 03:44:35,270 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-04-12 03:44:35,274 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-04-12 03:44:35,289 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-04-12 03:44:35,289 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-04-12 03:44:35,292 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-04-12 03:44:35,301 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-04-12 03:44:35,304 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-04-12 03:44:35,306 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-04-12 03:44:35,316 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-04-12 03:44:35,331 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-04-12 03:44:35,336 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-04-12 03:44:35,337 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-04-12 03:44:35,339 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-04-12 03:44:35,346 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-04-12 03:44:35,350 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-04-12 03:44:35,350 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-04-12 03:44:35,363 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-04-12 03:44:35,366 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-04-12 03:44:35,369 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-04-12 03:44:35,374 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-04-12 03:44:35,386 INFO [org.geoserver] - Loaded layer 'roads'
2020-04-12 03:44:35,391 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-04-12 03:44:35,399 INFO [org.geoserver] - Loaded layer 'states'
2020-04-12 03:44:35,403 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-04-12 03:44:35,416 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-04-12 03:44:35,424 INFO [org.geoserver] - Loaded layer 'restricted'
2020-04-12 03:44:35,450 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-04-12 03:44:35,452 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-04-12 03:44:35,455 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-04-12 03:44:35,455 INFO [org.geoserver] - Loaded layer 'archsites'
2020-04-12 03:44:35,465 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-04-12 03:44:35,478 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-04-12 03:44:35,481 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-04-12 03:44:35,487 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-04-12 03:44:35,490 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-04-12 03:44:35,495 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-04-12 03:44:35,499 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-04-12 03:44:35,503 INFO [org.geoserver] - Loaded layer 'streams'
2020-04-12 03:44:35,512 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-04-12 03:44:35,521 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-04-12 03:44:35,532 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-04-12 03:44:35,557 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-04-12 03:44:35,574 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-04-12 03:44:35,586 INFO [org.geoserver] - Loaded layer 'states'
2020-04-12 03:44:35,604 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-04-12 03:44:35,607 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-04-12 03:44:35,610 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-04-12 03:44:35,628 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-04-12 03:44:35,630 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-04-12 03:44:35,632 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-04-12 03:44:35,644 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-04-12 03:44:35,647 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-04-12 03:44:35,656 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-04-12 03:44:35,670 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-04-12 03:44:35,673 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-04-12 03:44:35,683 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-04-12 03:44:35,695 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-04-12 03:44:35,699 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-04-12 03:44:35,713 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-04-12 03:44:35,725 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-04-12 03:44:35,740 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-04-12 03:44:35,744 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-04-12 03:44:35,751 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-04-12 03:44:35,753 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-04-12 03:44:35,789 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-04-12 03:44:35,796 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-04-12 03:44:35,800 INFO [org.geoserver] - Loaded layer 'states'
2020-04-12 03:44:36,064 INFO [org.geoserver] - Loaded data store 'geotekedb', enabled
2020-04-12 03:44:36,248 INFO [org.geoserver] - Loaded data store 'geotekedb', enabled
2020-04-12 03:44:36,283 WARN [org.geoserver] - Failed to load data store 'geotekedb'
java.lang.IllegalArgumentException: Store 'geotekedb' already exists in workspace 'geotekne'
	at org.geoserver.catalog.impl.CatalogImpl.validate(CatalogImpl.java:202)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:169)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:730)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:579)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:397)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:34)
	at org.geoserver.config.ReadOnlyGeoServerLoader.loadCatalog(ReadOnlyGeoServerLoader.java:47)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:261)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:57)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1737)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-04-12 03:44:36,398 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-04-12 03:44:36,406 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-04-12 03:44:36,418 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-04-12 03:44:36,428 INFO [org.geoserver] - Read catalog in 9.436 s
2020-04-12 03:44:36,550 WARN [org.geoserver] - Failed to load data store 'geotekedb'
java.lang.IllegalArgumentException: Store 'geotekedb' already exists in workspace 'geotekne'
	at org.geoserver.catalog.impl.CatalogImpl.validate(CatalogImpl.java:202)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:169)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:730)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:579)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:397)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:34)
	at org.geoserver.config.ReadOnlyGeoServerLoader.loadCatalog(ReadOnlyGeoServerLoader.java:47)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:261)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:57)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1737)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-04-12 03:44:36,629 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-04-12 03:44:36,637 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-04-12 03:44:36,645 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-04-12 03:44:36,659 INFO [org.geoserver] - Read catalog in 9.113 s
2020-04-12 03:44:36,665 INFO [org.geoserver] - Loaded data store 'geotekedb', enabled
2020-04-12 03:44:36,810 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-3d6a715f:1716c7d33c8:-8000', enabled
2020-04-12 03:44:36,866 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-12 03:44:36,896 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-04-12 03:44:36,932 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-12 03:44:37,028 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-7c2ff5d8:1716c7d34a2:-8000', enabled
2020-04-12 03:44:37,029 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-04-12 03:44:37,056 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-12 03:44:37,089 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-04-12 03:44:37,113 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-12 03:44:37,158 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-04-12 03:44:37,263 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-12 03:44:37,264 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-12 03:44:37,264 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-12 03:44:37,336 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-12 03:44:37,336 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-12 03:44:37,336 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-12 03:44:37,423 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-12 03:44:37,426 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-12 03:44:37,429 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-12 03:44:37,436 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-12 03:44:37,441 WARN [org.geoserver] - Failed to load data store 'geotekedb'
java.lang.IllegalArgumentException: Store 'geotekedb' already exists in workspace 'geotekne'
	at org.geoserver.catalog.impl.CatalogImpl.validate(CatalogImpl.java:202)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:169)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:730)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:579)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:397)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:34)
	at org.geoserver.config.ReadOnlyGeoServerLoader.loadCatalog(ReadOnlyGeoServerLoader.java:47)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:261)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:57)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1737)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-04-12 03:44:37,498 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-04-12 03:44:37,505 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-04-12 03:44:37,509 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-04-12 03:44:37,523 INFO [org.geoserver] - Read catalog in 9.982 s
2020-04-12 03:44:37,530 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-12 03:44:37,533 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-12 03:44:37,536 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-12 03:44:37,538 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-12 03:44:37,539 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-12 03:44:37,541 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-12 03:44:37,638 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-12 03:44:37,639 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-12 03:44:37,639 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-12 03:44:37,663 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-12 03:44:37,667 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-12 03:44:37,731 INFO [gwc.layer] - Loaded 22 tile layers in 91.72 ms
2020-04-12 03:44:37,735 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-12 03:44:37,738 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-12 03:44:37,740 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-12 03:44:37,771 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-04-12 03:44:37,844 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-12 03:44:37,860 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-04-12 03:44:37,863 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-12 03:44:37,878 INFO [gwc.layer] - Loaded 22 tile layers in 135.3 ms
2020-04-12 03:44:37,938 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-04-12 03:44:37,956 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-12 03:44:37,959 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-04-12 03:44:37,961 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-12 03:44:37,978 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-17f1003a:1716c7d384f:-8000', enabled
2020-04-12 03:44:38,018 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-12 03:44:38,020 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-12 03:44:38,050 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-04-12 03:44:38,099 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-12 03:44:38,138 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-12 03:44:38,166 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-04-12 03:44:38,233 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-04-12 03:44:38,289 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-04-12 03:44:38,299 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-12 03:44:38,315 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-04-12 03:44:38,327 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-12 03:44:38,330 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-12 03:44:38,330 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-12 03:44:38,347 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-04-12 03:44:38,347 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-04-12 03:44:38,359 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-12 03:44:38,391 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-12 03:44:38,400 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-12 03:44:38,402 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-12 03:44:38,411 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-12 03:44:38,411 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-12 03:44:38,412 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-12 03:44:38,414 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-12 03:44:38,438 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-04-12 03:44:38,489 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-12 03:44:38,622 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-12 03:44:38,623 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-12 03:44:38,632 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-12 03:44:38,633 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-12 03:44:38,779 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-12 03:44:38,799 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-12 03:44:38,892 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-12 03:44:38,916 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-12 03:44:38,917 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-12 03:44:38,917 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-12 03:44:38,938 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-12 03:44:38,955 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-12 03:44:39,014 INFO [gwc.layer] - Loaded 22 tile layers in 94.96 ms
2020-04-12 03:44:39,032 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-12 03:44:39,036 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-04-12 03:44:39,053 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-12 03:44:39,054 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-04-12 03:44:39,054 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-12 03:44:39,134 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-12 03:44:39,147 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-12 03:44:39,223 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-12 03:44:39,395 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-12 03:44:39,397 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-12 03:44:39,427 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-12 03:44:39,427 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-12 03:44:39,465 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-04-12 03:44:39,491 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-04-12 03:44:39,499 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-12 03:44:39,515 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-12 03:44:39,523 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-12 03:44:39,526 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-12 03:44:39,545 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-04-12 03:44:39,636 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-12 03:44:39,996 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-12 03:44:40,042 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-12 03:44:40,085 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-12 03:44:40,441 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-12 03:44:40,441 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-12 03:44:41,574 INFO [cluster.impl] - Using brokerURI: vm://c5c265a6ca30-c59d847cd205?create=false&waitForStart=5000
2020-04-12 03:44:41,636 INFO [cluster.impl] - Using brokerURI: vm://f98b385883db-c2de8a81f722?create=false&waitForStart=5000
2020-04-12 03:44:42,378 INFO [cluster.impl] - Using brokerURI: vm://aa2d107d257a-c3955cb36027?create=false&waitForStart=5000
2020-04-12 03:44:46,162 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-04-12 03:44:46,816 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-04-12 03:44:47,712 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-04-12 03:45:03,467 INFO [cluster.impl] - Starting the embedded brokerURI
2020-04-12 03:45:03,648 INFO [cluster.impl] - Starting the embedded brokerURI
2020-04-12 03:45:04,042 INFO [cluster.impl] - Starting the embedded brokerURI
2020-04-12 03:45:06,605 INFO [cluster.impl] - Embedded brokerURI is now started
2020-04-12 03:45:06,609 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[f98b385883db-c2de8a81f722]
2020-04-12 03:45:06,614 INFO [cluster.client] - Connecting...
2020-04-12 03:45:06,619 INFO [cluster.impl] - Using brokerURI: vm://f98b385883db-c2de8a81f722?create=false&waitForStart=5000
2020-04-12 03:45:06,638 INFO [cluster.impl] - Embedded brokerURI is now started
2020-04-12 03:45:06,638 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[aa2d107d257a-c3955cb36027]
2020-04-12 03:45:06,639 INFO [cluster.client] - Connecting...
2020-04-12 03:45:06,639 INFO [cluster.impl] - Using brokerURI: vm://aa2d107d257a-c3955cb36027?create=false&waitForStart=5000
2020-04-12 03:45:06,648 INFO [cluster.impl] - Embedded brokerURI is now started
2020-04-12 03:45:06,649 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[c5c265a6ca30-c59d847cd205]
2020-04-12 03:45:06,654 INFO [cluster.client] - Connecting...
2020-04-12 03:45:06,669 INFO [cluster.impl] - Using brokerURI: vm://c5c265a6ca30-c59d847cd205?create=false&waitForStart=5000
2020-04-12 03:45:06,882 INFO [cluster.client] - Registration...
2020-04-12 03:45:06,931 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-04-12 03:45:06,937 INFO [cluster.client] - Waiting for registration...(1/3)
2020-04-12 03:45:06,958 INFO [cluster.client] - Registration...
2020-04-12 03:45:06,959 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-04-12 03:45:06,959 INFO [cluster.client] - Waiting for registration...(1/3)
2020-04-12 03:45:06,960 INFO [cluster.client] - Registration...
2020-04-12 03:45:06,961 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-04-12 03:45:06,961 INFO [cluster.client] - Waiting for registration...(1/3)
2020-04-12 03:45:06,965 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.21.0.3:37824 failed: java.io.EOFException
2020-04-12 03:45:07,007 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.21.0.4:36980 failed: java.io.EOFException
2020-04-12 03:45:07,150 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.21.0.5:57594 failed: java.io.EOFException
2020-04-12 03:45:16,940 INFO [cluster.client] - Registration...
2020-04-12 03:45:16,941 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-04-12 03:45:16,959 INFO [cluster.client] - Registration...
2020-04-12 03:45:16,960 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-04-12 03:45:16,961 INFO [cluster.client] - Registration...
2020-04-12 03:45:16,961 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-04-12 03:45:18,074 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-12 03:45:18,083 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-12 03:45:18,107 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-12 03:45:18,112 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-12 03:45:18,125 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-12 03:45:18,127 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-12 03:45:18,612 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-12 03:45:18,623 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-12 03:45:18,702 INFO [geoserver.importer] - Enabling import store: memory
2020-04-12 03:45:18,722 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-12 03:45:18,722 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-12 03:45:18,751 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-12 03:45:18,752 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-12 03:45:18,786 INFO [geoserver.importer] - Enabling import store: memory
2020-04-12 03:45:18,790 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-12 03:45:18,790 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-12 03:45:18,834 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-12 03:45:18,835 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-12 03:45:18,851 INFO [geoserver.importer] - Enabling import store: memory
2020-04-12 03:45:18,852 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-12 03:45:18,852 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-12 03:46:21,995 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.21.0.4:38786 failed: java.io.EOFException
2020-04-12 03:46:22,000 WARN [TransportConnection.Transport] - Transport Connection to: vm://aa2d107d257a-c3955cb36027#6 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://aa2d107d257a-c3955cb36027#6) stopped.
2020-04-12 03:46:22,003 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.21.0.5:36850 failed: java.io.EOFException
2020-04-12 03:46:22,005 WARN [TransportConnection.Transport] - Transport Connection to: vm://c5c265a6ca30-c59d847cd205#6 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://c5c265a6ca30-c59d847cd205#6) stopped.
2020-04-12 03:46:22,007 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.21.0.4:43212 failed: java.io.EOFException
2020-04-12 03:46:22,015 WARN [TransportConnection.Transport] - Transport Connection to: vm://aa2d107d257a-c3955cb36027#4 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://aa2d107d257a-c3955cb36027#4) stopped.
2020-04-12 03:46:22,021 WARN [TransportConnection.Transport] - Transport Connection to: vm://c5c265a6ca30-c59d847cd205#4 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://c5c265a6ca30-c59d847cd205#4) stopped.
2020-04-12 03:46:22,022 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.21.0.5:39860 failed: java.io.EOFException
2020-04-12 03:46:22,047 WARN [TransportConnection.Transport] - Transport Connection to: vm://f98b385883db-c2de8a81f722#6 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://f98b385883db-c2de8a81f722#6) stopped.
2020-04-12 03:46:22,053 WARN [network.DemandForwardingBridgeSupport] - Network connection between vm://f98b385883db-c2de8a81f722#4 and tcp://c5c265a6ca30/172.21.0.5:40997@46666 shutdown due to a remote error: java.io.EOFException
2020-04-12 03:46:22,058 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.c5c265a6ca30-c59d847cd205.VirtualTopic.geoserver' - trying to recover. Cause: The Consumer is closed
2020-04-12 03:46:22,061 WARN [TransportConnection.Transport] - Transport Connection to: vm://f98b385883db-c2de8a81f722#4 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://f98b385883db-c2de8a81f722#4) stopped.
2020-04-12 03:46:22,147 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-04-12 03:46:22,153 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-04-12 03:46:22,165 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-04-12 03:46:22,170 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-04-12 03:46:22,170 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-04-12 03:46:22,204 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-04-12 03:46:22,212 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-04-12 03:46:22,224 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-04-12 03:46:22,226 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-04-12 03:46:22,226 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-04-12 03:46:22,235 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-04-12 03:46:22,311 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-04-12 03:46:22,312 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-04-12 03:46:22,316 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-04-12 03:46:22,321 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-04-12 03:46:22,327 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-04-12 03:46:22,336 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-04-12 03:46:22,336 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-04-12 03:46:22,341 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-04-12 03:46:22,347 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-04-12 03:46:22,350 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-04-12 03:46:22,354 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-04-12 03:46:27,070 ERROR [client.JMSContainer] - Could not refresh JMS Connection for destination 'queue://Consumer.c5c265a6ca30-c59d847cd205.VirtualTopic.geoserver' - retrying using FixedBackOff{interval=5000, currentAttempts=0, maxAttempts=unlimited}. Cause: Error while attempting to retrieve a connection from the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'c5c265a6ca30-c59d847cd205' does not exist.
2020-04-18 16:23:44,324 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-18 16:23:44,604 INFO [org.geoserver] - Loading catalog...
2020-04-18 16:23:44,814 INFO [org.geoserver] - Loaded style 'population'
2020-04-18 16:23:44,822 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-04-18 16:23:44,827 INFO [org.geoserver] - Loaded style 'green'
2020-04-18 16:23:44,828 INFO [org.geoserver] - Loaded style 'line'
2020-04-18 16:23:44,829 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-04-18 16:23:44,830 INFO [org.geoserver] - Loaded style 'dem'
2020-04-18 16:23:44,831 INFO [org.geoserver] - Loaded style 'poi'
2020-04-18 16:23:44,832 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-18 16:23:44,843 INFO [org.geoserver] - Loaded style 'grass'
2020-04-18 16:23:44,844 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-04-18 16:23:44,845 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-04-18 16:23:44,847 INFO [org.geoserver] - Loaded style 'restricted'
2020-04-18 16:23:44,848 INFO [org.geoserver] - Loaded style 'raster'
2020-04-18 16:23:44,849 INFO [org.geoserver] - Loaded style 'rain'
2020-04-18 16:23:44,854 INFO [org.geoserver] - Loaded style 'burg'
2020-04-18 16:23:44,876 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-04-18 16:23:44,879 INFO [org.geoserver] - Loaded style 'point'
2020-04-18 16:23:44,880 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-04-18 16:23:44,881 INFO [org.geoserver] - Loaded style 'capitals'
2020-04-18 16:23:44,882 INFO [org.geoserver] - Loaded style 'pophatch'
2020-04-18 16:23:44,900 INFO [org.geoserver] - Loaded style 'generic'
2020-04-18 16:23:44,907 INFO [org.geoserver] - Loaded default workspace cite
2020-04-18 16:23:45,104 WARN [org.geoserver] - Ignoring workspace directory workspaces/csdi
2020-04-18 16:23:45,143 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-18 16:23:45,156 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-04-18 16:23:45,173 INFO [org.geoserver] - Loaded workspace 'cite'
2020-04-18 16:23:45,197 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-04-18 16:23:45,228 INFO [org.geoserver] - Loaded workspace 'sde'
2020-04-18 16:23:45,234 INFO [org.geoserver] - Loaded workspace 'sf'
2020-04-18 16:23:45,258 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-04-18 16:23:45,281 INFO [org.geoserver] - Loaded workspace 'topp'
2020-04-18 16:23:45,289 INFO [org.geoserver] - Loaded workspace 'geotekne'
2020-04-18 16:23:45,532 INFO [org.geoserver] - Loading catalog...
2020-04-18 16:23:45,751 INFO [org.geoserver] - Loaded style 'population'
2020-04-18 16:23:45,752 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-04-18 16:23:45,754 INFO [org.geoserver] - Loaded style 'green'
2020-04-18 16:23:45,768 INFO [org.geoserver] - Loaded style 'line'
2020-04-18 16:23:45,773 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-04-18 16:23:45,777 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-18 16:23:45,787 INFO [org.geoserver] - Loaded style 'dem'
2020-04-18 16:23:45,808 INFO [org.geoserver] - Loaded style 'restricted'
2020-04-18 16:23:45,815 INFO [org.geoserver] - Loaded style 'poi'
2020-04-18 16:23:45,819 INFO [org.geoserver] - Loaded style 'pophatch'
2020-04-18 16:23:45,820 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-18 16:23:45,827 INFO [org.geoserver] - Loaded style 'grass'
2020-04-18 16:23:45,837 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-04-18 16:23:45,838 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-04-18 16:23:45,840 INFO [org.geoserver] - Loaded style 'capitals'
2020-04-18 16:23:45,841 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-04-18 16:23:45,848 INFO [org.geoserver] - Loaded style 'raster'
2020-04-18 16:23:45,852 INFO [org.geoserver] - Loaded style 'rain'
2020-04-18 16:23:45,858 INFO [org.geoserver] - Loaded style 'burg'
2020-04-18 16:23:45,860 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-04-18 16:23:45,863 INFO [org.geoserver] - Loaded style 'point'
2020-04-18 16:23:45,866 INFO [org.geoserver] - Loaded style 'generic'
2020-04-18 16:23:45,873 INFO [org.geoserver] - Loaded default workspace cite
2020-04-18 16:23:46,004 WARN [org.geoserver] - Ignoring workspace directory workspaces/csdi
2020-04-18 16:23:46,040 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-04-18 16:23:46,082 INFO [org.geoserver] - Loaded workspace 'sf'
2020-04-18 16:23:46,092 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-04-18 16:23:46,097 INFO [org.geoserver] - Loaded workspace 'topp'
2020-04-18 16:23:46,104 INFO [org.geoserver] - Loaded workspace 'geotekne'
2020-04-18 16:23:46,113 INFO [org.geoserver] - Loaded workspace 'cite'
2020-04-18 16:23:46,124 INFO [org.geoserver] - Loaded workspace 'sde'
2020-04-18 16:23:46,150 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-04-18 16:23:46,192 INFO [org.geoserver] - Loading catalog...
2020-04-18 16:23:46,452 INFO [org.geoserver] - Loaded style 'population'
2020-04-18 16:23:46,454 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-04-18 16:23:46,456 INFO [org.geoserver] - Loaded style 'green'
2020-04-18 16:23:46,459 INFO [org.geoserver] - Loaded style 'line'
2020-04-18 16:23:46,465 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-04-18 16:23:46,469 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-18 16:23:46,476 INFO [org.geoserver] - Loaded style 'dem'
2020-04-18 16:23:46,482 INFO [org.geoserver] - Loaded style 'restricted'
2020-04-18 16:23:46,484 INFO [org.geoserver] - Loaded style 'poi'
2020-04-18 16:23:46,490 INFO [org.geoserver] - Loaded style 'pophatch'
2020-04-18 16:23:46,492 INFO [org.geoserver] - Loaded style 'grass'
2020-04-18 16:23:46,495 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-04-18 16:23:46,498 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-04-18 16:23:46,501 INFO [org.geoserver] - Loaded style 'capitals'
2020-04-18 16:23:46,504 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-04-18 16:23:46,510 INFO [org.geoserver] - Loaded style 'rain'
2020-04-18 16:23:46,515 INFO [org.geoserver] - Loaded style 'burg'
2020-04-18 16:23:46,518 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-04-18 16:23:46,521 INFO [org.geoserver] - Loaded style 'point'
2020-04-18 16:23:46,525 INFO [org.geoserver] - Loaded style 'generic'
2020-04-18 16:23:46,533 INFO [org.geoserver] - Loaded style 'raster'
2020-04-18 16:23:46,565 INFO [org.geoserver] - Loaded default workspace cite
2020-04-18 16:23:46,764 WARN [org.geoserver] - Ignoring workspace directory workspaces/csdi
2020-04-18 16:23:46,802 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-04-18 16:23:46,829 INFO [org.geoserver] - Loaded workspace 'cite'
2020-04-18 16:23:46,856 INFO [org.geoserver] - Loaded workspace 'sde'
2020-04-18 16:23:46,861 INFO [org.geoserver] - Loaded workspace 'topp'
2020-04-18 16:23:46,881 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-04-18 16:23:46,892 INFO [org.geoserver] - Loaded workspace 'geotekne'
2020-04-18 16:23:46,914 INFO [org.geoserver] - Loaded workspace 'sf'
2020-04-18 16:23:46,938 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-04-18 16:23:47,275 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-04-18 16:23:48,487 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-04-18 16:23:49,257 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-04-18 16:23:50,939 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-04-18 16:23:50,991 INFO [org.geoserver] - Loaded layer 'poi'
2020-04-18 16:23:51,032 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-04-18 16:23:51,040 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-04-18 16:23:51,049 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-04-18 16:23:51,059 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-04-18 16:23:51,079 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-04-18 16:23:51,097 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-04-18 16:23:51,138 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-04-18 16:23:52,345 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-04-18 16:23:52,400 INFO [org.geoserver] - Loaded layer 'poi'
2020-04-18 16:23:52,458 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-04-18 16:23:52,479 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-04-18 16:23:52,508 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-04-18 16:23:52,549 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-04-18 16:23:52,555 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-04-18 16:23:52,569 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-04-18 16:23:52,586 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-04-18 16:23:52,893 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-04-18 16:23:52,904 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-04-18 16:23:52,927 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-04-18 16:23:52,957 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-04-18 16:23:52,963 INFO [org.geoserver] - Loaded layer 'roads'
2020-04-18 16:23:52,979 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-04-18 16:23:52,992 INFO [org.geoserver] - Loaded layer 'archsites'
2020-04-18 16:23:53,013 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-04-18 16:23:53,028 INFO [org.geoserver] - Loaded layer 'restricted'
2020-04-18 16:23:53,068 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-04-18 16:23:53,072 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-04-18 16:23:53,100 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-04-18 16:23:53,110 INFO [org.geoserver] - Loaded layer 'streams'
2020-04-18 16:23:53,122 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-04-18 16:23:53,186 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-04-18 16:23:53,191 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-04-18 16:23:53,203 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-04-18 16:23:53,242 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-04-18 16:23:53,247 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-04-18 16:23:53,255 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-04-18 16:23:53,284 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-04-18 16:23:53,294 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-04-18 16:23:53,306 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-04-18 16:23:53,321 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-04-18 16:23:53,343 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-04-18 16:23:53,367 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-04-18 16:23:53,380 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-04-18 16:23:53,388 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-04-18 16:23:53,401 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-04-18 16:23:53,437 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-04-18 16:23:53,440 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-04-18 16:23:53,442 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-04-18 16:23:53,445 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-04-18 16:23:53,447 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-04-18 16:23:53,456 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-04-18 16:23:53,497 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-04-18 16:23:53,507 INFO [org.geoserver] - Loaded layer 'states'
2020-04-18 16:23:53,616 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-04-18 16:23:53,659 INFO [org.geoserver] - Loaded layer 'poi'
2020-04-18 16:23:53,692 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-04-18 16:23:53,698 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-04-18 16:23:53,709 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-04-18 16:23:53,724 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-04-18 16:23:53,740 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-04-18 16:23:53,748 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-04-18 16:23:53,765 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-04-18 16:23:54,023 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-04-18 16:23:54,024 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-04-18 16:23:54,044 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-04-18 16:23:54,104 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-04-18 16:23:54,125 INFO [org.geoserver] - Loaded layer 'roads'
2020-04-18 16:23:54,154 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-04-18 16:23:54,165 INFO [org.geoserver] - Loaded layer 'restricted'
2020-04-18 16:23:54,181 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-04-18 16:23:54,185 INFO [org.geoserver] - Loaded layer 'archsites'
2020-04-18 16:23:54,206 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-04-18 16:23:54,210 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-04-18 16:23:54,222 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-04-18 16:23:54,226 INFO [org.geoserver] - Loaded layer 'streams'
2020-04-18 16:23:54,245 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-04-18 16:23:54,277 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-04-18 16:23:54,281 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-04-18 16:23:54,289 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-04-18 16:23:54,323 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-04-18 16:23:54,331 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-04-18 16:23:54,332 INFO [org.geoserver] - Loaded data store 'geotekedb', enabled
2020-04-18 16:23:54,339 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-04-18 16:23:54,353 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-04-18 16:23:54,360 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-04-18 16:23:54,364 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-04-18 16:23:54,393 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-04-18 16:23:54,402 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-04-18 16:23:54,460 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-04-18 16:23:54,487 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-04-18 16:23:54,495 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-04-18 16:23:54,513 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-04-18 16:23:54,525 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-04-18 16:23:54,533 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-04-18 16:23:54,537 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-04-18 16:23:54,542 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-04-18 16:23:54,546 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-04-18 16:23:54,560 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-04-18 16:23:54,585 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-04-18 16:23:54,592 INFO [org.geoserver] - Loaded layer 'states'
2020-04-18 16:23:54,682 WARN [org.geoserver] - Failed to load data store 'geotekedb'
java.lang.IllegalArgumentException: Store 'geotekedb' already exists in workspace 'geotekne'
	at org.geoserver.catalog.impl.CatalogImpl.validate(CatalogImpl.java:202)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:169)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:730)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:579)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:397)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:34)
	at org.geoserver.config.ReadOnlyGeoServerLoader.loadCatalog(ReadOnlyGeoServerLoader.java:47)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:261)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:57)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1737)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-04-18 16:23:54,799 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-04-18 16:23:54,822 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-04-18 16:23:54,833 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-04-18 16:23:54,855 INFO [org.geoserver] - Read catalog in 10.24 s
2020-04-18 16:23:55,309 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-2c3fbf78:1718e1a86a6:-8000', enabled
2020-04-18 16:23:55,314 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-04-18 16:23:55,317 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-04-18 16:23:55,342 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-18 16:23:55,372 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-04-18 16:23:55,385 INFO [org.geoserver] - Loaded data store 'geotekedb', enabled
2020-04-18 16:23:55,397 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-04-18 16:23:55,433 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-04-18 16:23:55,443 INFO [org.geoserver] - Loaded layer 'roads'
2020-04-18 16:23:55,445 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-18 16:23:55,494 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:23:55,498 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-04-18 16:23:55,518 INFO [org.geoserver] - Loaded layer 'restricted'
2020-04-18 16:23:55,538 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-04-18 16:23:55,546 INFO [org.geoserver] - Loaded layer 'archsites'
2020-04-18 16:23:55,558 WARN [org.geoserver] - Failed to load data store 'geotekedb'
java.lang.IllegalArgumentException: Store 'geotekedb' already exists in workspace 'geotekne'
	at org.geoserver.catalog.impl.CatalogImpl.validate(CatalogImpl.java:202)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:169)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:730)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:579)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:397)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:34)
	at org.geoserver.config.ReadOnlyGeoServerLoader.loadCatalog(ReadOnlyGeoServerLoader.java:47)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:261)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:57)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1737)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-04-18 16:23:55,593 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-04-18 16:23:55,597 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-04-18 16:23:55,618 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-04-18 16:23:55,618 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:23:55,618 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:23:55,619 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:23:55,631 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-04-18 16:23:55,636 INFO [org.geoserver] - Loaded layer 'streams'
2020-04-18 16:23:55,643 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-04-18 16:23:55,645 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-04-18 16:23:55,648 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-04-18 16:23:55,655 INFO [org.geoserver] - Read catalog in 10.12 s
2020-04-18 16:23:55,708 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-04-18 16:23:55,711 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-04-18 16:23:55,718 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-04-18 16:23:55,737 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-04-18 16:23:55,740 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-04-18 16:23:55,749 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-04-18 16:23:55,771 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-04-18 16:23:55,779 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-04-18 16:23:55,788 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-04-18 16:23:55,805 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-04-18 16:23:55,813 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-04-18 16:23:55,852 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-04-18 16:23:55,887 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-04-18 16:23:55,892 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:23:55,896 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-18 16:23:55,898 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-18 16:23:55,899 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:23:55,904 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-04-18 16:23:55,921 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl--637294b5:1718e1a890c:-8000', enabled
2020-04-18 16:23:55,933 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-04-18 16:23:55,945 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-18 16:23:55,967 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-04-18 16:23:55,983 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-04-18 16:23:55,998 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-04-18 16:23:56,002 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-04-18 16:23:56,024 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-04-18 16:23:56,030 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-04-18 16:23:56,040 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-18 16:23:56,043 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-18 16:23:56,044 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-04-18 16:23:56,044 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-18 16:23:56,061 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-04-18 16:23:56,073 INFO [org.geoserver] - Loaded layer 'states'
2020-04-18 16:23:56,088 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:23:56,134 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-18 16:23:56,134 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-18 16:23:56,136 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-18 16:23:56,274 INFO [gwc.layer] - Loaded 22 tile layers in 136.7 ms
2020-04-18 16:23:56,283 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:23:56,285 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:23:56,287 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:23:56,315 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-04-18 16:23:56,328 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:23:56,330 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-04-18 16:23:56,332 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:23:56,549 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-18 16:23:56,596 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:23:56,607 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-18 16:23:56,608 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-18 16:23:56,609 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:23:56,702 INFO [org.geoserver] - Loaded data store 'geotekedb', enabled
2020-04-18 16:23:56,746 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-18 16:23:56,755 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-18 16:23:56,758 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:23:56,782 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:23:56,792 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:23:56,813 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:23:56,817 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-18 16:23:56,818 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-18 16:23:56,842 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-04-18 16:23:56,866 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-18 16:23:56,868 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-18 16:23:56,871 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-18 16:23:56,895 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-18 16:23:56,937 WARN [org.geoserver] - Failed to load data store 'geotekedb'
java.lang.IllegalArgumentException: Store 'geotekedb' already exists in workspace 'geotekne'
	at org.geoserver.catalog.impl.CatalogImpl.validate(CatalogImpl.java:202)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:169)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:730)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:579)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:397)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:34)
	at org.geoserver.config.ReadOnlyGeoServerLoader.loadCatalog(ReadOnlyGeoServerLoader.java:47)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:261)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:57)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1737)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-04-18 16:23:57,005 INFO [gwc.layer] - Loaded 22 tile layers in 132.7 ms
2020-04-18 16:23:57,027 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-04-18 16:23:57,044 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:23:57,045 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-04-18 16:23:57,046 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:23:57,054 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-04-18 16:23:57,063 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-04-18 16:23:57,079 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-04-18 16:23:57,085 INFO [org.geoserver] - Read catalog in 10.89 s
2020-04-18 16:23:57,243 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-18 16:23:57,356 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-18 16:23:57,417 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-18 16:23:57,426 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-18 16:23:57,522 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-4b616fa7:1718e1a8f49:-8000', enabled
2020-04-18 16:23:57,550 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:23:57,565 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:23:57,574 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-18 16:23:57,574 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:23:57,587 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:23:57,590 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-18 16:23:57,593 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-18 16:23:57,625 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-04-18 16:23:57,631 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-04-18 16:23:57,676 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-18 16:23:57,714 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-18 16:23:57,733 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:23:57,920 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-18 16:23:57,922 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-18 16:23:57,936 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:23:57,936 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:23:57,937 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:23:58,052 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-18 16:23:58,091 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-18 16:23:58,098 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-18 16:23:58,182 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:23:58,183 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-18 16:23:58,184 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-18 16:23:58,184 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:23:58,280 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-18 16:23:58,292 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-18 16:23:58,442 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-18 16:23:58,446 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-18 16:23:58,448 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-18 16:23:58,475 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-18 16:23:58,475 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-18 16:23:58,529 INFO [gwc.layer] - Loaded 22 tile layers in 78.93 ms
2020-04-18 16:23:58,567 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-04-18 16:23:58,592 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:23:58,594 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-04-18 16:23:58,595 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:23:58,698 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-18 16:23:58,966 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:23:59,012 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:23:59,023 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:23:59,052 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:23:59,055 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-18 16:23:59,057 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-18 16:23:59,099 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-04-18 16:23:59,198 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-18 16:23:59,686 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-18 16:23:59,747 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-18 16:23:59,766 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-18 16:24:00,048 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-18 16:24:00,048 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-18 16:24:00,314 INFO [cluster.impl] - Using brokerURI: vm://651ede5f19f3-063337cd568b?create=false&waitForStart=5000
2020-04-18 16:24:00,455 INFO [cluster.impl] - Using brokerURI: vm://873c9caddad4-0f022e9b6559?create=false&waitForStart=5000
2020-04-18 16:24:02,289 INFO [cluster.impl] - Using brokerURI: vm://c8e6ce69fcc2-38e05cf845a0?create=false&waitForStart=5000
2020-04-18 16:24:05,859 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-04-18 16:24:05,951 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-04-18 16:24:07,677 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-04-18 16:24:20,426 INFO [cluster.impl] - Starting the embedded brokerURI
2020-04-18 16:24:20,472 INFO [cluster.impl] - Starting the embedded brokerURI
2020-04-18 16:24:22,560 INFO [cluster.impl] - Embedded brokerURI is now started
2020-04-18 16:24:22,566 INFO [cluster.impl] - Starting the embedded brokerURI
2020-04-18 16:24:22,573 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[873c9caddad4-0f022e9b6559]
2020-04-18 16:24:22,594 INFO [cluster.client] - Connecting...
2020-04-18 16:24:22,601 INFO [cluster.impl] - Using brokerURI: vm://873c9caddad4-0f022e9b6559?create=false&waitForStart=5000
2020-04-18 16:24:22,817 INFO [cluster.impl] - Embedded brokerURI is now started
2020-04-18 16:24:22,819 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[651ede5f19f3-063337cd568b]
2020-04-18 16:24:22,820 INFO [cluster.client] - Connecting...
2020-04-18 16:24:22,821 INFO [cluster.impl] - Using brokerURI: vm://651ede5f19f3-063337cd568b?create=false&waitForStart=5000
2020-04-18 16:24:22,849 INFO [cluster.client] - Registration...
2020-04-18 16:24:22,851 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-04-18 16:24:22,853 INFO [cluster.client] - Waiting for registration...(1/3)
2020-04-18 16:24:22,905 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.23.0.3:39192 failed: java.io.EOFException
2020-04-18 16:24:23,023 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.23.0.5:39102 failed: java.io.EOFException
2020-04-18 16:24:23,071 INFO [cluster.client] - Registration...
2020-04-18 16:24:23,075 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-04-18 16:24:23,077 INFO [cluster.client] - Waiting for registration...(1/3)
2020-04-18 16:24:24,156 ERROR [multicast.MulticastDiscoveryAgent] - Failed to advertise our service: default.ActiveMQ-4.alive.%localhost%tcp://c8e6ce69fcc2:42797
java.io.IOException: Operation not permitted
	at java.base/java.net.PlainDatagramSocketImpl.send0(Native Method)
	at java.base/java.net.AbstractPlainDatagramSocketImpl.send(AbstractPlainDatagramSocketImpl.java:136)
	at java.base/java.net.DatagramSocket.send(DatagramSocket.java:791)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.doAdvertizeSelf(MulticastDiscoveryAgent.java:446)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.doTimeKeepingServices(MulticastDiscoveryAgent.java:430)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.run(MulticastDiscoveryAgent.java:392)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-04-18 16:24:24,163 ERROR [multicast.MulticastDiscoveryAgent] - The 'Operation not permitted' error has been know to be caused by improper firewall/network setup.  Please make sure that the OS is properly configured to allow multicast traffic over: 0.0.0.0/0.0.0.0
2020-04-18 16:24:24,186 INFO [cluster.impl] - Embedded brokerURI is now started
2020-04-18 16:24:24,191 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[c8e6ce69fcc2-38e05cf845a0]
2020-04-18 16:24:24,192 INFO [cluster.client] - Connecting...
2020-04-18 16:24:24,193 INFO [cluster.impl] - Using brokerURI: vm://c8e6ce69fcc2-38e05cf845a0?create=false&waitForStart=5000
2020-04-18 16:24:24,256 INFO [cluster.client] - Registration...
2020-04-18 16:24:24,267 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-04-18 16:24:24,269 INFO [cluster.client] - Waiting for registration...(1/3)
2020-04-18 16:24:24,739 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.23.0.4:54868 failed: java.io.EOFException
2020-04-18 16:24:24,749 WARN [network.DemandForwardingBridgeSupport] - Network connection between vm://c8e6ce69fcc2-38e05cf845a0#6 and tcp://c8e6ce69fcc2/172.23.0.4:42797@54868 shutdown due to a remote error: java.net.SocketException: Socket closed
2020-04-18 16:24:30,179 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.23.0.4:54884 failed: java.io.EOFException
2020-04-18 16:24:32,856 INFO [cluster.client] - Registration...
2020-04-18 16:24:32,857 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-04-18 16:24:33,080 INFO [cluster.client] - Registration...
2020-04-18 16:24:33,081 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-04-18 16:24:33,659 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-18 16:24:33,668 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-18 16:24:33,672 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-18 16:24:33,690 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-18 16:24:34,024 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-18 16:24:34,026 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-18 16:24:34,043 INFO [geoserver.importer] - Enabling import store: memory
2020-04-18 16:24:34,045 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:24:34,047 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:24:34,059 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-18 16:24:34,059 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-18 16:24:34,071 INFO [geoserver.importer] - Enabling import store: memory
2020-04-18 16:24:34,074 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:24:34,087 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:24:34,269 INFO [cluster.client] - Registration...
2020-04-18 16:24:34,270 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-04-18 16:24:34,651 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-18 16:24:34,657 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-18 16:24:34,818 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-18 16:24:34,820 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-18 16:24:34,830 INFO [geoserver.importer] - Enabling import store: memory
2020-04-18 16:24:34,830 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:24:34,830 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:24:41,029 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.23.0.5:53554 failed: java.io.EOFException
2020-04-18 16:24:41,029 WARN [TransportConnection.Transport] - Transport Connection to: vm://651ede5f19f3-063337cd568b#4 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://651ede5f19f3-063337cd568b#4) stopped.
2020-04-18 16:24:41,033 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.23.0.5:52460 failed: java.io.EOFException
2020-04-18 16:24:41,042 WARN [TransportConnection.Transport] - Transport Connection to: vm://651ede5f19f3-063337cd568b#6 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://651ede5f19f3-063337cd568b#6) stopped.
2020-04-18 16:24:41,062 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.23.0.4:41134 failed: java.io.EOFException
2020-04-18 16:24:41,063 WARN [network.DemandForwardingBridgeSupport] - Network connection between vm://873c9caddad4-0f022e9b6559#4 and tcp://651ede5f19f3/172.23.0.5:39175@38042 shutdown due to a remote error: java.io.EOFException
2020-04-18 16:24:41,068 WARN [TransportConnection.Transport] - Transport Connection to: vm://c8e6ce69fcc2-38e05cf845a0#4 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://c8e6ce69fcc2-38e05cf845a0#4) stopped.
2020-04-18 16:24:41,075 WARN [network.DemandForwardingBridgeSupport] - Network connection between vm://c8e6ce69fcc2-38e05cf845a0#2 and tcp://651ede5f19f3/172.23.0.5:39175@49438 shutdown due to a remote error: java.io.EOFException
2020-04-18 16:24:41,087 WARN [TransportConnection.Transport] - Transport Connection to: vm://c8e6ce69fcc2-38e05cf845a0#2 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://c8e6ce69fcc2-38e05cf845a0#2) stopped.
2020-04-18 16:24:41,096 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.651ede5f19f3-063337cd568b.VirtualTopic.geoserver' - trying to recover. Cause: The Session is closed
2020-04-18 16:24:41,108 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.873c9caddad4-0f022e9b6559.VirtualTopic.geoserver' - trying to recover. Cause: The Consumer is closed
2020-04-18 16:24:41,182 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-04-18 16:24:41,184 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-04-18 16:24:41,188 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-04-18 16:24:41,190 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-04-18 16:24:41,191 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-04-18 16:24:41,196 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-04-18 16:24:41,196 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-04-18 16:24:41,195 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-04-18 16:24:41,199 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-04-18 16:24:41,201 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-04-18 16:24:41,203 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-04-18 16:24:41,206 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-04-18 16:24:41,213 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-04-18 16:24:41,213 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-04-18 16:24:41,216 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-04-18 16:24:41,218 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-04-18 16:24:41,213 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-04-18 16:24:41,223 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-04-18 16:24:41,225 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-04-18 16:24:41,227 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-04-18 16:24:41,228 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-04-18 16:24:41,235 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-04-18 16:24:46,120 ERROR [client.JMSContainer] - Could not refresh JMS Connection for destination 'queue://Consumer.873c9caddad4-0f022e9b6559.VirtualTopic.geoserver' - retrying using FixedBackOff{interval=5000, currentAttempts=0, maxAttempts=unlimited}. Cause: Error while attempting to retrieve a connection from the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named '873c9caddad4-0f022e9b6559' does not exist.
2020-04-18 16:27:31,507 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-18 16:27:31,791 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-18 16:27:32,007 INFO [org.geoserver] - Loading catalog...
2020-04-18 16:27:32,026 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-18 16:27:32,242 INFO [org.geoserver] - Loading catalog...
2020-04-18 16:27:32,560 INFO [org.geoserver] - Loaded style 'population'
2020-04-18 16:27:32,570 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-04-18 16:27:32,574 INFO [org.geoserver] - Loaded style 'green'
2020-04-18 16:27:32,581 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-04-18 16:27:32,584 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-18 16:27:32,590 INFO [org.geoserver] - Loaded style 'dem'
2020-04-18 16:27:32,598 INFO [org.geoserver] - Loaded style 'restricted'
2020-04-18 16:27:32,601 INFO [org.geoserver] - Loaded style 'poi'
2020-04-18 16:27:32,605 INFO [org.geoserver] - Loaded style 'pophatch'
2020-04-18 16:27:32,605 INFO [org.geoserver] - Loaded style 'grass'
2020-04-18 16:27:32,610 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-04-18 16:27:32,618 INFO [org.geoserver] - Loading catalog...
2020-04-18 16:27:32,627 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-04-18 16:27:32,629 INFO [org.geoserver] - Loaded style 'capitals'
2020-04-18 16:27:32,656 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-04-18 16:27:32,659 INFO [org.geoserver] - Loaded style 'raster'
2020-04-18 16:27:32,697 INFO [org.geoserver] - Loaded style 'rain'
2020-04-18 16:27:32,682 INFO [org.geoserver] - Loaded style 'population'
2020-04-18 16:27:32,700 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-04-18 16:27:32,702 INFO [org.geoserver] - Loaded style 'green'
2020-04-18 16:27:32,706 INFO [org.geoserver] - Loaded style 'line'
2020-04-18 16:27:32,707 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-04-18 16:27:32,709 INFO [org.geoserver] - Loaded style 'line'
2020-04-18 16:27:32,711 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-04-18 16:27:32,719 INFO [org.geoserver] - Loaded style 'point'
2020-04-18 16:27:32,720 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-18 16:27:32,726 INFO [org.geoserver] - Loaded style 'dem'
2020-04-18 16:27:32,733 INFO [org.geoserver] - Loaded style 'restricted'
2020-04-18 16:27:32,733 INFO [org.geoserver] - Loaded style 'generic'
2020-04-18 16:27:32,735 INFO [org.geoserver] - Loaded style 'poi'
2020-04-18 16:27:32,736 INFO [org.geoserver] - Loaded style 'pophatch'
2020-04-18 16:27:32,737 INFO [org.geoserver] - Loaded style 'grass'
2020-04-18 16:27:32,752 INFO [org.geoserver] - Loaded style 'burg'
2020-04-18 16:27:32,753 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-04-18 16:27:32,755 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-04-18 16:27:32,757 INFO [org.geoserver] - Loaded style 'capitals'
2020-04-18 16:27:32,759 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-04-18 16:27:32,760 INFO [org.geoserver] - Loaded default workspace cite
2020-04-18 16:27:32,781 INFO [org.geoserver] - Loaded style 'raster'
2020-04-18 16:27:32,784 INFO [org.geoserver] - Loaded style 'rain'
2020-04-18 16:27:32,786 INFO [org.geoserver] - Loaded style 'burg'
2020-04-18 16:27:32,787 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-04-18 16:27:32,791 INFO [org.geoserver] - Loaded style 'point'
2020-04-18 16:27:32,806 INFO [org.geoserver] - Loaded style 'generic'
2020-04-18 16:27:32,811 INFO [org.geoserver] - Loaded default workspace cite
2020-04-18 16:27:32,842 WARN [org.geoserver] - Ignoring workspace directory workspaces/csdi
2020-04-18 16:27:32,884 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-04-18 16:27:32,870 WARN [org.geoserver] - Ignoring workspace directory workspaces/csdi
2020-04-18 16:27:32,914 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-04-18 16:27:32,931 INFO [org.geoserver] - Loaded workspace 'sde'
2020-04-18 16:27:32,932 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-04-18 16:27:32,939 INFO [org.geoserver] - Loaded workspace 'sf'
2020-04-18 16:27:32,945 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-04-18 16:27:32,954 INFO [org.geoserver] - Loaded workspace 'cite'
2020-04-18 16:27:32,959 INFO [org.geoserver] - Loaded workspace 'topp'
2020-04-18 16:27:32,963 INFO [org.geoserver] - Loaded style 'population'
2020-04-18 16:27:32,970 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-04-18 16:27:32,968 INFO [org.geoserver] - Loaded workspace 'geotekne'
2020-04-18 16:27:32,975 INFO [org.geoserver] - Loaded style 'green'
2020-04-18 16:27:32,978 INFO [org.geoserver] - Loaded style 'line'
2020-04-18 16:27:32,979 INFO [org.geoserver] - Loaded workspace 'cite'
2020-04-18 16:27:32,980 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-04-18 16:27:32,985 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-18 16:27:32,985 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-04-18 16:27:32,988 INFO [org.geoserver] - Loaded workspace 'sde'
2020-04-18 16:27:32,989 INFO [org.geoserver] - Loaded style 'dem'
2020-04-18 16:27:32,992 INFO [org.geoserver] - Loaded style 'restricted'
2020-04-18 16:27:32,993 INFO [org.geoserver] - Loaded style 'poi'
2020-04-18 16:27:32,996 INFO [org.geoserver] - Loaded style 'pophatch'
2020-04-18 16:27:32,999 INFO [org.geoserver] - Loaded style 'grass'
2020-04-18 16:27:33,001 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-04-18 16:27:33,003 INFO [org.geoserver] - Loaded workspace 'sf'
2020-04-18 16:27:33,006 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-04-18 16:27:33,007 INFO [org.geoserver] - Loaded style 'capitals'
2020-04-18 16:27:33,008 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-04-18 16:27:33,013 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-04-18 16:27:33,013 INFO [org.geoserver] - Loaded style 'raster'
2020-04-18 16:27:33,019 INFO [org.geoserver] - Loaded style 'rain'
2020-04-18 16:27:33,020 INFO [org.geoserver] - Loaded style 'burg'
2020-04-18 16:27:33,023 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-04-18 16:27:33,025 INFO [org.geoserver] - Loaded style 'point'
2020-04-18 16:27:33,029 INFO [org.geoserver] - Loaded workspace 'topp'
2020-04-18 16:27:33,031 INFO [org.geoserver] - Loaded style 'generic'
2020-04-18 16:27:33,042 INFO [org.geoserver] - Loaded default workspace cite
2020-04-18 16:27:33,060 INFO [org.geoserver] - Loaded workspace 'geotekne'
2020-04-18 16:27:33,158 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-04-18 16:27:33,152 WARN [org.geoserver] - Ignoring workspace directory workspaces/csdi
2020-04-18 16:27:33,179 INFO [org.geoserver] - Loaded workspace 'cite'
2020-04-18 16:27:33,186 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-04-18 16:27:33,213 INFO [org.geoserver] - Loaded workspace 'sde'
2020-04-18 16:27:33,220 INFO [org.geoserver] - Loaded workspace 'sf'
2020-04-18 16:27:33,227 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-04-18 16:27:33,245 INFO [org.geoserver] - Loaded workspace 'geotekne'
2020-04-18 16:27:33,267 INFO [org.geoserver] - Loaded workspace 'topp'
2020-04-18 16:27:35,513 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-04-18 16:27:35,557 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-04-18 16:27:35,745 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-04-18 16:27:40,913 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-04-18 16:27:40,937 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-04-18 16:27:41,009 INFO [org.geoserver] - Loaded layer 'poi'
2020-04-18 16:27:41,035 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-04-18 16:27:41,042 INFO [org.geoserver] - Loaded layer 'poi'
2020-04-18 16:27:41,049 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-04-18 16:27:41,076 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-04-18 16:27:41,082 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-04-18 16:27:41,091 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-04-18 16:27:41,096 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-04-18 16:27:41,112 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-04-18 16:27:41,120 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-04-18 16:27:41,132 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-04-18 16:27:41,144 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-04-18 16:27:41,152 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-04-18 16:27:41,166 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-04-18 16:27:41,192 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-04-18 16:27:41,195 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-04-18 16:27:41,455 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-04-18 16:27:41,503 INFO [org.geoserver] - Loaded layer 'poi'
2020-04-18 16:27:41,548 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-04-18 16:27:41,563 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-04-18 16:27:41,574 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-04-18 16:27:41,597 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-04-18 16:27:41,605 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-04-18 16:27:41,615 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-04-18 16:27:41,691 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-04-18 16:27:42,582 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-04-18 16:27:42,585 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-04-18 16:27:42,611 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-04-18 16:27:42,642 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-04-18 16:27:42,645 INFO [org.geoserver] - Loaded layer 'roads'
2020-04-18 16:27:42,669 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-04-18 16:27:42,669 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-04-18 16:27:42,678 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-04-18 16:27:42,705 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-04-18 16:27:42,708 INFO [org.geoserver] - Loaded layer 'restricted'
2020-04-18 16:27:42,721 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-04-18 16:27:42,726 INFO [org.geoserver] - Loaded layer 'archsites'
2020-04-18 16:27:42,733 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-04-18 16:27:42,735 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-04-18 16:27:42,745 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-04-18 16:27:42,747 INFO [org.geoserver] - Loaded layer 'streams'
2020-04-18 16:27:42,752 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-04-18 16:27:42,760 INFO [org.geoserver] - Loaded layer 'roads'
2020-04-18 16:27:42,800 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-04-18 16:27:42,812 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-04-18 16:27:42,860 INFO [org.geoserver] - Loaded layer 'restricted'
2020-04-18 16:27:42,862 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-04-18 16:27:42,864 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-04-18 16:27:42,868 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-04-18 16:27:42,892 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-04-18 16:27:42,895 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-04-18 16:27:42,898 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-04-18 16:27:42,917 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-04-18 16:27:42,919 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-04-18 16:27:42,921 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-04-18 16:27:42,922 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-04-18 16:27:42,925 INFO [org.geoserver] - Loaded layer 'archsites'
2020-04-18 16:27:42,939 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-04-18 16:27:42,931 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-04-18 16:27:42,942 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-04-18 16:27:42,954 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-04-18 16:27:42,961 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-04-18 16:27:42,982 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-04-18 16:27:42,985 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-04-18 16:27:42,989 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-04-18 16:27:42,990 INFO [org.geoserver] - Loaded layer 'streams'
2020-04-18 16:27:42,998 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-04-18 16:27:43,014 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-04-18 16:27:43,045 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-04-18 16:27:43,048 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-04-18 16:27:43,050 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-04-18 16:27:43,064 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-04-18 16:27:43,065 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-04-18 16:27:43,115 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-04-18 16:27:43,119 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-04-18 16:27:43,122 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-04-18 16:27:43,125 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-04-18 16:27:43,126 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-04-18 16:27:43,130 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-04-18 16:27:43,142 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-04-18 16:27:43,151 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-04-18 16:27:43,155 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-04-18 16:27:43,156 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-04-18 16:27:43,165 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-04-18 16:27:43,170 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-04-18 16:27:43,186 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-04-18 16:27:43,191 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-04-18 16:27:43,200 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-04-18 16:27:43,202 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-04-18 16:27:43,210 INFO [org.geoserver] - Loaded layer 'states'
2020-04-18 16:27:43,219 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-04-18 16:27:43,241 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-04-18 16:27:43,243 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-04-18 16:27:43,246 INFO [org.geoserver] - Loaded layer 'roads'
2020-04-18 16:27:43,249 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-04-18 16:27:43,267 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-04-18 16:27:43,271 INFO [org.geoserver] - Loaded layer 'restricted'
2020-04-18 16:27:43,307 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-04-18 16:27:43,307 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-04-18 16:27:43,310 INFO [org.geoserver] - Loaded layer 'archsites'
2020-04-18 16:27:43,316 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-04-18 16:27:43,323 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-04-18 16:27:43,333 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-04-18 16:27:43,338 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-04-18 16:27:43,343 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-04-18 16:27:43,343 INFO [org.geoserver] - Loaded layer 'streams'
2020-04-18 16:27:43,349 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-04-18 16:27:43,355 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-04-18 16:27:43,364 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-04-18 16:27:43,364 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-04-18 16:27:43,378 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-04-18 16:27:43,400 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-04-18 16:27:43,403 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-04-18 16:27:43,405 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-04-18 16:27:43,405 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-04-18 16:27:43,411 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-04-18 16:27:43,413 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-04-18 16:27:43,415 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-04-18 16:27:43,421 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-04-18 16:27:43,423 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-04-18 16:27:43,426 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-04-18 16:27:43,428 INFO [org.geoserver] - Loaded layer 'states'
2020-04-18 16:27:43,432 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-04-18 16:27:43,435 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-04-18 16:27:43,445 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-04-18 16:27:43,478 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-04-18 16:27:43,482 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-04-18 16:27:43,498 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-04-18 16:27:43,505 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-04-18 16:27:43,511 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-04-18 16:27:43,514 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-04-18 16:27:43,528 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-04-18 16:27:43,531 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-04-18 16:27:43,562 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-04-18 16:27:43,590 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-04-18 16:27:43,602 INFO [org.geoserver] - Loaded layer 'states'
2020-04-18 16:27:43,826 INFO [org.geoserver] - Loaded data store 'geotekedb', enabled
2020-04-18 16:27:43,968 INFO [org.geoserver] - Loaded data store 'geotekedb', enabled
2020-04-18 16:27:44,016 WARN [org.geoserver] - Failed to load data store 'geotekedb'
java.lang.IllegalArgumentException: Store 'geotekedb' already exists in workspace 'geotekne'
	at org.geoserver.catalog.impl.CatalogImpl.validate(CatalogImpl.java:202)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:169)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:730)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:579)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:397)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:34)
	at org.geoserver.config.ReadOnlyGeoServerLoader.loadCatalog(ReadOnlyGeoServerLoader.java:47)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:261)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:57)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1737)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-04-18 16:27:44,045 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-04-18 16:27:44,051 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-04-18 16:27:44,063 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-04-18 16:27:44,070 INFO [org.geoserver] - Read catalog in 12.06 s
2020-04-18 16:27:44,216 WARN [org.geoserver] - Failed to load data store 'geotekedb'
java.lang.IllegalArgumentException: Store 'geotekedb' already exists in workspace 'geotekne'
	at org.geoserver.catalog.impl.CatalogImpl.validate(CatalogImpl.java:202)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:169)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:730)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:579)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:397)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:34)
	at org.geoserver.config.ReadOnlyGeoServerLoader.loadCatalog(ReadOnlyGeoServerLoader.java:47)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:261)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:57)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1737)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-04-18 16:27:44,245 INFO [org.geoserver] - Loaded data store 'geotekedb', enabled
2020-04-18 16:27:44,292 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-04-18 16:27:44,303 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-04-18 16:27:44,308 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-04-18 16:27:44,317 INFO [org.geoserver] - Read catalog in 12.07 s
2020-04-18 16:27:44,418 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl--5629c39e:1718e1e059c:-8000', enabled
2020-04-18 16:27:44,462 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-18 16:27:44,489 WARN [org.geoserver] - Failed to load data store 'geotekedb'
java.lang.IllegalArgumentException: Store 'geotekedb' already exists in workspace 'geotekne'
	at org.geoserver.catalog.impl.CatalogImpl.validate(CatalogImpl.java:202)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:169)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:730)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:579)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:397)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:34)
	at org.geoserver.config.ReadOnlyGeoServerLoader.loadCatalog(ReadOnlyGeoServerLoader.java:47)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:261)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:57)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1737)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-04-18 16:27:44,545 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-04-18 16:27:44,576 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-04-18 16:27:44,589 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-04-18 16:27:44,602 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-04-18 16:27:44,609 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-18 16:27:44,627 INFO [org.geoserver] - Read catalog in 12.00 s
2020-04-18 16:27:44,744 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:27:44,792 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-47f58688:1718e1e0715:-8000', enabled
2020-04-18 16:27:44,833 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-18 16:27:44,907 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-04-18 16:27:44,963 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-18 16:27:45,008 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:27:45,008 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:27:45,009 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:27:45,063 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:27:45,099 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-74f9ad0c:1718e1e0841:-8000', enabled
2020-04-18 16:27:45,152 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-18 16:27:45,221 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-04-18 16:27:45,275 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-18 16:27:45,277 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:27:45,279 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:27:45,295 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:27:45,307 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:27:45,309 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-18 16:27:45,311 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-18 16:27:45,314 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:27:45,372 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:27:45,508 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-18 16:27:45,512 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-18 16:27:45,569 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:27:45,572 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-18 16:27:45,575 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-18 16:27:45,577 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:27:45,596 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:27:45,598 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:27:45,600 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:27:45,651 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-18 16:27:45,658 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-18 16:27:45,659 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-18 16:27:45,765 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-18 16:27:45,767 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-18 16:27:45,816 INFO [gwc.layer] - Loaded 22 tile layers in 154.9 ms
2020-04-18 16:27:45,894 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-04-18 16:27:45,903 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-18 16:27:45,907 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-18 16:27:45,909 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-18 16:27:45,928 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:27:45,942 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-04-18 16:27:45,945 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:27:45,959 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:27:45,960 INFO [gwc.layer] - Loaded 22 tile layers in 49.68 ms
2020-04-18 16:27:45,965 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-18 16:27:45,968 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-18 16:27:45,969 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:27:46,001 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-04-18 16:27:46,025 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:27:46,027 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-04-18 16:27:46,029 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:27:46,113 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-18 16:27:46,124 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-18 16:27:46,196 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-18 16:27:46,244 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-18 16:27:46,244 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-18 16:27:46,244 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-18 16:27:46,284 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-18 16:27:46,372 INFO [gwc.layer] - Loaded 22 tile layers in 126.7 ms
2020-04-18 16:27:46,434 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-04-18 16:27:46,459 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:27:46,464 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-04-18 16:27:46,466 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:27:46,466 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:27:46,520 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:27:46,530 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:27:46,559 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:27:46,563 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-18 16:27:46,571 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-18 16:27:46,594 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-04-18 16:27:46,609 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:27:46,647 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:27:46,653 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:27:46,670 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:27:46,683 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-18 16:27:46,684 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-18 16:27:46,720 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-18 16:27:46,722 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-04-18 16:27:46,767 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-18 16:27:46,883 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-18 16:27:47,170 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:27:47,222 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:27:47,239 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:27:47,265 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:27:47,267 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-18 16:27:47,277 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-18 16:27:47,319 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-04-18 16:27:47,458 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-18 16:27:47,460 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-18 16:27:47,494 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-18 16:27:47,521 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-18 16:27:47,537 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-18 16:27:47,543 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-18 16:27:47,563 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-18 16:27:48,048 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-18 16:27:48,054 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-18 16:27:48,054 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-18 16:27:48,116 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-18 16:27:48,123 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-18 16:27:48,115 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-18 16:27:48,143 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-18 16:27:48,594 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-18 16:27:48,596 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-18 16:27:51,148 INFO [cluster.impl] - Using brokerURI: vm://b6820d537915-bba117e796f4?create=false&waitForStart=5000
2020-04-18 16:27:51,154 INFO [cluster.impl] - Using brokerURI: vm://11593c419749-234613906c07?create=false&waitForStart=5000
2020-04-18 16:27:51,525 INFO [cluster.impl] - Using brokerURI: vm://37d3d5b277e5-e16618dac8d3?create=false&waitForStart=5000
2020-04-18 16:27:57,175 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-04-18 16:27:58,405 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-04-18 16:27:58,673 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-04-18 16:28:15,673 INFO [cluster.impl] - Starting the embedded brokerURI
2020-04-18 16:28:17,774 INFO [cluster.impl] - Starting the embedded brokerURI
2020-04-18 16:28:18,148 INFO [cluster.impl] - Embedded brokerURI is now started
2020-04-18 16:28:18,155 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[11593c419749-234613906c07]
2020-04-18 16:28:18,169 INFO [cluster.client] - Connecting...
2020-04-18 16:28:18,179 INFO [cluster.impl] - Using brokerURI: vm://11593c419749-234613906c07?create=false&waitForStart=5000
2020-04-18 16:28:18,454 INFO [cluster.client] - Registration...
2020-04-18 16:28:18,456 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-04-18 16:28:18,458 INFO [cluster.client] - Waiting for registration...(1/3)
2020-04-18 16:28:18,463 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.24.0.4:55536 failed: java.io.EOFException
2020-04-18 16:28:18,660 INFO [cluster.impl] - Starting the embedded brokerURI
2020-04-18 16:28:20,357 INFO [cluster.impl] - Embedded brokerURI is now started
2020-04-18 16:28:20,364 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[37d3d5b277e5-e16618dac8d3]
2020-04-18 16:28:20,367 INFO [cluster.client] - Connecting...
2020-04-18 16:28:20,368 INFO [cluster.impl] - Using brokerURI: vm://37d3d5b277e5-e16618dac8d3?create=false&waitForStart=5000
2020-04-18 16:28:20,542 INFO [cluster.client] - Registration...
2020-04-18 16:28:20,563 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.24.0.3:47054 failed: java.io.EOFException
2020-04-18 16:28:20,569 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-04-18 16:28:20,571 INFO [cluster.client] - Waiting for registration...(1/3)
2020-04-18 16:28:20,676 ERROR [multicast.MulticastDiscoveryAgent] - Failed to advertise our service: default.ActiveMQ-4.alive.%localhost%tcp://b6820d537915:37395
java.io.IOException: Operation not permitted
	at java.base/java.net.PlainDatagramSocketImpl.send0(Native Method)
	at java.base/java.net.AbstractPlainDatagramSocketImpl.send(AbstractPlainDatagramSocketImpl.java:136)
	at java.base/java.net.DatagramSocket.send(DatagramSocket.java:791)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.doAdvertizeSelf(MulticastDiscoveryAgent.java:446)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.start(MulticastDiscoveryAgent.java:338)
	at org.apache.activemq.broker.TransportConnector.start(TransportConnector.java:256)
	at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:2747)
	at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:2640)
	at org.apache.activemq.broker.BrokerService.doStartBroker(BrokerService.java:771)
	at org.apache.activemq.broker.BrokerService.startBroker(BrokerService.java:733)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:636)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.startEmbeddedBroker(JMSActiveMQFactory.java:227)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.init(JMSActiveMQFactory.java:309)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:350)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:34)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-04-18 16:28:20,680 ERROR [multicast.MulticastDiscoveryAgent] - The 'Operation not permitted' error has been know to be caused by improper firewall/network setup.  Please make sure that the OS is properly configured to allow multicast traffic over: 0.0.0.0/0.0.0.0
2020-04-18 16:28:20,700 INFO [cluster.impl] - Embedded brokerURI is now started
2020-04-18 16:28:20,701 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[b6820d537915-bba117e796f4]
2020-04-18 16:28:20,702 INFO [cluster.client] - Connecting...
2020-04-18 16:28:20,702 INFO [cluster.impl] - Using brokerURI: vm://b6820d537915-bba117e796f4?create=false&waitForStart=5000
2020-04-18 16:28:20,782 INFO [cluster.client] - Registration...
2020-04-18 16:28:20,792 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-04-18 16:28:20,794 INFO [cluster.client] - Waiting for registration...(1/3)
2020-04-18 16:28:21,251 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.24.0.5:35666 failed: java.io.EOFException
2020-04-18 16:28:28,460 INFO [cluster.client] - Registration...
2020-04-18 16:28:28,460 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-04-18 16:28:28,850 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-18 16:28:28,856 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-18 16:28:29,029 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-18 16:28:29,030 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-18 16:28:29,039 INFO [geoserver.importer] - Enabling import store: memory
2020-04-18 16:28:29,039 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:28:29,039 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:28:30,571 INFO [cluster.client] - Registration...
2020-04-18 16:28:30,572 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-04-18 16:28:30,795 INFO [cluster.client] - Registration...
2020-04-18 16:28:30,796 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-04-18 16:28:31,165 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-18 16:28:31,176 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-18 16:28:31,347 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-18 16:28:31,363 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-18 16:28:31,506 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-18 16:28:31,508 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-18 16:28:31,531 INFO [geoserver.importer] - Enabling import store: memory
2020-04-18 16:28:31,531 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:28:31,531 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:28:31,631 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-18 16:28:31,633 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-18 16:28:31,648 INFO [geoserver.importer] - Enabling import store: memory
2020-04-18 16:28:31,649 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:28:31,649 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:31:48,108 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.24.0.4:42034 failed: java.io.EOFException
2020-04-18 16:31:48,109 WARN [TransportConnection.Transport] - Transport Connection to: vm://11593c419749-234613906c07#6 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://11593c419749-234613906c07#6) stopped.
2020-04-18 16:31:48,111 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.24.0.4:33276 failed: java.io.EOFException
2020-04-18 16:31:48,117 WARN [TransportConnection.Transport] - Transport Connection to: vm://11593c419749-234613906c07#4 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://11593c419749-234613906c07#4) stopped.
2020-04-18 16:31:48,128 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.24.0.5:41296 failed: java.io.EOFException
2020-04-18 16:31:48,129 WARN [TransportConnection.Transport] - Transport Connection to: vm://b6820d537915-bba117e796f4#2 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://b6820d537915-bba117e796f4#2) stopped.
2020-04-18 16:31:48,134 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.24.0.5:59142 failed: java.io.EOFException
2020-04-18 16:31:48,143 WARN [TransportConnection.Transport] - Transport Connection to: vm://b6820d537915-bba117e796f4#4 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://b6820d537915-bba117e796f4#4) stopped.
2020-04-18 16:31:48,143 WARN [TransportConnection.Transport] - Transport Connection to: vm://37d3d5b277e5-e16618dac8d3#6 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://37d3d5b277e5-e16618dac8d3#6) stopped.
2020-04-18 16:31:48,152 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.37d3d5b277e5-e16618dac8d3.VirtualTopic.geoserver' - trying to recover. Cause: The Consumer is closed
2020-04-18 16:31:48,175 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.b6820d537915-bba117e796f4.VirtualTopic.geoserver' - trying to recover. Cause: The Consumer is closed
2020-04-18 16:31:48,186 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.11593c419749-234613906c07.VirtualTopic.geoserver' - trying to recover. Cause: The Session is closed
2020-04-18 16:31:48,280 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-04-18 16:31:48,285 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-04-18 16:31:48,292 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-04-18 16:31:48,302 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-04-18 16:31:48,306 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-04-18 16:31:48,306 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-04-18 16:31:48,307 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-04-18 16:31:48,312 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-04-18 16:31:48,316 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-04-18 16:31:48,317 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-04-18 16:31:48,323 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-04-18 16:31:48,323 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-04-18 16:31:48,328 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-04-18 16:31:48,329 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-04-18 16:31:48,329 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-04-18 16:31:48,330 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-04-18 16:31:48,344 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-04-18 16:31:48,344 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-04-18 16:31:48,350 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-04-18 16:31:48,351 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-04-18 16:31:48,357 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-04-18 16:31:48,363 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-04-18 16:31:53,171 ERROR [client.JMSContainer] - Could not refresh JMS Connection for destination 'queue://Consumer.37d3d5b277e5-e16618dac8d3.VirtualTopic.geoserver' - retrying using FixedBackOff{interval=5000, currentAttempts=0, maxAttempts=unlimited}. Cause: Error while attempting to retrieve a connection from the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named '37d3d5b277e5-e16618dac8d3' does not exist.
2020-04-18 16:32:53,392 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-18 16:32:53,474 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-18 16:32:53,756 INFO [org.geoserver] - Loading catalog...
2020-04-18 16:32:53,818 INFO [org.geoserver] - Loading catalog...
2020-04-18 16:32:54,045 INFO [org.geoserver] - Loaded style 'population'
2020-04-18 16:32:54,047 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-04-18 16:32:54,048 INFO [org.geoserver] - Loaded style 'green'
2020-04-18 16:32:54,049 INFO [org.geoserver] - Loaded style 'line'
2020-04-18 16:32:54,050 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-04-18 16:32:54,051 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-18 16:32:54,052 INFO [org.geoserver] - Loaded style 'dem'
2020-04-18 16:32:54,053 INFO [org.geoserver] - Loaded style 'restricted'
2020-04-18 16:32:54,054 INFO [org.geoserver] - Loaded style 'poi'
2020-04-18 16:32:54,055 INFO [org.geoserver] - Loaded style 'pophatch'
2020-04-18 16:32:54,056 INFO [org.geoserver] - Loaded style 'grass'
2020-04-18 16:32:54,057 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-04-18 16:32:54,058 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-04-18 16:32:54,059 INFO [org.geoserver] - Loaded style 'capitals'
2020-04-18 16:32:54,060 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-04-18 16:32:54,062 INFO [org.geoserver] - Loaded style 'population'
2020-04-18 16:32:54,063 INFO [org.geoserver] - Loaded style 'raster'
2020-04-18 16:32:54,064 INFO [org.geoserver] - Loaded style 'burg'
2020-04-18 16:32:54,065 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-04-18 16:32:54,066 INFO [org.geoserver] - Loaded style 'point'
2020-04-18 16:32:54,068 INFO [org.geoserver] - Loaded style 'generic'
2020-04-18 16:32:54,069 INFO [org.geoserver] - Loaded style 'rain'
2020-04-18 16:32:54,070 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-04-18 16:32:54,075 INFO [org.geoserver] - Loaded style 'green'
2020-04-18 16:32:54,076 INFO [org.geoserver] - Loaded default workspace cite
2020-04-18 16:32:54,080 INFO [org.geoserver] - Loaded style 'line'
2020-04-18 16:32:54,089 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-04-18 16:32:54,101 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-18 16:32:54,107 INFO [org.geoserver] - Loaded style 'dem'
2020-04-18 16:32:54,118 INFO [org.geoserver] - Loaded style 'restricted'
2020-04-18 16:32:54,121 INFO [org.geoserver] - Loaded style 'poi'
2020-04-18 16:32:54,128 INFO [org.geoserver] - Loaded style 'pophatch'
2020-04-18 16:32:54,133 INFO [org.geoserver] - Loaded style 'grass'
2020-04-18 16:32:54,136 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-04-18 16:32:54,148 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-04-18 16:32:54,152 INFO [org.geoserver] - Loaded style 'capitals'
2020-04-18 16:32:54,155 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-04-18 16:32:54,163 INFO [org.geoserver] - Loaded style 'raster'
2020-04-18 16:32:54,168 INFO [org.geoserver] - Loaded style 'rain'
2020-04-18 16:32:54,171 INFO [org.geoserver] - Loaded style 'burg'
2020-04-18 16:32:54,174 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-04-18 16:32:54,181 INFO [org.geoserver] - Loaded style 'point'
2020-04-18 16:32:54,183 INFO [org.geoserver] - Loaded style 'generic'
2020-04-18 16:32:54,187 INFO [org.geoserver] - Loaded default workspace cite
2020-04-18 16:32:54,183 WARN [org.geoserver] - Ignoring workspace directory workspaces/csdi
2020-04-18 16:32:54,216 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-04-18 16:32:54,240 INFO [org.geoserver] - Loaded workspace 'cite'
2020-04-18 16:32:54,250 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-04-18 16:32:54,254 INFO [org.geoserver] - Loaded workspace 'sf'
2020-04-18 16:32:54,245 WARN [org.geoserver] - Ignoring workspace directory workspaces/csdi
2020-04-18 16:32:54,263 INFO [org.geoserver] - Loaded workspace 'topp'
2020-04-18 16:32:54,267 INFO [org.geoserver] - Loaded workspace 'geotekne'
2020-04-18 16:32:54,260 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-04-18 16:32:54,272 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-04-18 16:32:54,275 INFO [org.geoserver] - Loaded workspace 'sde'
2020-04-18 16:32:54,280 INFO [org.geoserver] - Loaded workspace 'sf'
2020-04-18 16:32:54,284 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-04-18 16:32:54,286 INFO [org.geoserver] - Loaded workspace 'topp'
2020-04-18 16:32:54,302 INFO [org.geoserver] - Loaded workspace 'geotekne'
2020-04-18 16:32:54,321 INFO [org.geoserver] - Loaded workspace 'cite'
2020-04-18 16:32:54,346 INFO [org.geoserver] - Loaded workspace 'sde'
2020-04-18 16:32:54,367 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-04-18 16:32:55,611 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-18 16:32:55,798 INFO [org.geoserver] - Loading catalog...
2020-04-18 16:32:56,000 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-04-18 16:32:56,005 INFO [org.geoserver] - Loaded style 'population'
2020-04-18 16:32:56,006 INFO [org.geoserver] - Loaded style 'line'
2020-04-18 16:32:56,009 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-04-18 16:32:56,012 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-18 16:32:56,016 INFO [org.geoserver] - Loaded style 'dem'
2020-04-18 16:32:56,018 INFO [org.geoserver] - Loaded style 'restricted'
2020-04-18 16:32:56,023 INFO [org.geoserver] - Loaded style 'poi'
2020-04-18 16:32:56,027 INFO [org.geoserver] - Loaded style 'pophatch'
2020-04-18 16:32:56,031 INFO [org.geoserver] - Loaded style 'grass'
2020-04-18 16:32:56,034 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-04-18 16:32:56,042 INFO [org.geoserver] - Loaded style 'green'
2020-04-18 16:32:56,049 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-04-18 16:32:56,057 INFO [org.geoserver] - Loaded style 'capitals'
2020-04-18 16:32:56,059 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-04-18 16:32:56,070 INFO [org.geoserver] - Loaded style 'raster'
2020-04-18 16:32:56,077 INFO [org.geoserver] - Loaded style 'rain'
2020-04-18 16:32:56,082 INFO [org.geoserver] - Loaded style 'burg'
2020-04-18 16:32:56,084 INFO [org.geoserver] - Loaded style 'point'
2020-04-18 16:32:56,090 INFO [org.geoserver] - Loaded style 'generic'
2020-04-18 16:32:56,095 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-04-18 16:32:56,106 INFO [org.geoserver] - Loaded default workspace cite
2020-04-18 16:32:56,264 WARN [org.geoserver] - Ignoring workspace directory workspaces/csdi
2020-04-18 16:32:56,280 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-04-18 16:32:56,330 INFO [org.geoserver] - Loaded workspace 'sf'
2020-04-18 16:32:56,348 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-04-18 16:32:56,364 INFO [org.geoserver] - Loaded workspace 'topp'
2020-04-18 16:32:56,372 INFO [org.geoserver] - Loaded workspace 'geotekne'
2020-04-18 16:32:56,383 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-04-18 16:32:56,393 INFO [org.geoserver] - Loaded workspace 'sde'
2020-04-18 16:32:56,408 INFO [org.geoserver] - Loaded workspace 'cite'
2020-04-18 16:32:56,422 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-04-18 16:32:56,430 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-04-18 16:32:58,295 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-04-18 16:33:00,338 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-04-18 16:33:00,407 INFO [org.geoserver] - Loaded layer 'poi'
2020-04-18 16:33:00,436 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-04-18 16:33:00,440 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-04-18 16:33:00,452 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-04-18 16:33:00,460 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-04-18 16:33:00,471 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-04-18 16:33:00,486 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-04-18 16:33:00,510 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-04-18 16:33:00,666 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-04-18 16:33:00,765 INFO [org.geoserver] - Loaded layer 'poi'
2020-04-18 16:33:00,817 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-04-18 16:33:00,822 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-04-18 16:33:00,832 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-04-18 16:33:00,838 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-04-18 16:33:00,850 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-04-18 16:33:00,855 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-04-18 16:33:00,875 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-04-18 16:33:01,798 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-04-18 16:33:01,812 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-04-18 16:33:01,829 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-04-18 16:33:01,862 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-04-18 16:33:01,882 INFO [org.geoserver] - Loaded layer 'roads'
2020-04-18 16:33:01,927 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-04-18 16:33:01,942 INFO [org.geoserver] - Loaded layer 'restricted'
2020-04-18 16:33:01,976 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-04-18 16:33:01,983 INFO [org.geoserver] - Loaded layer 'archsites'
2020-04-18 16:33:02,005 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-04-18 16:33:02,010 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-04-18 16:33:02,027 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-04-18 16:33:02,035 INFO [org.geoserver] - Loaded layer 'streams'
2020-04-18 16:33:02,063 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-04-18 16:33:02,091 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-04-18 16:33:02,132 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-04-18 16:33:02,141 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-04-18 16:33:02,152 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-04-18 16:33:02,190 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-04-18 16:33:02,197 INFO [org.geoserver] - Loaded layer 'poi'
2020-04-18 16:33:02,197 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-04-18 16:33:02,206 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-04-18 16:33:02,208 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-04-18 16:33:02,214 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-04-18 16:33:02,217 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-04-18 16:33:02,225 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-04-18 16:33:02,227 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-04-18 16:33:02,227 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-04-18 16:33:02,238 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-04-18 16:33:02,240 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-04-18 16:33:02,241 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-04-18 16:33:02,249 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-04-18 16:33:02,254 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-04-18 16:33:02,263 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-04-18 16:33:02,269 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-04-18 16:33:02,275 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-04-18 16:33:02,277 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-04-18 16:33:02,279 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-04-18 16:33:02,287 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-04-18 16:33:02,288 INFO [org.geoserver] - Loaded layer 'roads'
2020-04-18 16:33:02,294 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-04-18 16:33:02,294 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-04-18 16:33:02,300 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-04-18 16:33:02,306 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-04-18 16:33:02,317 INFO [org.geoserver] - Loaded layer 'restricted'
2020-04-18 16:33:02,321 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-04-18 16:33:02,325 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-04-18 16:33:02,328 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-04-18 16:33:02,334 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-04-18 16:33:02,340 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-04-18 16:33:02,341 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-04-18 16:33:02,342 INFO [org.geoserver] - Loaded layer 'archsites'
2020-04-18 16:33:02,369 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-04-18 16:33:02,370 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-04-18 16:33:02,374 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-04-18 16:33:02,382 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-04-18 16:33:02,385 INFO [org.geoserver] - Loaded layer 'streams'
2020-04-18 16:33:02,391 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-04-18 16:33:02,399 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-04-18 16:33:02,404 INFO [org.geoserver] - Loaded layer 'states'
2020-04-18 16:33:02,412 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-04-18 16:33:02,415 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-04-18 16:33:02,419 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-04-18 16:33:02,432 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-04-18 16:33:02,436 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-04-18 16:33:02,444 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-04-18 16:33:02,459 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-04-18 16:33:02,467 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-04-18 16:33:02,474 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-04-18 16:33:02,494 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-04-18 16:33:02,503 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-04-18 16:33:02,576 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-04-18 16:33:02,611 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-04-18 16:33:02,616 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-04-18 16:33:02,640 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-04-18 16:33:02,670 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-04-18 16:33:02,678 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-04-18 16:33:02,701 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-04-18 16:33:02,705 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-04-18 16:33:02,707 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-04-18 16:33:02,712 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-04-18 16:33:02,728 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-04-18 16:33:02,735 INFO [org.geoserver] - Loaded layer 'states'
2020-04-18 16:33:03,090 INFO [org.geoserver] - Loaded data store 'geotekedb', enabled
2020-04-18 16:33:03,308 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-04-18 16:33:03,311 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-04-18 16:33:03,339 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-04-18 16:33:03,377 INFO [org.geoserver] - Loaded data store 'geotekedb', enabled
2020-04-18 16:33:03,378 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-04-18 16:33:03,386 INFO [org.geoserver] - Loaded layer 'roads'
2020-04-18 16:33:03,378 WARN [org.geoserver] - Failed to load data store 'geotekedb'
java.lang.IllegalArgumentException: Store 'geotekedb' already exists in workspace 'geotekne'
	at org.geoserver.catalog.impl.CatalogImpl.validate(CatalogImpl.java:202)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:169)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:730)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:579)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:397)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:34)
	at org.geoserver.config.ReadOnlyGeoServerLoader.loadCatalog(ReadOnlyGeoServerLoader.java:47)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:261)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:57)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1737)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	a2020-04-18 16:33:03,401 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
t org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-04-18 16:33:03,415 INFO [org.geoserver] - Loaded layer 'restricted'
2020-04-18 16:33:03,431 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-04-18 16:33:03,441 INFO [org.geoserver] - Loaded layer 'archsites'
2020-04-18 16:33:03,468 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-04-18 16:33:03,471 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-04-18 16:33:03,480 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-04-18 16:33:03,486 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-04-18 16:33:03,492 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-04-18 16:33:03,495 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-04-18 16:33:03,502 INFO [org.geoserver] - Read catalog in 9.741 s
2020-04-18 16:33:03,505 INFO [org.geoserver] - Loaded layer 'streams'
2020-04-18 16:33:03,514 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-04-18 16:33:03,580 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-04-18 16:33:03,584 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-04-18 16:33:03,600 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-04-18 16:33:03,607 WARN [org.geoserver] - Failed to load data store 'geotekedb'
java.lang.IllegalArgumentException: Store 'geotekedb' already exists in workspace 'geotekne'
	at org.geoserver.catalog.impl.CatalogImpl.validate(CatalogImpl.java:202)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:169)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:730)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:579)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:397)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:34)
	at org.geoserver.config.ReadOnlyGeoServerLoader.loadCatalog(ReadOnlyGeoServerLoader.java:47)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:261)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:57)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1737)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-04-18 16:33:03,634 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-04-18 16:33:03,638 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-04-18 16:33:03,644 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-04-18 16:33:03,656 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-04-18 16:33:03,669 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-04-18 16:33:03,680 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-04-18 16:33:03,681 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-04-18 16:33:03,707 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-04-18 16:33:03,707 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-04-18 16:33:03,716 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-04-18 16:33:03,731 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-04-18 16:33:03,741 INFO [org.geoserver] - Read catalog in 9.921 s
2020-04-18 16:33:03,753 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-04-18 16:33:03,779 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-04-18 16:33:03,790 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-04-18 16:33:03,808 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-04-18 16:33:03,855 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-04-18 16:33:03,884 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-04-18 16:33:03,886 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-04-18 16:33:03,911 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-04-18 16:33:03,919 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-04-18 16:33:03,964 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-04-18 16:33:03,991 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-04-18 16:33:03,997 INFO [org.geoserver] - Loaded layer 'states'
2020-04-18 16:33:04,151 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl--32897179:1718e22e689:-8000', enabled
2020-04-18 16:33:04,243 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-18 16:33:04,243 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-36c89cf4:1718e22e6f0:-8000', enabled
2020-04-18 16:33:04,270 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-18 16:33:04,274 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-04-18 16:33:04,313 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-18 16:33:04,349 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-04-18 16:33:04,360 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:33:04,376 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-18 16:33:04,463 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:33:04,538 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:33:04,539 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:33:04,539 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:33:04,672 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:33:04,674 INFO [org.geoserver] - Loaded data store 'geotekedb', enabled
2020-04-18 16:33:04,679 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:33:04,685 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:33:04,814 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:33:04,815 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-18 16:33:04,815 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-18 16:33:04,815 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:33:04,896 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:33:04,898 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-18 16:33:04,900 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-18 16:33:04,902 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:33:04,917 WARN [org.geoserver] - Failed to load data store 'geotekedb'
java.lang.IllegalArgumentException: Store 'geotekedb' already exists in workspace 'geotekne'
	at org.geoserver.catalog.impl.CatalogImpl.validate(CatalogImpl.java:202)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:169)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:730)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:579)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:397)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:34)
	at org.geoserver.config.ReadOnlyGeoServerLoader.loadCatalog(ReadOnlyGeoServerLoader.java:47)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:261)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:57)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1737)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-04-18 16:33:04,967 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-18 16:33:04,971 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-18 16:33:04,986 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-04-18 16:33:04,993 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-04-18 16:33:05,001 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-04-18 16:33:05,012 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-18 16:33:05,018 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-18 16:33:05,026 INFO [org.geoserver] - Read catalog in 9.222 s
2020-04-18 16:33:05,154 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-18 16:33:05,154 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-18 16:33:05,154 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-18 16:33:05,161 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-18 16:33:05,166 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-18 16:33:05,169 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-18 16:33:05,301 INFO [gwc.layer] - Loaded 22 tile layers in 129.9 ms
2020-04-18 16:33:05,315 INFO [gwc.layer] - Loaded 22 tile layers in 159.7 ms
2020-04-18 16:33:05,355 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-c955f2d:1718e22eb42:-8000', enabled
2020-04-18 16:33:05,373 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-04-18 16:33:05,402 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-04-18 16:33:05,430 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:33:05,431 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-18 16:33:05,436 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-04-18 16:33:05,443 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:33:05,446 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:33:05,453 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-04-18 16:33:05,454 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:33:05,513 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-04-18 16:33:05,591 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-18 16:33:05,643 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-18 16:33:05,706 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-18 16:33:05,751 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:33:05,924 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:33:05,925 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:33:05,925 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:33:05,942 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:33:05,970 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:33:05,985 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:33:06,007 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:33:06,034 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:33:06,041 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-18 16:33:06,042 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-18 16:33:06,051 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:33:06,086 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:33:06,088 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-04-18 16:33:06,145 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:33:06,153 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-18 16:33:06,153 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-18 16:33:06,182 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-04-18 16:33:06,250 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-18 16:33:06,312 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-18 16:33:06,320 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:33:06,321 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-18 16:33:06,323 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-18 16:33:06,325 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:33:06,524 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-18 16:33:06,547 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-18 16:33:06,686 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-18 16:33:06,687 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-18 16:33:06,687 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-18 16:33:06,862 INFO [gwc.layer] - Loaded 22 tile layers in 173.8 ms
2020-04-18 16:33:06,887 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-18 16:33:06,895 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-04-18 16:33:06,930 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:33:06,936 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-04-18 16:33:06,937 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:33:06,983 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-18 16:33:07,009 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-18 16:33:07,041 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-18 16:33:07,083 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-18 16:33:07,114 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-18 16:33:07,220 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-18 16:33:07,489 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:33:07,505 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-18 16:33:07,506 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-18 16:33:07,533 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:33:07,545 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:33:07,572 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:33:07,589 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-18 16:33:07,592 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-18 16:33:07,639 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-04-18 16:33:07,667 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-18 16:33:07,669 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-18 16:33:07,742 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-18 16:33:08,303 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-18 16:33:08,366 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-18 16:33:08,377 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-18 16:33:08,941 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-18 16:33:08,946 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-18 16:33:10,272 INFO [cluster.impl] - Using brokerURI: vm://d7a731e4554a-d684a4985389?create=false&waitForStart=5000
2020-04-18 16:33:10,521 INFO [cluster.impl] - Using brokerURI: vm://33d970ecb919-ca2dd9fcaa65?create=false&waitForStart=5000
2020-04-18 16:33:11,815 INFO [cluster.impl] - Using brokerURI: vm://e62576e6f31f-aef0b63778dc?create=false&waitForStart=5000
2020-04-18 16:33:17,485 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-04-18 16:33:18,270 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-04-18 16:33:18,844 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-04-18 16:33:34,105 INFO [cluster.impl] - Starting the embedded brokerURI
2020-04-18 16:33:34,407 INFO [cluster.impl] - Starting the embedded brokerURI
2020-04-18 16:33:35,629 INFO [cluster.impl] - Starting the embedded brokerURI
2020-04-18 16:33:37,117 INFO [cluster.impl] - Embedded brokerURI is now started
2020-04-18 16:33:37,127 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[e62576e6f31f-aef0b63778dc]
2020-04-18 16:33:37,133 INFO [cluster.impl] - Embedded brokerURI is now started
2020-04-18 16:33:37,136 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[33d970ecb919-ca2dd9fcaa65]
2020-04-18 16:33:37,143 INFO [cluster.client] - Connecting...
2020-04-18 16:33:37,143 INFO [cluster.impl] - Using brokerURI: vm://33d970ecb919-ca2dd9fcaa65?create=false&waitForStart=5000
2020-04-18 16:33:37,144 INFO [cluster.client] - Connecting...
2020-04-18 16:33:37,158 INFO [cluster.impl] - Using brokerURI: vm://e62576e6f31f-aef0b63778dc?create=false&waitForStart=5000
2020-04-18 16:33:37,415 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.25.0.5:46000 failed: java.io.EOFException
2020-04-18 16:33:37,508 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.25.0.3:42320 failed: java.io.EOFException
2020-04-18 16:33:37,513 INFO [cluster.client] - Registration...
2020-04-18 16:33:37,515 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-04-18 16:33:37,516 INFO [cluster.client] - Waiting for registration...(1/3)
2020-04-18 16:33:37,524 INFO [cluster.client] - Registration...
2020-04-18 16:33:37,905 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-04-18 16:33:37,905 INFO [cluster.client] - Waiting for registration...(1/3)
2020-04-18 16:33:38,270 ERROR [multicast.MulticastDiscoveryAgent] - Failed to advertise our service: default.ActiveMQ-4.alive.%localhost%tcp://d7a731e4554a:42253
java.io.IOException: Operation not permitted
	at java.base/java.net.PlainDatagramSocketImpl.send0(Native Method)
	at java.base/java.net.AbstractPlainDatagramSocketImpl.send(AbstractPlainDatagramSocketImpl.java:136)
	at java.base/java.net.DatagramSocket.send(DatagramSocket.java:791)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.doAdvertizeSelf(MulticastDiscoveryAgent.java:446)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.start(MulticastDiscoveryAgent.java:338)
	at org.apache.activemq.broker.TransportConnector.start(TransportConnector.java:256)
	at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:2747)
	at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:2640)
	at org.apache.activemq.broker.BrokerService.doStartBroker(BrokerService.java:771)
	at org.apache.activemq.broker.BrokerService.startBroker(BrokerService.java:733)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:636)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.startEmbeddedBroker(JMSActiveMQFactory.java:227)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.init(JMSActiveMQFactory.java:309)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:350)
	at org.geoserver.cluster.impl.JMSActiveMQFactory.onApplicationEvent(JMSActiveMQFactory.java:34)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-04-18 16:33:38,275 ERROR [multicast.MulticastDiscoveryAgent] - The 'Operation not permitted' error has been know to be caused by improper firewall/network setup.  Please make sure that the OS is properly configured to allow multicast traffic over: 0.0.0.0/0.0.0.0
2020-04-18 16:33:38,308 INFO [cluster.impl] - Embedded brokerURI is now started
2020-04-18 16:33:38,311 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[d7a731e4554a-d684a4985389]
2020-04-18 16:33:38,316 INFO [cluster.client] - Connecting...
2020-04-18 16:33:38,316 INFO [cluster.impl] - Using brokerURI: vm://d7a731e4554a-d684a4985389?create=false&waitForStart=5000
2020-04-18 16:33:38,419 INFO [cluster.client] - Registration...
2020-04-18 16:33:38,420 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-04-18 16:33:38,421 INFO [cluster.client] - Waiting for registration...(1/3)
2020-04-18 16:33:38,885 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.25.0.4:46694 failed: java.io.EOFException
2020-04-18 16:33:47,519 INFO [cluster.client] - Registration...
2020-04-18 16:33:47,519 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-04-18 16:33:47,906 INFO [cluster.client] - Registration...
2020-04-18 16:33:47,906 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-04-18 16:33:48,059 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-18 16:33:48,073 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-18 16:33:48,396 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-18 16:33:48,397 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-18 16:33:48,410 INFO [geoserver.importer] - Enabling import store: memory
2020-04-18 16:33:48,412 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:33:48,414 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:33:48,421 INFO [cluster.client] - Registration...
2020-04-18 16:33:48,423 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-04-18 16:33:48,462 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-18 16:33:48,480 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-18 16:33:48,898 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-18 16:33:48,899 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-18 16:33:48,913 INFO [geoserver.importer] - Enabling import store: memory
2020-04-18 16:33:48,914 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:33:48,914 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:33:49,096 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-18 16:33:49,103 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-18 16:33:49,315 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-18 16:33:49,316 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-18 16:33:49,323 INFO [geoserver.importer] - Enabling import store: memory
2020-04-18 16:33:49,324 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:33:49,324 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:34:34,306 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.25.0.5:37460 failed: java.io.EOFException
2020-04-18 16:34:34,309 WARN [TransportConnection.Transport] - Transport Connection to: vm://e62576e6f31f-aef0b63778dc#6 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://e62576e6f31f-aef0b63778dc#6) stopped.
2020-04-18 16:34:34,312 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.25.0.4:44918 failed: java.io.EOFException
2020-04-18 16:34:34,312 WARN [TransportConnection.Transport] - Transport Connection to: vm://d7a731e4554a-d684a4985389#2 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://d7a731e4554a-d684a4985389#2) stopped.
2020-04-18 16:34:34,315 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.25.0.4:39258 failed: java.io.EOFException
2020-04-18 16:34:34,327 WARN [TransportConnection.Transport] - Transport Connection to: vm://d7a731e4554a-d684a4985389#4 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://d7a731e4554a-d684a4985389#4) stopped.
2020-04-18 16:34:34,330 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.25.0.5:42840 failed: java.io.EOFException
2020-04-18 16:34:34,337 WARN [TransportConnection.Transport] - Transport Connection to: vm://e62576e6f31f-aef0b63778dc#2 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://e62576e6f31f-aef0b63778dc#2) stopped.
2020-04-18 16:34:34,354 WARN [network.DemandForwardingBridgeSupport] - Network connection between vm://33d970ecb919-ca2dd9fcaa65#4 and tcp://e62576e6f31f/172.25.0.5:44305@43966 shutdown due to a remote error: java.io.EOFException
2020-04-18 16:34:34,361 WARN [TransportConnection.Transport] - Transport Connection to: vm://33d970ecb919-ca2dd9fcaa65#6 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://33d970ecb919-ca2dd9fcaa65#6) stopped.
2020-04-18 16:34:34,358 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.d7a731e4554a-d684a4985389.VirtualTopic.geoserver' - trying to recover. Cause: The Session is closed
2020-04-18 16:34:34,367 WARN [TransportConnection.Transport] - Transport Connection to: vm://33d970ecb919-ca2dd9fcaa65#4 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://33d970ecb919-ca2dd9fcaa65#4) stopped.
2020-04-18 16:34:34,373 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.e62576e6f31f-aef0b63778dc.VirtualTopic.geoserver' - trying to recover. Cause: The Session is closed
2020-04-18 16:34:34,379 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.33d970ecb919-ca2dd9fcaa65.VirtualTopic.geoserver' - trying to recover. Cause: The Session is closed
2020-04-18 16:34:34,515 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-04-18 16:34:34,516 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-04-18 16:34:34,520 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-04-18 16:34:34,524 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-04-18 16:34:34,525 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-04-18 16:34:34,541 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-04-18 16:34:34,542 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-04-18 16:34:34,547 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-04-18 16:34:34,549 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-04-18 16:34:34,556 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-04-18 16:34:34,563 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-04-18 16:34:39,373 ERROR [client.JMSContainer] - Could not refresh JMS Connection for destination 'queue://Consumer.d7a731e4554a-d684a4985389.VirtualTopic.geoserver' - retrying using FixedBackOff{interval=5000, currentAttempts=0, maxAttempts=unlimited}. Cause: Error while attempting to retrieve a connection from the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named 'd7a731e4554a-d684a4985389' does not exist.
2020-04-18 16:34:39,404 ERROR [client.JMSContainer] - Could not refresh JMS Connection for destination 'queue://Consumer.33d970ecb919-ca2dd9fcaa65.VirtualTopic.geoserver' - retrying using FixedBackOff{interval=5000, currentAttempts=0, maxAttempts=unlimited}. Cause: Error while attempting to retrieve a connection from the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named '33d970ecb919-ca2dd9fcaa65' does not exist.
2020-04-18 16:35:33,368 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-18 16:35:33,625 INFO [org.geoserver] - Loading catalog...
2020-04-18 16:35:33,831 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-18 16:35:33,951 INFO [org.geoserver] - Loaded style 'population'
2020-04-18 16:35:33,955 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-04-18 16:35:33,958 INFO [org.geoserver] - Loaded style 'green'
2020-04-18 16:35:33,960 INFO [org.geoserver] - Loaded style 'line'
2020-04-18 16:35:33,963 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-04-18 16:35:33,966 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-18 16:35:33,968 INFO [org.geoserver] - Loaded style 'dem'
2020-04-18 16:35:33,971 INFO [org.geoserver] - Loaded style 'restricted'
2020-04-18 16:35:33,974 INFO [org.geoserver] - Loaded style 'poi'
2020-04-18 16:35:33,977 INFO [org.geoserver] - Loaded style 'pophatch'
2020-04-18 16:35:33,980 INFO [org.geoserver] - Loaded style 'grass'
2020-04-18 16:35:33,984 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-04-18 16:35:33,988 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-04-18 16:35:33,990 INFO [org.geoserver] - Loaded style 'capitals'
2020-04-18 16:35:33,993 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-04-18 16:35:33,998 INFO [org.geoserver] - Loaded style 'raster'
2020-04-18 16:35:34,001 INFO [org.geoserver] - Loaded style 'rain'
2020-04-18 16:35:34,006 INFO [org.geoserver] - Loaded style 'burg'
2020-04-18 16:35:34,009 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-04-18 16:35:34,012 INFO [org.geoserver] - Loaded style 'point'
2020-04-18 16:35:34,015 INFO [org.geoserver] - Loaded style 'generic'
2020-04-18 16:35:34,019 INFO [org.geoserver] - Loaded default workspace cite
2020-04-18 16:35:34,113 WARN [org.geoserver] - Ignoring workspace directory workspaces/csdi
2020-04-18 16:35:34,129 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-04-18 16:35:34,168 INFO [org.geoserver] - Loaded workspace 'sf'
2020-04-18 16:35:34,178 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-04-18 16:35:34,195 INFO [org.geoserver] - Loaded workspace 'topp'
2020-04-18 16:35:34,208 INFO [org.geoserver] - Loaded workspace 'geotekne'
2020-04-18 16:35:34,218 INFO [org.geoserver] - Loaded workspace 'cite'
2020-04-18 16:35:34,226 INFO [org.geoserver] - Loaded workspace 'sde'
2020-04-18 16:35:34,255 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-04-18 16:35:34,267 INFO [org.geoserver] - Loading catalog...
2020-04-18 16:35:34,309 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-18 16:35:34,557 INFO [org.geoserver] - Loaded style 'population'
2020-04-18 16:35:34,571 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-04-18 16:35:34,574 INFO [org.geoserver] - Loaded style 'green'
2020-04-18 16:35:34,577 INFO [org.geoserver] - Loaded style 'line'
2020-04-18 16:35:34,583 INFO [org.geoserver] - Loading catalog...
2020-04-18 16:35:34,586 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-04-18 16:35:34,599 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-18 16:35:34,603 INFO [org.geoserver] - Loaded style 'dem'
2020-04-18 16:35:34,615 INFO [org.geoserver] - Loaded style 'restricted'
2020-04-18 16:35:34,618 INFO [org.geoserver] - Loaded style 'poi'
2020-04-18 16:35:34,625 INFO [org.geoserver] - Loaded style 'pophatch'
2020-04-18 16:35:34,632 INFO [org.geoserver] - Loaded style 'grass'
2020-04-18 16:35:34,640 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-04-18 16:35:34,643 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-04-18 16:35:34,646 INFO [org.geoserver] - Loaded style 'capitals'
2020-04-18 16:35:34,651 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-04-18 16:35:34,662 INFO [org.geoserver] - Loaded style 'raster'
2020-04-18 16:35:34,666 INFO [org.geoserver] - Loaded style 'rain'
2020-04-18 16:35:34,670 INFO [org.geoserver] - Loaded style 'burg'
2020-04-18 16:35:34,674 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-04-18 16:35:34,680 INFO [org.geoserver] - Loaded style 'point'
2020-04-18 16:35:34,683 INFO [org.geoserver] - Loaded style 'generic'
2020-04-18 16:35:34,687 INFO [org.geoserver] - Loaded default workspace cite
2020-04-18 16:35:34,764 WARN [org.geoserver] - Ignoring workspace directory workspaces/csdi
2020-04-18 16:35:34,795 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-04-18 16:35:34,826 INFO [org.geoserver] - Loaded workspace 'sf'
2020-04-18 16:35:34,833 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-04-18 16:35:34,838 INFO [org.geoserver] - Loaded style 'population'
2020-04-18 16:35:34,839 INFO [org.geoserver] - Loaded workspace 'topp'
2020-04-18 16:35:34,843 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-04-18 16:35:34,844 INFO [org.geoserver] - Loaded workspace 'geotekne'
2020-04-18 16:35:34,854 INFO [org.geoserver] - Loaded workspace 'sde'
2020-04-18 16:35:34,856 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-04-18 16:35:34,870 INFO [org.geoserver] - Loaded style 'green'
2020-04-18 16:35:34,871 INFO [org.geoserver] - Loaded workspace 'cite'
2020-04-18 16:35:34,887 INFO [org.geoserver] - Loaded style 'line'
2020-04-18 16:35:34,891 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-04-18 16:35:34,904 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-18 16:35:34,919 INFO [org.geoserver] - Loaded style 'dem'
2020-04-18 16:35:34,921 INFO [org.geoserver] - Loaded style 'restricted'
2020-04-18 16:35:34,924 INFO [org.geoserver] - Loaded style 'poi'
2020-04-18 16:35:34,928 INFO [org.geoserver] - Loaded style 'pophatch'
2020-04-18 16:35:34,938 INFO [org.geoserver] - Loaded style 'grass'
2020-04-18 16:35:34,944 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-04-18 16:35:34,952 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-04-18 16:35:34,959 INFO [org.geoserver] - Loaded style 'capitals'
2020-04-18 16:35:34,969 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-04-18 16:35:34,976 INFO [org.geoserver] - Loaded style 'raster'
2020-04-18 16:35:34,991 INFO [org.geoserver] - Loaded style 'rain'
2020-04-18 16:35:34,993 INFO [org.geoserver] - Loaded style 'burg'
2020-04-18 16:35:34,994 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-04-18 16:35:35,005 INFO [org.geoserver] - Loaded style 'point'
2020-04-18 16:35:35,012 INFO [org.geoserver] - Loaded style 'generic'
2020-04-18 16:35:35,020 INFO [org.geoserver] - Loaded default workspace cite
2020-04-18 16:35:35,070 WARN [org.geoserver] - Ignoring workspace directory workspaces/csdi
2020-04-18 16:35:35,127 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-04-18 16:35:35,135 INFO [org.geoserver] - Loaded workspace 'sf'
2020-04-18 16:35:35,141 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-04-18 16:35:35,145 INFO [org.geoserver] - Loaded workspace 'topp'
2020-04-18 16:35:35,151 INFO [org.geoserver] - Loaded workspace 'geotekne'
2020-04-18 16:35:35,156 INFO [org.geoserver] - Loaded workspace 'cite'
2020-04-18 16:35:35,164 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-04-18 16:35:35,174 INFO [org.geoserver] - Loaded workspace 'sde'
2020-04-18 16:35:36,203 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-04-18 16:35:37,140 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-04-18 16:35:37,207 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-04-18 16:35:40,462 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-04-18 16:35:40,511 INFO [org.geoserver] - Loaded layer 'poi'
2020-04-18 16:35:40,552 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-04-18 16:35:40,560 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-04-18 16:35:40,578 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-04-18 16:35:40,590 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-04-18 16:35:40,619 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-04-18 16:35:40,629 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-04-18 16:35:40,667 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-04-18 16:35:40,793 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-04-18 16:35:40,856 INFO [org.geoserver] - Loaded layer 'poi'
2020-04-18 16:35:40,890 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-04-18 16:35:40,901 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-04-18 16:35:40,919 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-04-18 16:35:40,934 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-04-18 16:35:40,950 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-04-18 16:35:40,958 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-04-18 16:35:40,986 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-04-18 16:35:41,446 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-04-18 16:35:41,500 INFO [org.geoserver] - Loaded layer 'poi'
2020-04-18 16:35:41,527 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-04-18 16:35:41,534 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-04-18 16:35:41,552 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-04-18 16:35:41,561 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-04-18 16:35:41,579 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-04-18 16:35:41,587 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-04-18 16:35:41,634 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-04-18 16:35:42,117 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-04-18 16:35:42,123 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-04-18 16:35:42,144 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-04-18 16:35:42,144 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-04-18 16:35:42,146 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-04-18 16:35:42,159 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-04-18 16:35:42,175 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-04-18 16:35:42,179 INFO [org.geoserver] - Loaded layer 'roads'
2020-04-18 16:35:42,187 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-04-18 16:35:42,192 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-04-18 16:35:42,195 INFO [org.geoserver] - Loaded layer 'restricted'
2020-04-18 16:35:42,196 INFO [org.geoserver] - Loaded layer 'roads'
2020-04-18 16:35:42,202 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-04-18 16:35:42,206 INFO [org.geoserver] - Loaded layer 'archsites'
2020-04-18 16:35:42,214 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-04-18 16:35:42,218 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-04-18 16:35:42,221 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-04-18 16:35:42,230 INFO [org.geoserver] - Loaded layer 'restricted'
2020-04-18 16:35:42,231 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-04-18 16:35:42,234 INFO [org.geoserver] - Loaded layer 'streams'
2020-04-18 16:35:42,246 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-04-18 16:35:42,251 INFO [org.geoserver] - Loaded layer 'archsites'
2020-04-18 16:35:42,262 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-04-18 16:35:42,270 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-04-18 16:35:42,279 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-04-18 16:35:42,294 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-04-18 16:35:42,298 INFO [org.geoserver] - Loaded layer 'streams'
2020-04-18 16:35:42,309 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-04-18 16:35:42,316 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-04-18 16:35:42,320 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-04-18 16:35:42,330 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-04-18 16:35:42,336 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-04-18 16:35:42,339 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-04-18 16:35:42,343 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-04-18 16:35:42,346 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-04-18 16:35:42,348 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-04-18 16:35:42,352 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-04-18 16:35:42,363 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-04-18 16:35:42,367 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-04-18 16:35:42,369 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-04-18 16:35:42,373 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-04-18 16:35:42,382 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-04-18 16:35:42,387 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-04-18 16:35:42,397 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-04-18 16:35:42,403 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-04-18 16:35:42,411 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-04-18 16:35:42,412 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-04-18 16:35:42,418 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-04-18 16:35:42,438 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-04-18 16:35:42,447 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-04-18 16:35:42,457 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-04-18 16:35:42,464 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-04-18 16:35:42,470 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-04-18 16:35:42,475 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-04-18 16:35:42,487 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-04-18 16:35:42,492 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-04-18 16:35:42,506 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-04-18 16:35:42,517 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-04-18 16:35:42,526 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-04-18 16:35:42,536 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-04-18 16:35:42,540 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-04-18 16:35:42,556 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-04-18 16:35:42,563 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-04-18 16:35:42,563 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-04-18 16:35:42,565 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-04-18 16:35:42,592 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-04-18 16:35:42,596 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-04-18 16:35:42,607 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-04-18 16:35:42,616 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-04-18 16:35:42,619 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-04-18 16:35:42,620 INFO [org.geoserver] - Loaded layer 'states'
2020-04-18 16:35:42,658 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-04-18 16:35:42,692 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-04-18 16:35:42,699 INFO [org.geoserver] - Loaded layer 'states'
2020-04-18 16:35:42,964 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-04-18 16:35:42,981 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-04-18 16:35:43,002 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-04-18 16:35:43,014 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-04-18 16:35:43,019 INFO [org.geoserver] - Loaded layer 'roads'
2020-04-18 16:35:43,059 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-04-18 16:35:43,073 INFO [org.geoserver] - Loaded layer 'restricted'
2020-04-18 16:35:43,097 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-04-18 16:35:43,106 INFO [org.geoserver] - Loaded layer 'archsites'
2020-04-18 16:35:43,139 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-04-18 16:35:43,146 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-04-18 16:35:43,170 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-04-18 16:35:43,187 INFO [org.geoserver] - Loaded layer 'streams'
2020-04-18 16:35:43,216 INFO [org.geoserver] - Loaded data store 'geotekedb', enabled
2020-04-18 16:35:43,221 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-04-18 16:35:43,322 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-04-18 16:35:43,328 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-04-18 16:35:43,342 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-04-18 16:35:43,360 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-04-18 16:35:43,361 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-04-18 16:35:43,375 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-04-18 16:35:43,384 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-04-18 16:35:43,411 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-04-18 16:35:43,412 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-04-18 16:35:43,425 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-04-18 16:35:43,427 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-04-18 16:35:43,471 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-04-18 16:35:43,460 WARN [org.geoserver] - Failed to load data store 'geotekedb'
java.lang.IllegalArgumentException: Store 'geotekedb' already exists in workspace 'geotekne'
	at org.geoserver.catalog.impl.CatalogImpl.validate(CatalogImpl.java:202)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:169)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:730)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:579)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:397)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:34)
	at org.geoserver.config.ReadOnlyGeoServerLoader.loadCatalog(ReadOnlyGeoServerLoader.java:47)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:261)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:57)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1737)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	a2020-04-18 16:35:43,486 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
t org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-04-18 16:35:43,489 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-04-18 16:35:43,496 INFO [org.geoserver] - Loaded data store 'geotekedb', enabled
2020-04-18 16:35:43,521 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-04-18 16:35:43,534 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-04-18 16:35:43,539 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-04-18 16:35:43,556 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-04-18 16:35:43,571 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-04-18 16:35:43,576 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-04-18 16:35:43,583 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-04-18 16:35:43,591 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-04-18 16:35:43,592 INFO [org.geoserver] - Read catalog in 9.320 s
2020-04-18 16:35:43,612 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-04-18 16:35:43,627 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-04-18 16:35:43,671 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-04-18 16:35:43,680 INFO [org.geoserver] - Loaded layer 'states'
2020-04-18 16:35:43,696 WARN [org.geoserver] - Failed to load data store 'geotekedb'
java.lang.IllegalArgumentException: Store 'geotekedb' already exists in workspace 'geotekne'
	at org.geoserver.catalog.impl.CatalogImpl.validate(CatalogImpl.java:202)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:169)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:730)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:579)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:397)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:34)
	at org.geoserver.config.ReadOnlyGeoServerLoader.loadCatalog(ReadOnlyGeoServerLoader.java:47)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:261)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:57)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1737)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-04-18 16:35:43,734 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-04-18 16:35:43,744 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-04-18 16:35:43,755 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-04-18 16:35:43,768 INFO [org.geoserver] - Read catalog in 10.14 s
2020-04-18 16:35:44,145 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl--74cb6dd:1718e255787:-8000', enabled
2020-04-18 16:35:44,166 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-18 16:35:44,185 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl--6e16255a:1718e2557b0:-8000', enabled
2020-04-18 16:35:44,212 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-04-18 16:35:44,222 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-18 16:35:44,254 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-18 16:35:44,254 INFO [org.geoserver] - Loaded data store 'geotekedb', enabled
2020-04-18 16:35:44,271 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-04-18 16:35:44,335 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-18 16:35:44,339 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:35:44,441 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:35:44,505 WARN [org.geoserver] - Failed to load data store 'geotekedb'
java.lang.IllegalArgumentException: Store 'geotekedb' already exists in workspace 'geotekne'
	at org.geoserver.catalog.impl.CatalogImpl.validate(CatalogImpl.java:202)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:169)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:730)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:579)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:397)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:34)
	at org.geoserver.config.ReadOnlyGeoServerLoader.loadCatalog(ReadOnlyGeoServerLoader.java:47)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:261)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:57)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1737)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:674)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:46)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:192)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:502)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:151)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:172)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:416)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:65)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:145)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:576)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:238)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)
	at org.eclipse.jetty.server.Server.start(Server.java:418)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)
	at org.eclipse.jetty.server.Server.doStart(Server.java:382)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1572)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1512)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1511)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:220)
	at org.eclipse.jetty.start.Main.start(Main.java:490)
	at org.eclipse.jetty.start.Main.main(Main.java:77)
2020-04-18 16:35:44,577 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-04-18 16:35:44,591 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:35:44,592 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:35:44,592 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:35:44,595 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-04-18 16:35:44,600 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:35:44,602 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:35:44,603 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:35:44,613 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-04-18 16:35:44,631 INFO [org.geoserver] - Read catalog in 10.03 s
2020-04-18 16:35:44,788 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:35:44,788 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-18 16:35:44,788 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-18 16:35:44,788 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:35:44,923 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:35:44,928 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-18 16:35:44,929 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-18 16:35:44,936 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:35:44,956 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-18 16:35:44,961 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-18 16:35:45,042 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-5169aa03:1718e255b10:-8000', enabled
2020-04-18 16:35:45,079 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-18 16:35:45,088 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-18 16:35:45,109 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-18 16:35:45,132 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-18 16:35:45,133 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-18 16:35:45,133 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-18 16:35:45,156 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-04-18 16:35:45,205 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-18 16:35:45,264 INFO [gwc.layer] - Loaded 22 tile layers in 128.8 ms
2020-04-18 16:35:45,264 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-18 16:35:45,264 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-18 16:35:45,265 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-18 16:35:45,287 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:35:45,322 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-04-18 16:35:45,359 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:35:45,361 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-04-18 16:35:45,362 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:35:45,397 INFO [gwc.layer] - Loaded 22 tile layers in 131.1 ms
2020-04-18 16:35:45,415 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-04-18 16:35:45,428 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:35:45,434 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-04-18 16:35:45,435 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:35:45,527 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:35:45,528 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:35:45,528 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-04-18 16:35:45,599 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-18 16:35:45,627 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-18 16:35:45,943 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:35:45,953 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:35:45,966 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:35:45,971 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:35:45,995 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:35:46,003 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:35:46,027 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:35:46,033 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:35:46,037 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:35:46,041 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-18 16:35:46,046 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-18 16:35:46,049 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-18 16:35:46,055 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-18 16:35:46,057 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-18 16:35:46,062 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-18 16:35:46,064 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-18 16:35:46,074 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-04-18 16:35:46,122 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-04-18 16:35:46,200 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-18 16:35:46,330 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-18 16:35:46,355 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-18 16:35:46,378 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-18 16:35:46,547 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-18 16:35:46,549 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-18 16:35:46,553 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-18 16:35:46,678 INFO [gwc.layer] - Loaded 22 tile layers in 122.5 ms
2020-04-18 16:35:46,706 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-04-18 16:35:46,736 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:35:46,745 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /var/local/geoserver, using it as the default prefix. ***
2020-04-18 16:35:46,746 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2020-04-18 16:35:46,956 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-18 16:35:46,957 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-18 16:35:47,007 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-18 16:35:47,020 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-18 16:35:47,035 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-18 16:35:47,034 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-18 16:35:47,061 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-18 16:35:47,409 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:35:47,428 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-18 16:35:47,429 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-18 16:35:47,477 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-18 16:35:47,483 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-18 16:35:47,509 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/var/local/geoserver/gwc'.
2020-04-18 16:35:47,525 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:35:47,537 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-18 16:35:47,539 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-18 16:35:47,539 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-18 16:35:47,562 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500.0 MB
2020-04-18 16:35:47,725 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-18 16:35:48,446 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-18 16:35:48,559 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-18 16:35:48,579 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-18 16:35:49,050 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-18 16:35:49,052 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-18 16:35:50,304 INFO [cluster.impl] - Using brokerURI: vm://21e983fda536-d8910752abcc?create=false&waitForStart=5000
2020-04-18 16:35:50,320 INFO [cluster.impl] - Using brokerURI: vm://b2bc1e23bced-d481cefb36c5?create=false&waitForStart=5000
2020-04-18 16:35:51,983 INFO [cluster.impl] - Using brokerURI: vm://57d05a51a536-56f719f54d71?create=false&waitForStart=5000
2020-04-18 16:35:55,964 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-04-18 16:35:56,179 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-04-18 16:35:59,657 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-04-18 16:36:09,895 INFO [cluster.impl] - Starting the embedded brokerURI
2020-04-18 16:36:11,751 INFO [cluster.impl] - Starting the embedded brokerURI
2020-04-18 16:36:12,216 INFO [cluster.impl] - Embedded brokerURI is now started
2020-04-18 16:36:12,216 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[21e983fda536-d8910752abcc]
2020-04-18 16:36:12,247 INFO [cluster.client] - Connecting...
2020-04-18 16:36:12,247 INFO [cluster.impl] - Using brokerURI: vm://21e983fda536-d8910752abcc?create=false&waitForStart=5000
2020-04-18 16:36:12,498 INFO [cluster.client] - Registration...
2020-04-18 16:36:12,498 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-04-18 16:36:12,498 INFO [cluster.client] - Waiting for registration...(1/3)
2020-04-18 16:36:12,622 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.26.0.3:40110 failed: java.io.EOFException
2020-04-18 16:36:13,763 INFO [cluster.impl] - Embedded brokerURI is now started
2020-04-18 16:36:13,764 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[b2bc1e23bced-d481cefb36c5]
2020-04-18 16:36:13,765 INFO [cluster.client] - Connecting...
2020-04-18 16:36:13,765 INFO [cluster.impl] - Using brokerURI: vm://b2bc1e23bced-d481cefb36c5?create=false&waitForStart=5000
2020-04-18 16:36:13,980 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.26.0.4:59738 failed: java.io.EOFException
2020-04-18 16:36:13,996 INFO [cluster.client] - Registration...
2020-04-18 16:36:13,996 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-04-18 16:36:13,996 INFO [cluster.client] - Waiting for registration...(1/3)
2020-04-18 16:36:14,920 INFO [cluster.impl] - Starting the embedded brokerURI
2020-04-18 16:36:16,403 INFO [cluster.impl] - Embedded brokerURI is now started
2020-04-18 16:36:16,404 INFO [cluster.impl] - Started the embedded brokerURI: BrokerService[57d05a51a536-56f719f54d71]
2020-04-18 16:36:16,408 INFO [cluster.client] - Connecting...
2020-04-18 16:36:16,414 INFO [cluster.impl] - Using brokerURI: vm://57d05a51a536-56f719f54d71?create=false&waitForStart=5000
2020-04-18 16:36:16,533 INFO [cluster.client] - Registration...
2020-04-18 16:36:16,535 INFO [cluster.client] - Impossible to register GeoServer with destination, waiting...
2020-04-18 16:36:16,536 INFO [cluster.client] - Waiting for registration...(1/3)
2020-04-18 16:36:16,933 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.26.0.5:47876 failed: java.io.EOFException
2020-04-18 16:36:22,499 INFO [cluster.client] - Registration...
2020-04-18 16:36:22,499 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-04-18 16:36:23,082 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-18 16:36:23,091 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-18 16:36:23,285 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-18 16:36:23,286 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-18 16:36:23,295 INFO [geoserver.importer] - Enabling import store: memory
2020-04-18 16:36:23,296 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:36:23,296 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:36:23,997 INFO [cluster.client] - Registration...
2020-04-18 16:36:23,997 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-04-18 16:36:24,401 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-18 16:36:24,407 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-18 16:36:24,597 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-18 16:36:24,598 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-18 16:36:24,606 INFO [geoserver.importer] - Enabling import store: memory
2020-04-18 16:36:24,606 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:36:24,606 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:36:26,538 INFO [cluster.client] - Registration...
2020-04-18 16:36:26,538 INFO [cluster.client] - Now GeoServer is registered with the destination
2020-04-18 16:36:26,973 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-18 16:36:26,979 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-18 16:36:27,134 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-18 16:36:27,136 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-18 16:36:27,145 INFO [geoserver.importer] - Enabling import store: memory
2020-04-18 16:36:27,145 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:36:27,145 INFO [cluster.server] - Activating JMS Catalog event publisher...
2020-04-18 16:37:03,023 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.26.0.3:39288 failed: java.io.EOFException
2020-04-18 16:37:03,023 WARN [TransportConnection.Transport] - Transport Connection to: vm://21e983fda536-d8910752abcc#4 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://21e983fda536-d8910752abcc#4) stopped.
2020-04-18 16:37:03,042 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.26.0.5:35002 failed: java.io.EOFException
2020-04-18 16:37:03,045 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.26.0.4:57854 failed: java.io.EOFException
2020-04-18 16:37:03,046 WARN [TransportConnection.Transport] - Transport Connection to: vm://b2bc1e23bced-d481cefb36c5#4 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://b2bc1e23bced-d481cefb36c5#4) stopped.
2020-04-18 16:37:03,051 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.26.0.3:41322 failed: java.io.EOFException
2020-04-18 16:37:03,044 WARN [TransportConnection.Transport] - Transport Connection to: vm://57d05a51a536-56f719f54d71#2 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://57d05a51a536-56f719f54d71#2) stopped.
2020-04-18 16:37:03,061 WARN [TransportConnection.Transport] - Transport Connection to: tcp://172.26.0.4:48924 failed: java.io.EOFException
2020-04-18 16:37:03,062 WARN [TransportConnection.Transport] - Transport Connection to: vm://57d05a51a536-56f719f54d71#4 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://57d05a51a536-56f719f54d71#4) stopped.
2020-04-18 16:37:03,062 WARN [TransportConnection.Transport] - Transport Connection to: vm://b2bc1e23bced-d481cefb36c5#6 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://b2bc1e23bced-d481cefb36c5#6) stopped.
2020-04-18 16:37:03,064 WARN [TransportConnection.Transport] - Transport Connection to: vm://21e983fda536-d8910752abcc#6 failed: org.apache.activemq.transport.TransportDisposedIOException: peer (vm://21e983fda536-d8910752abcc#6) stopped.
2020-04-18 16:37:03,089 WARN [client.JMSContainer] - Setup of JMS message listener invoker failed for destination 'queue://Consumer.57d05a51a536-56f719f54d71.VirtualTopic.geoserver' - trying to recover. Cause: The Consumer is closed
2020-04-18 16:37:03,129 WARN [TransportConnection.Service] - Failed to remove session 57d05a51a536-56f719f54d71->b2bc1e23bced-d481cefb36c5-44171-1587227776157-7:1:1
org.apache.activemq.broker.BrokerStoppedException: Broker has been stopped: org.apache.activemq.broker.BrokerService$6@5393d6db
	at org.apache.activemq.broker.ErrorBroker.removeSession(ErrorBroker.java:111)
	at org.apache.activemq.broker.BrokerFilter.removeSession(BrokerFilter.java:204)
	at org.apache.activemq.broker.TransportConnection.processRemoveSession(TransportConnection.java:787)
	at org.apache.activemq.broker.TransportConnection.processRemoveConnection(TransportConnection.java:885)
	at org.apache.activemq.broker.TransportConnection.doStop(TransportConnection.java:1230)
	at org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1160)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-04-18 16:37:03,129 WARN [TransportConnection.Service] - Failed to remove session 57d05a51a536-56f719f54d71->b2bc1e23bced-d481cefb36c5-44171-1587227776157-7:1:-1
org.apache.activemq.broker.BrokerStoppedException: Broker has been stopped: org.apache.activemq.broker.BrokerService$6@5393d6db
	at org.apache.activemq.broker.ErrorBroker.removeSession(ErrorBroker.java:111)
	at org.apache.activemq.broker.BrokerFilter.removeSession(BrokerFilter.java:204)
	at org.apache.activemq.broker.TransportConnection.processRemoveSession(TransportConnection.java:787)
	at org.apache.activemq.broker.TransportConnection.processRemoveConnection(TransportConnection.java:885)
	at org.apache.activemq.broker.TransportConnection.doStop(TransportConnection.java:1230)
	at org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1160)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-04-18 16:37:03,144 WARN [TransportConnection.Service] - Failed to remove connection ConnectionInfo {commandId = 1, responseRequired = true, connectionId = 57d05a51a536-56f719f54d71->b2bc1e23bced-d481cefb36c5-44171-1587227776157-7:1, clientId = NC_b2bc1e23bced-d481cefb36c5_inbound_57d05a51a536-56f719f54d71, clientIp = vm://57d05a51a536-56f719f54d71#2, userName = null, password = *****, brokerPath = null, brokerMasterConnector = false, manageable = false, clientMaster = true, faultTolerant = false, failoverReconnect = false}
org.apache.activemq.broker.BrokerStoppedException: Broker has been stopped: org.apache.activemq.broker.BrokerService$6@5393d6db
	at org.apache.activemq.broker.ErrorBroker.removeConnection(ErrorBroker.java:101)
	at org.apache.activemq.broker.BrokerFilter.removeConnection(BrokerFilter.java:134)
	at org.apache.activemq.broker.TransportConnection.processRemoveConnection(TransportConnection.java:901)
	at org.apache.activemq.broker.TransportConnection.doStop(TransportConnection.java:1230)
	at org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1160)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-04-18 16:37:03,150 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-04-18 16:37:03,159 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-04-18 16:37:03,165 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-04-18 16:37:03,166 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-04-18 16:37:03,166 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-04-18 16:37:03,171 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-04-18 16:37:03,171 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-04-18 16:37:03,176 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-04-18 16:37:03,177 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-04-18 16:37:03,178 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-04-18 16:37:03,178 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-04-18 16:37:03,179 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-04-18 16:37:03,182 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-04-18 16:37:03,185 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-04-18 16:37:03,186 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-04-18 16:37:03,186 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-04-18 16:37:03,193 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-04-18 16:37:03,194 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-04-18 16:37:03,195 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-04-18 16:37:03,197 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-04-18 16:37:03,198 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-04-18 16:37:03,200 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-04-18 16:37:08,118 ERROR [client.JMSContainer] - Could not refresh JMS Connection for destination 'queue://Consumer.57d05a51a536-56f719f54d71.VirtualTopic.geoserver' - retrying using FixedBackOff{interval=5000, currentAttempts=0, maxAttempts=unlimited}. Cause: Error while attempting to retrieve a connection from the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Broker named '57d05a51a536-56f719f54d71' does not exist.
